{"_default": {"1": {"erisrayanesh": {"issues": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/846", "title": "parameters argument for partial is missed", "body": "https://github.com/phalcon/incubator/blob/eb7d17522cb4037c3359faa6a32a11f4387b83c3/Library/Phalcon/Mvc/View/Engine/Twig.php#L58\r\n\r\nHi there. \r\nI think parameters argument for partial is missed", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/846/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bestirani2": {"issues": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/817", "title": "Database adapter for session", "body": "I get error after using regenerateId for database session\r\nmy problme solved after remove session_destroy()  at line 208\r\nhttps://github.com/phalcon/incubator/blob/master/Library/Phalcon/Session/Adapter/Database.php\r\nI think it is a loop.\r\n\r\n\r\n### Details\r\n* Phalcon Framework version:3.2\r\n* Phalcon Incubator version: 3.2\r\n* PHP Version: 7\r\n* Operating System: Ubuntu\r\n* Server: Nginx \r\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/817/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Jenselme": {"issues": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/815", "title": "Slug doesn't revert locale correctly", "body": "### Expected and Actual Behavior\r\n\r\nI am using [Slug.php](https://github.com/phalcon/incubator/blob/master/Library/Phalcon/Utils/Slug.php) to generate slugs in a phalcon project. The project is configured to display the dates in French. However, after I generate a slug, the dates are in English. If I don't create a slug, the dates are in French as expected.\r\n\r\nI expect the date to be always in French.\r\n\r\nLocale value (from `setlocale(LC_ALL, '0');`):\r\n```\r\nLC_CTYPE=C;LC_NUMERIC=C;LC_TIME=fr_FR.utf8;LC_COLLATE=C;LC_MONETARY=C;LC_MESSAGES=C;LC_PAPER=C;LC_NAME=C;LC_ADDRESS=C;LC_TELEPHONE=C;LC_MEASUREMENT=C;LC_IDENTIFICATION=C\r\n```\r\n\r\nI use the Slug like this:\r\n\r\n```php\r\n$slug = SlugGenerator::generate($str);\r\n```\r\nSample controller:\r\n\r\n```php\r\n<?php\r\n\r\nnamespace Controllers;\r\n\r\nuse Phalcon\\Utils\\Slug;\r\n\r\nclass TestController extends Base\\ViewController\r\n{\r\n    public function indexAction()\r\n    {\r\n        $this->view->setVars(['slug' => Slug::generate('\u00e0 moi')]);\r\n    }\r\n}\r\n```\r\n\r\nSample view\r\n```volt\r\n<div class=\"row page-content sale\">\r\n    {{ slug }}\r\n\r\n    <div class=\"date\">\r\n        <span class=\"day-string\">{{ strftime(\"%a\", strtotime('2017-10-22T08:00:00.000Z')) }}</span>\r\n        <span class=\"day\">{{ strftime(\"%d\", strtotime('2017-10-22T08:00:00.000Z')) }}</span>\r\n        <span class=\"month\">{{ strftime(\"%b\", strtotime('2017-10-22T08:00:00.000Z')) }}</span>\r\n    </div>\r\n</div>\r\n```\r\n\r\nI was able to track  the error to [this line](https://github.com/phalcon/incubator/blob/master/Library/Phalcon/Utils/Slug.php#L81): if I comment it, the locales are correctly restaure. Is the operation it does really required?\r\n\r\n### Details\r\n\r\n* Phalcon Framework version: 3.2.1\r\n* Phalcon Incubator version: v3.2.2\r\n* PHP Version: 7.1.6\r\n* Operating System: Linux inside docker\r\n* Server: Nginx\r\n* Other related info (Database, table schema): NA\r\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "galki": {"issues": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/814", "title": "graphql support", "body": "graphql is getting popular. after using graphql in a python project i dont want to go back to REST anymore. however phalcon is my only choice in php. i thus desire graphql support. also, i believe support will be inevitable in the near future as graphql overtakes rest/routing/acl - although this is a personal assumption.\r\n\r\nthere is [various php support](https://github.com/chentsulin/awesome-graphql#lib-php) and as you can see from that list frameworks like laravel and symphony already provide custom support.\r\n\r\nplease consider creating orm support for graphql (if you dont ill have to learn python/django)", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/814/reactions", "total_count": 5, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tkroll": {"issues": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/808", "title": "MongoCollection::find now requires fields param to be associative array", "body": "Old code using the fields param as an array now fails with only the _id returned.\r\n\r\n`$blah = Blah::find([`\r\n `'fields' => ['a', b', c'],`\r\n `'conditions' => ['a' => 1]`\r\n`]);`\r\n\r\nField parms now works when expressed with the field as the key and 1 as the value:\r\n\r\n`$blah = Blah::find([`\r\n `   'fields' => [`\r\n`        'a' => 1,`\r\n`        'b' => 1,`\r\n `       'c' => 1`\r\n `   ],`\r\n`    'conditions' => ['a' => 1]`\r\n`]);`\r\n\r\nNot sure why this changed. It does match Mongo shell syntax properly.", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/808/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sergeyklay": {"issues": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/801", "title": "[NFR] PostgreSQL row sorting: implement [NULLS { FIRST | LAST }]", "body": "_From @globalundo on April 15, 2013 13:36_\n\nCurrently, on executing following piece of code:\r\n\r\n``` php\r\n$robots = Robots::find(array(\r\n    \"order\" => \"name DESC NULLS LAST\"\r\n));\r\n```\r\n\r\nException rises:\r\n\r\n``` php\r\nPhalcon\\Mvc\\Model\\Exception: Syntax error, unexpected token IDENTIFIER(NULLS), near to ' LAST'\r\n```\r\n\r\n\n\n_Copied from original issue: phalcon/cphalcon#548_", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/801/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/796", "title": "Oracle auto incremented ID column is empty after model->save()", "body": "_From @skaosYan on June 8, 2015 9:58_\n\nI have Phalcon 2.0.2 and Oracle 12c. I have created sequence and set getSequnceName() function for my model. But model->save() still raises an error \"ORA-01400: cannot insert NULL\" for a primary key.\n\n\n_Copied from original issue: phalcon/cphalcon#10485_", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/796/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commits": [{"url": "https://api.github.com/repos/phalcon/incubator/commits/7a51b8e6392d3861384d5372d3121dfe625893a3", "message": "Merge pull request #847 from phalcon/3.2.x\n\nv3.2.6"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/5571692e9b18f7d7d42b7ff9682df70b7b895433", "message": "Merge pull request #845 from sergeysviridenko/3.2.fix_mongo_test\n\nFix undefined method in collection trait"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/eb7d17522cb4037c3359faa6a32a11f4387b83c3", "message": "Merge pull request #844 from phalcon/3.2.x\n\nFixed Travis CI building"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/48d0fdfcff2b748d948e37cf37bbdd27cb82e7f3", "message": "Merge pull request #843 from sergeysviridenko/3.2.fix_test\n\nFixed Travis Ci build"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/3362a5058f7b46b5da27d6905b90b4878b0a7655", "message": "Merge pull request #837 from phalcon/3.2.x\n\n3.2.5"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/042d5257c596deb021e44e5873cd2ad920f2bf98", "message": "Merge pull request #836 from rabrowne85/3.2.x\n\n#835 - Rename of EventManagerTrait.php to EventManagerAwareTrait.php"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/c93c6399a274d74c0b1c00e566b6c65e2d86afb7", "message": "Merge pull request #833 from sergeysviridenko/3.2.mailer_fix\n\nFixed view engines in mailer"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/f8595b41b8d452bddb91d4d2d6adfb0b2b3528db", "message": "Merge pull request #834 from phalcon/3.2.x\n\n3.2.4"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/158a247eb576fd048ebe919b2665790d1140c494", "message": "Merge pull request #832 from sergeysviridenko/3.2.event_nested_set\n\nAdded event manager to nestedSet"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/8cf7cf252b082aa302a038f4a63f1eecd9a42e74", "message": "Merge pull request #824 from sergeysviridenko/3.2.yaml_ext\n\nFixed yaml extension in tests"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/331c5e54a429a309c545b7ed464902785f76e202", "message": "Merge pull request #818 from sergeysviridenko/3.2.iban\n\nAdded IBAN validator"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/08fc3efe2a19f5ac5f2d53a2c2ac96f52aecef85", "message": "Merge pull request #820 from sergeysviridenko/3.2.aerospike_fix\n\nFix aerospike tests"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/a17fd7b5457d05b6e600675c68e698c48b9f7f38", "message": "Merge pull request #819 from ruudboon/patch-1\n\nUpdate README.md"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/6513c03986fd46db163a8c5e7bc5dbc6f6843e95", "message": "Merge pull request #813 from hisune/master\n\nminor mistake of syntax"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/d00e9531440c0ef8ac017fb7ecabb53e724dfd4e", "message": "Merge pull request #811 from baychae/master\n\nAdd Explicit and Implicit Deep Inherits to Phalcon\\Acl\\Adapter\\Redis::addInherit"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/comments/13858634", "body": "Don't use `sudo`.\nWe use  [container-based infrastructure](http://docs.travis-ci.com/user/workers/container-based-infrastructure/) like Docker.\nFor container-based infrastructure Travis disallow to use `sudo`.\n\nInstead of this use in .travis.yml\n\n``` yaml\nservices:\n  - mongodb\n```\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/comments/13858634/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/comments/21382146", "body": "Is it changed by mistake? Could you please open a new issue with code to reproduce the problem", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/comments/21382146/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/comments/21424695", "body": "Anyway we need an issue. Could you please open a new one?", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/comments/21424695/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/23128121", "body": "Fix it for compliance with the PSR-2 and in order to avoid the warning from Travis CI\n\n``` php\nreturn $this->db->execute(\n    'INSERT INTO ' . $this->table . ' VALUES(NULL, ?, ?, ?, ?, ?)',\n```\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/23128121/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/23128129", "body": "Fix it for compliance with the PSR-2 and in order to avoid the warning from Travis CI\n\n``` php\nif (!$this->db) {\n```\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/23128129/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "Jurigag": {"issues": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/794", "title": "MongoCollection doesn't have update method", "body": "Not sure if this is correct or not but there is `Phalcon\\Mvc\\Collection::update` but yet `Phalcon\\Mvc\\MongoCollection` doesn't override this method. I think we should have update method with proper code for php 7/7.1 too.\r\n\r\nIf someone doesn't know what's the difference between update and save - update just updates already existing instance only, save creates or updates instance, depending on operation(if collection exists).", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/794/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/752", "title": "Db Factory", "body": "https://github.com/phalcon/incubator/blob/master/Library/Phalcon/Db/Adapter/Factory.php\r\n\r\nThis class could be removed for 3.2.x since it will be built-in in phalcon 3.2.0 though in diffrent namespace - `Phalcon\\Db\\Adapter\\Pdo\\Factory` so maybe just change this class to call phalcon built-in factory and deprecate this one?", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/752/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/558", "title": "ACL Adapters in 3.0.x", "body": "How about implementing https://github.com/phalcon/docs/blob/master/en/reference/acl.rst#function-based-access in acl adapters ?\n\nDont know how exactly it should be working - i guess serializing/unserializing function ? But default serialize/deserialize methods in php cant serialize Closures so we would need to add/implement some library which will allow us such a thing.\n\nThere are some code for serializing/deserializing closures in php : http://www.htmlist.com/development/extending-php-5-3-closures-with-serialization-and-reflection/\n\nThat would need to implement additional class for ACL Functions i guess to make them serializable(they would be just objects).\n\n@sergeyklay\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/558/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commits": [{"url": "https://api.github.com/repos/phalcon/incubator/commits/34db963ab6eae653654aa49360b5296d3f69de76", "message": "Merge pull request #823 from phalcon/3.2.x\n\nv3.2.3"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "scottf-tvw": {"issues": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/787", "title": "allowDiskUse in aggregate ", "body": "Possible? can't seem to find a way to pass options when using `model::aggregate([pipeline])` \r\n\r\ncannot add options array to static method, even though the constructor allows it at the Aggregate class.", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/787/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dereckmartin": {"issues": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/766", "title": "MongoDB Uniqueness Validation Model::Update()", "body": "### Expected and Actual Behavior\r\n\r\nOn model validation, uniqueness validation is applied to a field.  In this case 'email'.  If the unique field value in the collection for the given id is same as the record id being updated, the validation should not fail.\r\n\r\n```php\r\n\r\n// Model\r\nclass Users extends MongoCollection\r\n    public $email;\r\n\r\n    public function validation()\r\n    {\r\n        $validator = new Validation();\r\n        $validator->add('email', new Uniqueness([\r\n            \"message\" => \"The email is already used\"\r\n            ])\r\n        );\r\n\r\n        return $this->validate($validator);\r\n    }\r\n}\r\n\r\n// Example Action\r\n//\r\n// Mongo Document:\r\n// { \"_id\" : ObjectId(\"5910b857d2a57d04844adca8\"), \"firstname\": \"test\", \"lastname\":\"user\", \"email\":\"tuser@example.tld\" }\r\n// JSON body:\r\n// { \"firstname\": \"test\", \"lastname\":\"user\", \"email\":\"tuser@example.tld\" }\r\n//\r\n    public function updateAction($id)\r\n    {\r\n        try {\r\n            $result = Users::findById($id);\r\n            $request_body = $this->request->getJsonRawBody();\r\n\r\n            $result->firstname = $request_body->firstname;\r\n            $result->lastname = $request_body->lastname;\r\n            // added if statement to show validation error when record has the same value for email\r\n            if ($result->email != $request_body->email) {\r\n                $result->email = $request_body->email;\r\n            }\r\n            $result->update();\r\n\r\n            $messages = $user->getMessages();\r\n\r\n            $m = [];\r\n            if (count($messages)) {\r\n                foreach ($messages as $msg) {\r\n                    array_push($m, $msg->getMessage());\r\n                }\r\n            }\r\n\r\n            $response = Phalcon\\Http\\Response();\r\n            $response->setJsonContent( [ 'messages' => $m ]);\r\n\r\n            return $response;\r\n        } catch (\\Exception $e) {\r\n\r\n        }\r\n    }\r\n\r\n```\r\n\r\nCurrently, validation is failing when updating a record with a uniqueness field when the old and new value are the same.\r\n\r\n### Details\r\n\r\n* Phalcon Framework version: (`php --ri phalcon`)\r\n\r\nWeb framework delivered as a C-extension for PHP\r\nphalcon => enabled\r\nAuthor => Phalcon Team and contributors\r\nVersion => 3.1.2\r\nBuild Date => Apr  6 2017 14:16:21\r\nPowered by Zephir => Version 0.9.7-1fae5e50ac\r\n\r\n* Phalcon Incubator version: (branch, composer version)\r\n\r\nIncubator: ^3.1\r\nComposer version @package_branch_alias_version@ (1.0.0-beta2) 2016-03-27 16:00:34\r\n\r\n* PHP Version: (`php -v`)\r\n\r\nPHP 7.0.18-1+deb.sury.org~xenial+1 (cli) (built: Apr 11 2017 14:36:44) ( NTS )\r\nCopyright (c) 1997-2017 The PHP Group\r\nZend Engine v3.0.0, Copyright (c) 1998-2017 Zend Technologies\r\n    with Zend OPcache v7.0.18-1+deb.sury.org~xenial+1, Copyright (c) 1999-2017, by Zend Technologies\r\n\r\n\r\n* Operating System: Ubuntu 16.04 LTS\r\n* Server: Nginx\r\n* Database: MongoDB v3.4.4\r\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/766/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "armonb": {"issues": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/750", "title": "MongoCollection datatypes", "body": "Since v3.0.4 (commit 898ea411565091f33d9249c429674dfcccaf36a4)\r\n\r\nWhen retrieving documents from a mongo database using Phalcon\\Mvc\\MongoCollection ,  all objects are now retrieved as arrays ignoring the data type originally specified.\r\n\r\nI assume this is due to the change on line 303.", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/comments/21374142", "body": "Why has the type map changed from object to array on Line 303 of MongoCollection.php?", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/comments/21374142/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/comments/21412658", "body": "I think it is a mistake. You can test by creating an object inside a mongo document, fetching the document using this class. The returned document now contains an array instead of the original object.", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/comments/21412658/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "terax6669": {"issues": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/749", "title": "Phalcon\\Mailer - Missing spool transport", "body": "This is a feature request. Are there any plans to add spool support?", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dercoder": {"issues": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/739", "title": "Aerospike Cache prepare content part missing", "body": "The content will not be prepared like here:\r\nhttps://github.com/phalcon/cphalcon/blob/master/phalcon/cache/backend/redis.zep#L226\r\nhttps://github.com/phalcon/cphalcon/blob/master/phalcon/cache/backend/redis.zep#L173", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/739/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "RayHughes": {"issues": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/735", "title": "Session adapter cookie not encrypted", "body": "When using https://github.com/phalcon/incubator/tree/master/Library/Phalcon/Session/Adapter , the session token cookie is not encrypted as it should be. Rather, the raw value is provided to the users browser.\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/735/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ulfims": {"issues": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/718", "title": "Dialect Oracle not working on Oracle Express 11.2", "body": "> Questions should go to https://forum.phalconphp.com\r\n> Documentation issues should go to https://github.com/phalcon/docs/issues\r\n\r\n### Expected and Actual Behavior\r\n\r\n> **Query table get Error result**\r\n\r\nORM Generate:\r\n```php\r\nSELECT [Orders].* FROM [Orders]\r\n```\r\nError Message:\r\n```\r\nOCIStmtExecute: ORA-00904: \"ORDERS\": invalid identifier\r\n (/home/ulfi/php-7.0.8/ext/pdo_oci/oci_statement.c:159)\r\n\r\n```\r\n> Provide minimal script to reproduce the issue\r\n\r\n```php\r\n$transactions = $app->modelsManager->createBuilder()->from('Orders');\r\n```\r\n\r\nConfiguration database:\r\n```\r\n     array(\r\n        'adapter'   => 'Oracle',\r\n        'username'  => 'user',\r\n        'password'  => 'password',\r\n        'dbname'    => '(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=192.168.7.43)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=xe)(FAILOVER_MODE=(TYPE=SELECT)(METHOD=BASIC)(RETRIES=20)(DELAY=5))))',\r\n        'options' => array(PDO::ATTR_CASE => PDO::CASE_UPPER, PDO::ATTR_PERSISTENT => TRUE,),\r\n        'dialectClass' => Phalcon\\Db\\Dialect\\Oracle::class,\r\n),\r\n\r\n```\r\n### Details\r\n\r\n* Phalcon Framework version: \r\n\r\n```\r\nWeb framework delivered as a C-extension for PHP\r\nphalcon => enabled\r\nAuthor => Phalcon Team and contributors\r\nVersion => 3.0.2\r\nBuild Date => Nov 27 2016 13:38:57\r\nPowered by Zephir => Version 0.9.4a-dev\r\n\r\nDirective => Local Value => Master Value\r\nphalcon.db.escape_identifiers => On => On\r\nphalcon.db.force_casting => Off => Off\r\nphalcon.orm.events => On => On\r\nphalcon.orm.virtual_foreign_keys => On => On\r\nphalcon.orm.column_renaming => On => On\r\nphalcon.orm.not_null_validations => On => On\r\nphalcon.orm.exception_on_failed_save => Off => Off\r\nphalcon.orm.enable_literals => On => On\r\nphalcon.orm.late_state_binding => Off => Off\r\nphalcon.orm.enable_implicit_joins => On => On\r\nphalcon.orm.cast_on_hydrate => Off => Off\r\nphalcon.orm.ignore_unknown_columns => Off => Off\r\n\r\n```\r\n* Phalcon Incubator version: \r\nincubator Version: `\"phalcon/incubator\": \"^3.0\"`\r\nComposer version: `Composer version 1.2.4 2016-12-06 22:00:51`\r\n* PHP Version: \r\n```\r\nPHP 7.0.8-0ubuntu0.16.04.3 (cli) ( NTS )\r\nCopyright (c) 1997-2016 The PHP Group\r\nZend Engine v3.0.0, Copyright (c) 1998-2016 Zend Technologies\r\n    with Zend OPcache v7.0.8-0ubuntu0.16.04.3, Copyright (c) 1999-2016, by Zend Technologies\r\n\r\n```\r\n* Operating System: `Ubuntu 16.04`\r\n* Server: `Apache 2.4`\r\n* Other related info : ", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/718/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dschissler": {"issues": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/702", "title": "The entire Firebug extension has been discontinued", "body": "Is there any other potential technology in any browser that could provide the header based logging that was possible with Firebug + Firelogger?", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/702/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 1, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "blm14": {"issues": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/659", "title": "Is there any way to apply this to PHQL and view of records not just changes?", "body": "topic says it all. I want to be able to use this to also log changes coming from PHQL and also to log views of records and which fields were viewed. \n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/659/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "XartIrok": {"issues": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/610", "title": "[2.1.x] twig problem with render action", "body": "when i try use twig in my project i get problem with render diffrent action\n1. try\nloader engine\n\n``` php\n        '.twig' => function($view, $di) {\n            @mkdir(APP_PATH . '/cache/twig/' . APP_ENV);\n            $options = array();\n//            if (APP_ENV == 'prod')\n//                $options = array('cache' => APP_PATH . '/cache/twig/' . APP_ENV );\n            return new TwigEngine($view, $di, $options);\n        }\n```\n\nmain view path: view/admin/index.php\n\n``` twig\n        <div class=\"container\">\n            {% block content %}{% endblock %}\n        </div>\n```\n\naction view path: view/admin/login/index.php\n\n``` twig\n{% extends \"index.twig\" %}\n\n{% block content %}\n    test\n    {{ form() }}\n        {{ form.render('logon') }}\n    {{ endForm() }}\n{% endblock %}\n```\n\non this try nothing render null\ntry second a change only the main view\n\n``` twig\n        <div class=\"container\">\n            {{ content() }}\n        </div>\n```\n\nthis try end render but only text input was render by a string not as it should\n\na that moment i try use a stadard **volt**\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/610/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mynumbercrunching": {"issues": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/586", "title": "phalcon Twig", "body": "I have twig working except for the Twig_Extension_Debug.  \n\nThis is required to use the dump().\n\n``` php\n$twig->addExtension(new Twig_Extension_Debug());\n```\n\nam i missing something?\n\ncheers.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/586/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hisorange": {"issues": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/560", "title": "Eagerloading alias to lower", "body": "Aye is there a need for [this](https://github.com/phalcon/incubator/blob/2.1.x/Library/Phalcon/Mvc/Model/EagerLoading/EagerLoad.php#L68) to be strtolower?\n\nCuz this almost drove me nuts, my many2many relations are named in camelCase fashion so shopProducts will be loaded under shopproducts with eagerloading.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/560/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Wayne-Wen": {"issues": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/501", "title": "Why there is not model id for Audit in Blameable behavior?", "body": "When I'm looking into the code of \"Blameable\" behavior, I found:\n\n```\n$audit->model_name = get_class($model);\n```\n\nLooks like it only stores the name of model. If I have two Products (Production A and Product B). And I have made changes on these two products. How can I know what are the changes of product A and what are the changes of product B. Because their model name are the same-----\"Product\", and there is not model id to distinguish them.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/501/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sergeysviridenko": {"issues": [], "commits": [{"url": "https://api.github.com/repos/phalcon/incubator/commits/2019931cbe6ca1fe56ac4495bfbba7397361309f", "message": "Fix undefined method in collection trait"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/90e5a6d516d10f10c6ae2b47e254e3193b1c109a", "message": "fix_test"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/d6e0782e1636b7ea391723baeb2a1d7e0e899c09", "message": "Fixed view engines in mailer"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/df9a839f079356ce01578ed9daf66a63a7950b23", "message": "Added event manager to nestedSet"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/4d4f2e577e077f43f4b835ee8551798b5287a231", "message": "fix yaml extension"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/151af08411550431e39b2189796c25db7710f837", "message": "Added IBAN validator"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/b47c1a9a5a3caa3da77be2aad7520eb67e5e83bf", "message": "Added fix aerospike test"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rabrowne85": {"issues": [], "commits": [{"url": "https://api.github.com/repos/phalcon/incubator/commits/ca7bc06d1a182c7b77d80f5b84c518c75863d4e5", "message": "#835 - Rename of EventManagerTrait to EventManagerAwareTrait"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ruudboon": {"issues": [], "commits": [{"url": "https://api.github.com/repos/phalcon/incubator/commits/73fc40c35de28cb26acd207ac7962aad4a070b68", "message": "Update README.md\n\nPrevent message: You are using the deprecated option \"dev\". Dev packages are installed by default"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hisune": {"issues": [], "commits": [{"url": "https://api.github.com/repos/phalcon/incubator/commits/61fd0e36827d8f5f44083f80260ecd96afac64f4", "message": "minor mistake of syntax\n\nminor mistake of syntax"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "baychae": {"issues": [], "commits": [{"url": "https://api.github.com/repos/phalcon/incubator/commits/561adebbcfc23bea5b40f30ec77a4c7535ceb2cf", "message": "Adding example usage to @inheritdoc"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/72d8cb46c09f274491c9ca805a39cc2b708c92f4", "message": "Code to PSR2 Standards"}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/a0c2fb670acf765626b77b534ecd81442a1f186e", "message": "Recurse through inheritance chain for implicit role inheritance."}, {"url": "https://api.github.com/repos/phalcon/incubator/commits/e2a658bb8de149fbe5896032ce982cd378e1bca8", "message": "Add deep inherits when array passed to addInherit"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kideny": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/840", "title": "add a param , we can custom collection name before getResultset()", "body": "Hello!\r\nnew feature\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/incubator/blob/master/CONTRIBUTING.md)?\r\n- [ ] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Fenikkusu": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/839", "title": "Converting Testing To Allow Either Codeception Based Testing or PHPUnit", "body": "Hello!\r\n\r\n* Type: new feature\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/incubator/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nThere's a lot going on here, but it's actually fairly simple. Currently, the Phalcon Test Classes are all built specifically for PHPUnit. Even if you are using Codeception to run your tests, your limited to using the PHPUnit setup and you loose some of the extra benefits of using the Codeception base instead (IE: _before shorthand, Test Helpers, DB Methods, etc). This PR is an attempt to bridge that gap while also maintaining some backwards compatibility. In order to accomplish this, a number of changes were made:\r\n\r\n1) Each of the test cases were converted to traits and moved to Library\\Test\\Traits.\r\n2) Slight changes were made to the new traits to make the platform independent (Renamed setUp/tearDown to setUpPhalcon/tearDownPhalcon respectively).\r\n3) New classes were created in Library\\Test\\PHPUnit that use the new traits and call the setUp/tearDown functions appropriately.\r\n4) New classes were created in Library\\Test\\Codeception that also use the new traits and call the setUp/tearDown functions appropriately.\r\n5) Placeholder classes replaced the original TestCases that just extend the appropriate PHPUnit edition of the class.\r\n\r\nI've added a number of Unit Tests in place to help ensure this logic is working correctly and thus far I've had no issues. I'm going ahead and creating the PR so others can look over the tests while I run more direct tests to ensure everything is working as intended.\r\n\r\nI should mention that while I've done my best to make these changes backwards compatible, there is one scenario where they will not be backwards compatible. If someone were to ever use an 'instanceof' command on the placeholder TestCases, then these may break. This seems highly unlikely, but I wanted to make sure to mention it. For example:\r\n\r\n```\r\n$testCase = new \\Phalcon\\Test\\FunctionalTestCase(); //Abstract Class, Not Technically Possible\r\nif ($testCase instance of \\Phalcon\\Test\\UnitTestCase) {\r\n  //This will never be reached now.\r\n}\r\n```\r\n\r\nPS: Way to many 'Test's - UnitTestCase, UnitTestCase, UnitTestCase, & UnitTestCaseTest", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wolftankk": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/827", "title": "Fix MongoCollection doesn't have update method", "body": "Hello!\r\n\r\n* Type: bug fix\r\n* #760 #794 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/incubator/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\n\r\nThanks", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Surt": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/754", "title": "Update _related property so Phalcon avoids to make a lazy loading", "body": "I need to know in phlacon model if the relationship is loaded. Actually it's impossible witthout something like this https://github.com/phalcon/cphalcon/pull/12772 because calling the property launchs the lazy loading.\r\n\r\nThen, I need the eagerload library to fill that protected property in the model (impossible by any means, so we need to push changes to phalcon: a new method or more arguments in getRelated or something so we can fill the _related array with the eager loaded results from the Loader class);\r\n\r\nReferences: https://github.com/stibiumz/phalcon.eager-loading/issues/12\r\n\r\nHello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/stibiumz/phalcon.eager-loading/issues/12\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/incubator/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Zaszczyk": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/723", "title": "fix setlocale() when diffrent locale types have diffrent values", "body": "Hello!\r\n\r\n* Type: bug fix \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/incubator/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n`setLocale()` returns string:\r\n```\r\nLC_CTYPE=en_GB;LC_NUMERIC=C;LC_TIME=C;LC_COLLATE=C;LC_MONETARY=C;LC_MESSAGES=C;LC_PAPER=C;LC_NAME=C;LC_ADDRESS=C;LC_TELEPHONE=C;LC_MEASUREMENT=C;LC_IDENTIFICATION=C\r\n```\r\nwhich must be parsed\r\n\r\nThanks\r\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "phalcon": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/10767681", "body": "Thanks Wojtek!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/10767681/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/11004763", "body": "Amazing, thanks!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/11004763/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/11015970", "body": "Hey, @Xrymz, can you add some usage instructions to the readme? https://github.com/phalcon/incubator/tree/master/Library/Phalcon/Session/Adapter#handlersocket\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/11015970/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13064532", "body": "thanks!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13064532/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13064550", "body": "the partial doesn't need to include the .twig extension, are you passing that in $partialPath\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13064550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13253768", "body": "I added a fix for this in 0.9.0 stable, could you try with this version?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13253768/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13260534", "body": "ok! thanks! but the adapter has a bug! this part is missing: https://github.com/phalcon/cphalcon/blob/master/unit-tests/ViewEnginesTest.php#L81\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13260534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13262100", "body": "I updated the adapter, can you check it out?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13262100/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13265709", "body": "https://github.com/phalcon/incubator/blob/master/Library/Phalcon/Mvc/View/Engine/Twig.php#L28\n\nSorry, we don't speak polish :)\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13265709/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13266506", "body": "I added other changes, please highlight me the exact lines I'm missing or please submit a pull request: https://help.github.com/articles/using-pull-requests\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13266506/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13266975", "body": "ok I updated the whole method, thanks\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13266975/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/14935807", "body": "Thanks Fedor, can you please change $record->$fieldConfirmation by $record->readAttribute($fieldConfirmation). This method can read the value of the field even if it is declared as protected.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/14935807/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/comments/5705716", "body": "There's no difference\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/comments/5705716/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "Xrymz": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/11008420", "body": "checked the set, get, has. works fine :)  I hope it will help someone. ps - my first pull request :))\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/11008420/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/11050675", "body": "okey, in 2-3 days I will try to write :)\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/11050675/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "niden": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/11009188", "body": "Good stuff!!!\n\nThe contents of this message may contain confidential or privileged\ninformation and is intended solely for the recipient(s). Use or\ndistribution to and by any other party is not authorized. If you are not\nthe intended recipient, copying, distribution or use of the contents of\nthis information is prohibited.\n\nOn Tue, Dec 4, 2012 at 1:18 PM, Xrymz notifications@github.com wrote:\n\n> checked the set, get, has. works fine :) I hope it will help someone. ps -\n> my first pull request :))\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/phalcon/incubator/pull/3#issuecomment-11008420.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/11009188/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/11619746", "body": "Thank you Eugene :)\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/11619746/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/12271220", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/12271220/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/12599426", "body": "Thank you!!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/12599426/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/12601923", "body": "If you don't mind can you change the readme file to reflect this?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/12601923/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/12604374", "body": "Thanks!!!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/12604374/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/5345596", "body": "@geekcode Could you please open a pull request with the correction?\n\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/5345596/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "tmihalik": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/12604355", "body": "Ok, changed readme file: https://github.com/tmihalik/incubator/commit/d16599a3b7fa4c0d355ceab54312d02e41425d81\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/12604355/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "Cmssspl": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13065006", "body": "You add first v. im change it, look https://gist.github.com/4690638, in the current declarations are incorrect $ data = null and no options.\n\nhttps://gist.github.com/4690638\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13065006/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13065118", "body": "Yes, im use only partial('catalogName / nameFile'), im change expand in files.\n\nPatch is certainly correct (if the change expands [files no patch in partial] starts to work ). The same problem occurs when the cache, cache is empty. :/\n\n'm currently using the cache built into the twig and function include(), it would be nice, however, that it started to work properly and do not have to use these to get around.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13065118/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13259170", "body": "{{ partial('templates/top') }} is fixed. \n\nThx\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13259170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13261082", "body": "Hmmm, do not change the render (). This error is not related to problem # 12?\n\nMaybe 35-37 line id bad or unnecessary for test? I am using this code, the only problem is # 12 -> bad fix -> # 13.\n\nPs. https://github.com/phalcon/incubator/blob/master/Library/Phalcon/Mvc/View/Engine/Twig.php has error...\n\nDeclarate:\nprivate function _registryFunctions($view)\n\nUse:\n$this->_registryFunctions()\n\nWher is $view? ;-)\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13261082/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13265617", "body": "https://github.com/phalcon/incubator/blob/master/Library/Phalcon/Mvc/View/Engine/Twig.php This?\n\n_registryFunctions($view) need $view...\n\nOk, im change my file:\nhttps://gist.github.com/Cmssspl/4690638\n\nYou can use it instead of the current as a whole. He fixes a bug, does not enforce use {{content () | raw}} add method partial () and fix default value is not correct.\n\nEdit: sorry. :P\n\nThx for speed fix. ;-)\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13265617/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13266032", "body": "Yes, this is error.\n\nLook my gist.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13266032/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13266274", "body": "He wanted to know why you not added other changes?\n1. add partial()\n2. change default var\n3. is_safe\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13266274/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13266828", "body": "https://gist.github.com/Cmssspl/4690638#file-twig-php-L32-L109\n\n;-)\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/13266828/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "suxxes": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/14936340", "body": "You are welcome and there you go.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/issues/comments/14936340/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "gsouf": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/comments/4742190", "body": "Please make a tag for older incubator for ext-phalcon. Or i will have to delete it and pull request by myself. Thanks \n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/comments/4742190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "Plaputta": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/comments/5433126", "body": "Yeah well, I had named it \"Memcached\" because Phalcon already has a Memcache Adapter, but Phalcon's implementation is very buggy. See https://github.com/phalcon/cphalcon/issues/1550 - Renaming it to \"Memcache\" made endeveit delete it in commit https://github.com/phalcon/incubator/commit/24e5d5b086709ae1790978d91965060b9e2fe9fd and now it's gone and we're left alone with the buggy version again :(\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/comments/5433126/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/comments/5457702", "body": "Oh great, didn't see that. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/comments/5457702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "andersonamuller": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/comments/5705684", "body": "The namespace is wrong, it should be `Phalcon\\Db\\Dialect`\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/comments/5705684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/comments/5705686", "body": "Same problem with the namespace\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/comments/5705686/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/phalcon/incubator/comments/5705711", "body": "Shouldn't the class be without the preceding `\\`?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/comments/5705711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "busyfree": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/5339051", "body": "key name is error ,it's should be 'port'\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/5339051/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "endeveit": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/13955091", "body": "This is MySQL specific statement, it will not work with PostgreSQL for example\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/13955091/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/14655180", "body": "It would be better if you escape identifiers such as \"value\", \"language\" and \"key_name\" with $db->escapeIdentifier()\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/14655180/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/14655213", "body": "Backticks for escaping `count` works only in MySQL\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/14655213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/14655276", "body": "Why did you renamed class?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/14655276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/13956219", "body": "You have a type here in col_modifiad_at\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/13956219/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/15038324", "body": "Agree\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/15038324/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/15038329", "body": "Ok\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/15038329/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/15038703", "body": "You think big. Maybe you should propose these ideas for cphalcon project?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/15038703/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/17434341", "body": "Why did you delete this function?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/17434341/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/19856203", "body": "You should use method \u00abexecute\u00bb.\nMethod \u00abquery\u00bb used only when the statement returns rows.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/19856203/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/21444976", "body": "Please make the $options optional to not break compatibility\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/21444976/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/21444988", "body": "And here too\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/21444988/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "thehe": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/15038283", "body": "because \"Yaml\" is already in MAIN Phalcon-Project?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/15038283/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/15038308", "body": "why we should escape these? they're hardcoded (which is very bad indeed) - it's just a \"slightly better version\" of the class... we should rewrite a LOT of components to allow dynamic column names (via options) etc...\nimho escapeIdentifier is not needed here - not injectable.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/15038308/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/15038315", "body": "oh really? i'll fix it the next days (i'm in \"short before deadline mode\" sry)...\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/15038315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/15038431", "body": "is it possible to have a discussion-platform for incubator? i have some GENERAL IDEAS and approaches to discuss... for me it's strange to name a \"mysql/postgres\"-adapter \"Database\", because there are so many db's out there... the abstraction layer in phalcon lacks of rewrite-support for queries against mssql etc. so that we should use the following pattern instead:\n\nabstract class for sql99-based adapters:\n--> instance class for mysql, postgresql etc.. which INHERIT sql99-adapter where we can \"change small things if they won't work for a special db-system\"...\n\ni mean - when we generalize the database-things, we should categorize and provide a) a general STANDARD class (sql99) and some specific classes for alternation of standard\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/15038431/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/17821973", "body": "afaik the impl of Phalcon's \"Yaml\" is broken or has some limitations - so \"Ex\" (suffixed: Extended) would be sufficent here?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/17821973/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "ogarbe": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/17214720", "body": "so we should suppress it from incubator instead of renaming.\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/17214720/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/17511172", "body": "i'm not fan of this namespace : your main class is \\Phalcon\\Mailer\\Mailer() ...\n\nthe namespace could be Mails (as we have Assets, Models, Events)\nand your main class could be called : \n\\Phalcon\\Mails\\Manager()\n\nas it is used to manage messages (send them)\n\nand as we have Assets / Models / Collections / Events ... managers\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/17511172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/17511232", "body": "Because at first quite all namespaces in Phalcon where about things they were working with : Assets, Models, Events, ...\nThe manager is an Assets manager or a Models manager ... The namespace naming is logical\nSo having something which manage mails (creates them, send them, (and perhaps parse received ones ?)) should be named (in my point of view) Mails\\Manager\n\nNow we have Translate and Logger namespaces, i don't like this as it's not the same point if view, for loggers, i would have prefered a Logs namespace and a Translations one. @phalcon what do you think about this ?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/17511232/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "rwilbert-digitec": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/17442818", "body": "My apologies for my ignorance of github. I thought merge requests were \nto the commit not the branch\n\nI removed it because it didn't fit our needs.  The file @ the time of \nmerge should of been \nhttps://github.com/rwilbert-digitec/incubator/blob/d5aeaef34b091d0aefcc7261f1a1eaafc84d8fb2/Library/Phalcon/Mvc/View/Engine/Twig.php \n\nOn 09/11/2014 01:22 PM, Nikita Vershinin wrote:\n\n> In Library/Phalcon/Mvc/View/Engine/Twig.php:\n> \n> > ```\n> >          }, $options),\n> > ```\n> > -            new \\Twig_SimpleFunction('url', function ($route) use ($di) {\n> \n> Why did you delete this function?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub \n> https://github.com/phalcon/incubator/pull/213/files#r17434341.\n\n## \n\nDigitec Signature\n\nJR Wilbert\nSr. Software Engineer | Hardware Engineer | Network Engineer\n\nDigitec Interactive http://digitecinteractive.com     Digitec Interactive\nOffice: 407.299.1800\nFax: 407.294.1431\nhttp://www.digitecinteractive.com/\nTwitter https://twitter.com/digitec Facebook \nhttps://www.facebook.com/digitecinteractive Gooogle + \nhttps://plus.google.com/u/0/103061874895109226124/posts Linked In \nhttp://www.linkedin.com/company/digitec Feed \nhttp://www.knowledgedirectweb.com/feed/\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/17442818/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "KorsaR-ZN": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/17511206", "body": "@ogarbe, About the renaming of the main class in \"Manager\", I agree, a good decision. \nBut renaming namespace think not a good solution. Why do you think so?\n", "reactions": {"url": "https://api.github.com/repos/phalcon/incubator/pulls/comments/17511206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}}}}