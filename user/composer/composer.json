{"_default": {"1": {"c00ler123": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7021", "title": "Composer file could not be downloaded (404 not found)", "body": "I tyring to install Laravel\r\n\r\nOutput of `composer diagnose`:\r\n\r\nd:\\web>composer diag\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking HTTP proxy: OK\r\nChecking HTTP proxy support for request_fulluri: OK\r\nChecking HTTPS proxy support for request_fulluri: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys:\r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  ****\r\n723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  ****\r\n8C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\nComposer version: 1.6.2\r\nPHP version: 7.2.1\r\nPHP binary path: D:\\php-7.2.1-nts-Win32-VC15-x86\\php.exe\r\n\r\nWhen I run this command:\r\n\r\ncomposer global require \"laravel/installer\"\r\n\r\nI get the following output:\r\n\r\n [Composer\\Downloader\\TransportException]\r\n The \"https://packagist.org/p/symfony/console%2433f24f3dbe55cff57fe06a5fa93b\r\n a0bbe3ae3b259e2c5b7d051da0238769fa0f.json\" file could not be downloaded (HT\r\n TP/1.1 404 Not Found)\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vnagara": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7020", "title": "Segment fault and out of memory on installation", "body": "Hi,\r\nI was out of programming a while (about 2 years). Now I tried to up to date my sources and got versioning conflict on _composer install_. After resolving api I got new worse bug segment fault on php5.6 and 10Gb Memory leak on php7.1.\r\nHere my data:\r\n\r\nMy `composer.json`:\r\n\r\n```json\r\n{\r\n    \"require\": {\r\n        \"libra/libra-assets-installer\":     \"2.2.0\",\r\n        \"libra/twitter-bootstrap-assets\":   \"3.3.0\"\r\n    }\r\n}\r\n```\r\n\r\nOutput of `composer diagnose` (__php5.6__):\r\n\r\n```\r\nChecking composer.json: WARNING\r\nNo license specified, it is recommended to do so. For closed-source software you may use \"proprietary\" as license.\r\nrequire.libra/libra-assets-installer : exact version constraints (2.2.0) should be avoided if the package follows semantic versioning\r\nrequire.libra/twitter-bootstrap-assets : exact version constraints (3.3.0) should be avoided if the package follows semantic versioning\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: \r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\nComposer version: 1.6.2\r\nPHP version: 5.6.33-1+0~20180105151408.9+stretch~1.gbp0deeda\r\nPHP binary path: /usr/bin/php5.6\r\n```\r\nWhen I run this command:\r\n\r\n```\r\nphp5.6 /usr/bin/composer -vvv install\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nReading ./composer.json\r\nLoading config file /home/user/composer/config.json\r\nLoading config file /home/user/.composer/auth.json\r\nLoading config file ./composer.json\r\nChecked CA file /etc/ssl/certs/ca-certificates.crt: valid\r\nExecuting command (/var/www/tmp/b): git branch --no-color --no-abbrev -v\r\nExecuting command (/var/www/tmp/b): git describe --exact-match --tags\r\nExecuting command (/var/www/tmp/b): git log --pretty=\"%H\" -n1 HEAD\r\nExecuting command (/var/www/tmp/b): hg branch\r\nExecuting command (/var/www/tmp/b): fossil branch list\r\nExecuting command (/var/www/tmp/b): fossil tag list\r\nExecuting command (/var/www/tmp/b): svn info --xml\r\nFailed to initialize global composer: Composer could not find the config file: /home/user/.composer/composer.json\r\nTo initialize a project, please create a composer.json file as described in the https://getcomposer.org/ \"Getting Started\" section\r\nReading /var/www/tmp/b/vendor/composer/installed.json\r\nRunning 1.6.2 (2018-01-05 15:28:41) with PHP 5.6.33-1+0~20180105151408.9+stretch~1.gbp0deeda on Linux / 4.9.0-5-amd64\r\nLoading composer repositories with package information\r\nDownloading https://packagist.org/packages.json\r\nWriting /home/user/.composer/cache/repo/https---packagist.org/packages.json into cache\r\nUpdating dependencies (including require-dev)\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2013.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2014.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2015.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2016.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2017.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2017-04.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2017-07.json from cache\r\nDownloading http://packagist.org/p/provider-2017-10%247fe61c2bcc3ee23f172c498bd8cf2f9a46ac2020b1bb656936850c57a091d417.json\r\nWriting /home/user/.composer/cache/repo/https---packagist.org/p-provider-2017-10.json into cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2018-01.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-archived.json from cache\r\nDownloading http://packagist.org/p/provider-latest%24a07e2c01b6005319524ed8cd28c942abb11d3a2bb7078410f77a3fc9d082b65e.json\r\nWriting /home/user/.composer/cache/repo/https---packagist.org/p-provider-latest.json into cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/provider-libra$libra-assets-installer.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/provider-libra$twitter-bootstrap-assets.json from cache\r\nResolving dependencies through SAT\r\nDependency resolution completed in 0.001 seconds\r\nAnalyzed 72 packages to resolve dependencies\r\nAnalyzed 61 rules to resolve dependencies\r\nPackage operations: 1 install, 0 updates, 0 removals\r\nInstalls: libra/twitter-bootstrap-assets:3.3.0\r\nSegmentation fault\r\n\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\nphp7.1 /usr/bin/composer install\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nReading ./composer.json\r\nLoading config file /home/user/.composer/config.json\r\nLoading config file /home/user/.composer/auth.json\r\nLoading config file ./composer.json\r\nChecked CA file /etc/ssl/certs/ca-certificates.crt: valid\r\nExecuting command (/var/www/tmp/b): git branch --no-color --no-abbrev -v\r\nExecuting command (/var/www/tmp/b): git describe --exact-match --tags\r\nExecuting command (/var/www/tmp/b): git log --pretty=\"%H\" -n1 HEAD\r\nExecuting command (/var/www/tmp/b): hg branch\r\nExecuting command (/var/www/tmp/b): fossil branch list\r\nExecuting command (/var/www/tmp/b): fossil tag list\r\nExecuting command (/var/www/tmp/b): svn info --xml\r\nFailed to initialize global composer: Composer could not find the config file: /home/user/.composer/composer.json\r\nTo initialize a project, please create a composer.json file as described in the https://getcomposer.org/ \"Getting Started\" section\r\nReading /var/www/tmp/b/vendor/composer/installed.json\r\nRunning 1.6.2 (2018-01-05 15:28:41) with PHP 7.1.13-1+0~20180105151623.14+stretch~1.gbp1086fa on Linux / 4.9.0-5-amd64\r\nLoading composer repositories with package information\r\nDownloading https://packagist.org/packages.json\r\nWriting /home/user/.composer/cache/repo/https---packagist.org/packages.json into cache\r\nUpdating dependencies (including require-dev)\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2013.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2014.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2015.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2016.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2017.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2017-04.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2017-07.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2017-10.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2018-01.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-archived.json from cache\r\nDownloading http://packagist.org/p/provider-latest%24b0107e8bd42cbfbf0f3dc7caf6776e71801478f60931c6d8f1aad89b4cd1e98d.json\r\nWriting /home/user/.composer/cache/repo/https---packagist.org/p-provider-latest.json into cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/provider-libra$libra-assets-installer.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/provider-libra$twitter-bootstrap-assets.json from cache\r\nResolving dependencies through SAT\r\nDependency resolution completed in 0.000 seconds\r\nAnalyzed 70 packages to resolve dependencies\r\nAnalyzed 59 rules to resolve dependencies\r\nPackage operations: 1 install, 0 updates, 0 removals\r\nInstalls: libra/twitter-bootstrap-assets:3.3.0\r\n\r\nmmap() failed: [12] Cannot allocate memory\r\n\r\nmmap() failed: [12] Cannot allocate memory\r\nPHP Fatal error:  Out of memory (allocated 13529776128) (tried to allocate 262144 bytes) in phar:///usr/bin/composer/src/Composer/Installer/LibraryInstaller.php on line 173\r\n\r\nFatal error: Out of memory (allocated 13529776128) (tried to allocate 262144 bytes) in phar:///usr/bin/composer/src/Composer/Installer/LibraryInstaller.php on line 173\r\n\r\nmmap() failed: [12] Cannot allocate memory\r\n\r\nmmap() failed: [12] Cannot allocate memory\r\nPHP Fatal error:  Out of memory (allocated 13529776128) (tried to allocate 262144 bytes) in Unknown on line 0\r\n\r\nFatal error: Out of memory (allocated 13529776128) (tried to allocate 262144 bytes) in Unknown on line 0\r\n\r\n(Consumed all my memory what is more than 12Gb).\r\n```\r\n\r\nAnd I expected this to happen:\r\n\r\nTo avoid segment fault. \r\nTo stop unlimited memory allocation.\r\n\r\nComposer version __1.0.0-alpha11__ works without errors. Next one fails.\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7020/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rickselby": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7018", "title": "--no-dev installs package replaced by dev requirement, not original requirement", "body": "My `composer.json`:\r\n\r\n_This is a simplified version of the issue I'm seeing. In the real case, my `require-dev` contains `\"graham-campbell/testbench\": \"^4.0\"`; its dependencies eventually require `laravel/framework`, which causes the issue. Both setups give the same results._\r\n\r\n```json\r\n{\r\n    \"require\": {\r\n        \"illuminate/contracts\": \"~5.5.0\"\r\n    },\r\n    \"require-dev\": {\r\n        \"laravel/framework\": \"~5.5.0\"\r\n    }\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nChecking composer.json: WARNING\r\nNo license specified, it is recommended to do so. For closed-source software you may use \"proprietary\" as license.\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: \r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\nComposer version: 1.6.2\r\nPHP version: 7.0.22-0ubuntu0.16.04.1\r\nPHP binary path: /usr/bin/php7.0\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer install --no-dev\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nLoading composer repositories with package information\r\nUpdating dependencies\r\nPackage operations: 30 installs, 0 updates, 0 removals\r\n...<snip>...\r\n  - Installing laravel/framework (v5.5.31): Downloading (100%)         \r\nWriting lock file\r\nGenerating autoload files\r\n```\r\n\r\nAnd I expected this to happen:\r\n\r\n```\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\nPackage operations: 3 installs, 0 updates, 0 removals\r\n...<snip>...\r\n  - Installing illuminate/contracts (v5.5.28): Downloading (100%)         \r\nWriting lock file\r\nGenerating autoload files\r\n```\r\n\r\n`laravel/framework`'s composer.json contains the following:\r\n```\r\n\"replace\": {\r\n   ...\r\n   \"illuminate/contracts\": \"self.version\",\r\n   ...\r\n}\r\n```\r\n\r\nI've read through the numerous issues relating to updating requiring require-dev to be solvable (#5224 etc), and that require-dev is parsed even when --no-dev is specified, so I'm not sure if anything can be done here, but thought it best to raise this case.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7018/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nadar": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7017", "title": "Composer TestCase", "body": "We have built a composer based open source CMS and Admin UI (https://luya.io), therefore we have made a composer plugin to track the packages from our \"type\". In order to test (phpunit) the composer plugin, we could not found any useful documentation, so where looking how you did => https://github.com/composer/composer/blob/master/tests/Composer/TestCase.php. \r\n\r\nSo we have used the TestCase class to test our own plugin, sadly due to this comment `https://github.com/composer/composer/commit/b656973a86c9f4793f45bd5fa68410878bb5acc3#comments` the test files are no longer shipped into the vendor folder.\r\n\r\nComposer is the future, so more plugins will follow, we need tools to test those plugins.\r\n\r\nSo my question is:\r\n\r\n1. Why not adding the test files for other developers to? (re add the `tests` folder)\r\n2. Or provide a basic TestCase for developers which makes it easy to test the plugin, like a composer testsuite?", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7017/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rabin999": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7012", "title": "while installing package through composer it require too much time to install and update too, i am using in laravel project ", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n    \"name\": \"laravel/laravel\",\r\n    \"description\": \"The Laravel Framework.\",\r\n    \"keywords\": [\"framework\", \"laravel\"],\r\n    \"license\": \"MIT\",\r\n    \"type\": \"project\",\r\n    \"require\": {\r\n        \"php\": \">=7.0.0\",\r\n        \"fideloper/proxy\": \"~3.3\",\r\n        \"laravel/framework\": \"5.5.*\",\r\n        \"laravel/tinker\": \"~1.0\"\r\n    },\r\n    \"require-dev\": {\r\n        \"filp/whoops\": \"~2.0\",\r\n        \"fzaninotto/faker\": \"~1.4\",\r\n        \"mockery/mockery\": \"~1.0\",\r\n        \"phpunit/phpunit\": \"~6.0\",\r\n        \"predis/predis\": \"^1.1\"\r\n    },\r\n    \"autoload\": {\r\n        \"classmap\": [\r\n            \"database/seeds\",\r\n            \"database/factories\"\r\n        ],\r\n        \"psr-4\": {\r\n            \"App\\\\\": \"app/\"\r\n        }\r\n    },\r\n    \"autoload-dev\": {\r\n        \"psr-4\": {\r\n            \"Tests\\\\\": \"tests/\"\r\n        }\r\n    },\r\n    \"extra\": {\r\n        \"laravel\": {\r\n            \"dont-discover\": [\r\n            ]\r\n        }\r\n    },\r\n    \"scripts\": {\r\n        \"post-root-package-install\": [\r\n            \"@php -r \\\"file_exists('.env') || copy('.env.example', '.env');\\\"\"\r\n        ],\r\n        \"post-create-project-cmd\": [\r\n            \"@php artisan key:generate\"\r\n        ],\r\n        \"post-autoload-dump\": [\r\n            \"Illuminate\\\\Foundation\\\\ComposerScripts::postAutoloadDump\",\r\n            \"@php artisan package:discover\"\r\n        ]\r\n    },\r\n    \"config\": {\r\n        \"preferred-install\": \"dist\",\r\n        \"sort-packages\": true,\r\n        \"optimize-autoloader\": true\r\n    }\r\n}\r\n\r\n```\r\n\r\nWhen I run command require or update on package, at least it took 15-18 min for small changes :(\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7012/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mhujer": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7010", "title": "composer validate show report scripts-descriptions for non-existent scripts", "body": "My `composer.json` (note the _typo_ in the first item in `scripts-descriptions`):\r\n\r\n```json\r\n  \"scripts\": {\r\n    \"test\": \"phpunit\",\r\n    \"phpcs\": \"phpcs --standard=PSR2 src\"\r\n  },\r\n  \"scripts-descriptions\": {\r\n    \"phpcsxxx\": \"Checks that the application code conforms to coding standard\",\r\n    \"test\": \"Launches the preconfigured PHPUnit\"\r\n  }\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nComposer version: 1.6.2\r\nPHP version: 7.1.12\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer validate --strict\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\n./composer.json is valid\r\n```\r\n\r\nAnd I expected this to happen:\r\n```\r\nWarning: Description for non-existent script \"phpcsxxx\" found in \"scripts-descriptions\"\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7010/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/7019", "title": "Validation warns if script description for nonexistent script is present", "body": "Fixes #7010", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "logig": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7007", "title": "`composer update` not work at local repo. The 1.4.x version used to work.", "body": "My `operating System`: Windows 10\r\nMy `config.json`:\r\n\r\n```json\r\n{\r\n    \"config\": {\r\n        \"optimize-autoloader\": true,\r\n        \"preferred-install\": \"dist\"\r\n    },\r\n    \"repositories\": {\r\n        \"packagist\": {\r\n            \"type\": \"composer\",\r\n            \"url\": \"https://packagist.phpcomposer.com\"\r\n        },\r\n        \"local\": {\r\n            \"type\": \"path\",\r\n            \"url\": \"D:/logig/*\",\r\n            \"options\": {\r\n                \"symlink\": true\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\n$ composer diagnose\r\nChecking composer.json: WARNING\r\nrequire.logig/wp-notice : unbound version constraints (dev-master) should be avoided\r\nrequire.logig/wp-admin-ui : unbound version constraints (dev-master) should be avoided\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys:\r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\nComposer version: 1.6.2\r\nPHP version: 7.1.1\r\nPHP binary path: D:\\Nginx\\php\\php.exe\r\n\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer update\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\n$ composer update\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\nNothing to install or update\r\nGenerating optimized autoload files\r\n\r\n```\r\nor sometimes:\r\n\r\n```\r\n$ composer update\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\nPackage operations: 0 installs, 1 update, 0 removals\r\n  - Removing junction for logig/wp-admin-ui (dev-master)\r\n\r\n\r\n  [Symfony\\Component\\Filesystem\\Exception\\IOException]\r\n  D:\\logig\\wordpress.local\\wp-content\\plugins\\mayun-oss-support\\vendor\\logig\\wp-admin-ui is not a junction and thus c\r\n  annot be removed as one\r\n\r\n```\r\n\r\nAnd I expected this to happen:\r\nUpdate the namespace autoload data which changed in my local repo's composer.json\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7007/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "staabm": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7004", "title": "svn log command misses credentials", "body": "we are running in the situation that composer tries to run a `svn log` command, and this doesnt succeed because of missing credentials.\r\n\r\nhaving a closer look at the code\r\n\r\nhttps://github.com/composer/composer/blob/994bac0c153348c09d42cd77225c465c1b81e8e9/src/Composer/Downloader/SvnDownloader.php#L173-L184\r\n\r\nreveals that this command is not executed using the `SvnUtil` which would otherwise provide this authentication stuff.\r\n\r\nwe see errors like\r\n\r\n```\r\n[localhost] < [error]\u2002\u2002 - Updating complex/portallib dev-trunk (/trunk/@8668 => /trunk/@8769):\r\n[localhost] < [error]\u2002\u2002Checking out /trunk/@8769\r\n[localhost] < [error] At revision 8769.\r\n[localhost] < [error]\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\r\n[localhost] < [error]\u2002\u2002 [RuntimeException]\r\n[localhost] < [error]\u2002\u2002 Failed to execute svn log -r8668:8769 --incremental\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\r\n[localhost] < [error]\u2002\u2002 svn: E170013: Unable to connect to a repository at URL https://xyz.com/svn/myproject/portallib/trunk\u2002\u2002\r\n[localhost] < [error]\u2002\u2002 svn: E215004: No more credentials or we tried too many times.\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\r\n[localhost] < [error]\u2002\u2002 Authentication failed\r\n[localhost] < [error] Exception trace:\r\n[localhost] < [error]\u2002\u2002() at phar:///usr/local/bin/composer/src/Composer/Downloader/SvnDownloader.php:174\r\n[localhost] < [error]\u2002\u2002Composer\\Downloader\\SvnDownloader->getCommitLogs() at phar:///usr/local/bin/composer/src/Composer/Downloader/VcsDownloader.php:167\r\n[localhost] < [error]\u2002\u2002Composer\\Downloader\\VcsDownloader->update() at phar:///usr/local/bin/composer/src/Composer/Downloader/DownloadManager.php:268\r\n[localhost] < [error]\u2002\u2002Composer\\Downloader\\DownloadManager->update() at phar:///usr/local/bin/composer/src/Composer/Installer/LibraryInstaller.php:207\r\n[localhost] < [error]\u2002\u2002Composer\\Installer\\LibraryInstaller->updateCode() at phar:///usr/local/bin/composer/src/Composer/Installer/LibraryInstaller.php:109\r\n[localhost] < [error]\u2002\u2002Composer\\Installer\\LibraryInstaller->update() at phar:///usr/local/bin/composer/src/Composer/Installer/InstallationManager.php:193\r\n[localhost] < [error]\u2002\u2002Composer\\Installer\\InstallationManager->update() at phar:///usr/local/bin/composer/src/Composer/Installer/InstallationManager.php:160\r\n[localhost] < [error]\u2002\u2002Composer\\Installer\\InstallationManager->execute() at phar:///usr/local/bin/composer/src/Composer/Installer.php:587\r\n[localhost] < [error]\u2002\u2002Composer\\Installer->doInstall() at phar:///usr/local/bin/composer/src/Composer/Installer.php:226\r\n[localhost] < [error]\u2002\u2002Composer\\Installer->run() at phar:///usr/local/bin/composer/src/Composer/Command/InstallCommand.php:119\r\n[localhost] < [error]\u2002\u2002Composer\\Command\\InstallCommand->execute() at phar:///usr/local/bin/composer/vendor/symfony/console/Command/Command.php:266\r\n[localhost] < [error]\u2002\u2002Symfony\\Component\\Console\\Command\\Command->run() at phar:///usr/local/bin/composer/vendor/symfony/console/Application.php:861\r\n[localhost] < [error]\u2002\u2002Symfony\\Component\\Console\\Application->doRunCommand() at phar:///usr/local/bin/composer/vendor/symfony/console/Application.php:208\r\n[localhost] < [error]\u2002\u2002Symfony\\Component\\Console\\Application->doRun() at phar:///usr/local/bin/composer/src/Composer/Console/Application.php:245\r\n[localhost] < [error]\u2002\u2002Composer\\Console\\Application->doRun() at phar:///usr/local/bin/composer/vendor/symfony/console/Application.php:127\r\n[localhost] < [error]\u2002\u2002Symfony\\Component\\Console\\Application->run() at phar:///usr/local/bin/composer/src/Composer/Console/Application.php:100\r\n[localhost] < [error]\u2002\u2002Composer\\Console\\Application->run() at phar:///usr/local/bin/composer/bin/composer:54\r\n[localhost] < [error]\u2002\u2002require() at /usr/local/bin/composer:24\r\n[localhost] < [error] install [--prefer-source] [--prefer-dist] [--dry-run] [--dev] [--no-dev] [--no-custom-installers] [--no-autoloader] [--no-scripts] [--no-progress] [--no-suggest] [-v|vv|vvv|--verbose] [-o|--optimize-autoloader] [-a|--classmap-authoritative] [--apcu-autoloader] [--ignore-platform-reqs] [--] [<packages>]...\r\n```", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/7015", "title": "Mention that also a antivirus software might corrupt file contents", "body": "The \"possible man-in-the-middle attack\" examples seems a bit over aggressive/dramatic.\r\n\r\nIn my experience most of the time bad/aggresive antivirus/firewall/content-filter applications/appliances are to blame.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/7005", "title": "Pass auth credentials to svn log while retrieving commit logs", "body": "Fixes https://github.com/composer/composer/issues/7004", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ncomer": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7003", "title": "could this apporoach will be more useful to optimize with apcu ", "body": "since  i run the command  \"dump-autoload -o --apcu\" to improve the boot speed of laravel,\r\ni got a big autoload_static file which have 4k lines code.\r\nThen i found   this code block within auloload_real.php:\r\nif ($useStaticLoader) {\r\n      require_once __DIR__ . '/autoload_static.php';  \r\n call_user_func(\\Composer\\Autoload\\ComposerStaticInitb6642ee553ca64f76f58aeb2231d582d::getInitializer($loader));\r\n}\r\n,when run a xhprof, load::composer/autoload_static.php rank No 1(about 11,702 \u00b5s in my case).\r\n\r\nWhat i think is: since apcu can be used for cache,and an obj type can directly  be stored in,\r\nthen i can modify above code like this:\r\n1.autoload_static .php@getInitializer\r\nadd \r\n$loader->f = ComposerStaticInitb6642ee553ca64f76f58aeb2231d582d::$files;\r\n2.auloload_real.php\r\n$loaderApc = apcu_fetch('cloader', $hit);\r\n            if (!$hit){\r\n                require_once __DIR__ . '/autoload_static.php';\r\n\r\n                call_user_func(\\Composer\\Autoload\\ComposerStaticInitb6642ee553ca64f76f58aeb2231d582d::getInitializer($loader));\r\n                apcu_store('cloader', clone $loader);\r\n            }else{\r\n                $loader = $loaderApc;\r\n            }\r\nanother place:\r\nif ($useStaticLoader) {\r\n            $includeFiles = $loader->f;\r\n        }\r\n\r\nI do not have a overall composer source code's reading, but this seems  work,\r\nWill this ok and be achieved further or am i wrong with something..  1st post,sorry for possiable mis", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7003/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "apfelbox": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7002", "title": "Option to always remove VCS on `create-project`?", "body": "Hi \ud83d\udc4b ,\r\n\r\nI am currently in the process of researching a possible fix for https://github.com/symfony/flex/issues/285.\r\n\r\nThe desired behaviour is for the symfony skeleton installation to just always remove the VCS directory and don't ask in the CLI for it.\r\n\r\nCurrently this is implemented that Symfony Flex just completely disables interactivity in IO, so that the call to `->askConfirmation()` [here](https://github.com/composer/composer/blob/994bac0c153348c09d42cd77225c465c1b81e8e9/src/Composer/Command/CreateProjectCommand.php#L201) just [returns the default value](https://github.com/symfony/console/blob/bf56f79b8604e4dd32c236048606c507e9dbbcd3/Helper/QuestionHelper.php#L55) (`true`).\r\n\r\nUnfortunately that also kills all subsequent interactive calls.\r\n\r\nAs I read the code:\r\nhttps://github.com/composer/composer/blob/master/src/Composer/Command/CreateProjectCommand.php#L176-L202\r\n\r\nthere currently is no way to just disable interactivity for the one call to `askConfirmation()`.\r\nIt's always either all scripts + the \"delete VCS dir\" one, or nothing.\r\n\r\nSo I would like to ask whether it would be possible to:\r\n\r\n* dispatch another event between `Installer` and `->askConfirmation()` so that Flex can hook specifically in to disable interactivity in this event and re-enable again in the event `POST_CREATE_PROJECT_CMD ` (something like `POST_ROOT_PACKAGE_DEPENDENCIES_INSTALL`).\r\n* provide a way to just always remove the VCS directory in a plugin (env var, some global setting or a callback somewhere).\r\n\r\nWhat do you think?", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7002/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "chrisEspira": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7001", "title": "The \"https://getcomposer.org/versions\" file could not be downloaded: failed to open stream: HTTP request failed!", "body": "HI,\r\nSomebody can help me solve this problem\r\ni cannot install composer\r\n when i try to install composer \r\nI get this error\r\nThe \"https://getcomposer.org/versions\" file could not be downloaded: failed to open stream: HTTP request failed!\r\n\r\ni need help please..........thx\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "victorynox": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7000", "title": "Wrong return value from Composer/IO/ConsoleIO::select() method", "body": "My `composer.json`:\r\n\r\n```json\r\n\"require\": {\r\n        \"rollun-com/rollun-installer \"^4.0\",\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: \r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\nComposer version: 1.6.2\r\nPHP version: 7.1.12-2+0~20171207160618.12+stretch~1.gbp5c91f3\r\nPHP binary path: /usr/bin/php7.1\r\n```\r\n\r\n```\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: \r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: WARNING\r\nYou are not running the latest stable version, run `composer self-update` to update (1.5.2 => 1.6.2)\r\n```\r\n\r\nWhen I run this method:\r\n\r\n[Composer\\IO\\ConsoleIO::select()](https://github.com/composer/composer/blob/master/src/Composer/IO/ConsoleIO.php#L283) \r\n```\r\n$data = $console->select(\r\n\"Select value\",\r\n[\r\n            \"Choice value 0\",\r\n            \"Choice value 1\",\r\n            \"Choice value 2\",\r\n],\r\n\"0,2\",\r\nfalse,\r\n'Value \"%s\" is invalid',\r\ntrue\r\n);\r\n```\r\n\r\nI get the following output in data:\r\nArray with **values** of the `\"$choices\"` array\r\n```\r\n[\r\n \"Choice value0\",\r\n \"Choice value2\"\r\n]\r\n```\r\n\r\nAnd I expected this to happen:\r\nArray with **keys** of the `\"$choices\"` array\r\n```\r\n[\r\n0,\r\n2\r\n]\r\n```\r\n\r\nWen I'm using composer version 1.5.2 and earlier, method [Composer\\IO\\ConsoleIO::select()](https://github.com/composer/composer/blob/master/src/Composer/IO/ConsoleIO.php#L283)\r\nreturn the array with **keys** of the `\"$choices\"` array ([as in the documentation ](https://getcomposer.org/apidoc/1.6.1/Composer/IO/ConsoleIO.html#method_select)), but in composer 1.6.2 i'm getting the array with **values** of the `\"$choices\"` array. \r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7000/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cweiske": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6998", "title": "\"remove\" output and exit status do not tell about failures/non-removages", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n    \"require\": {\r\n        \"laravel/framework\": \"^5.5\"\r\n    }\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nChecking composer.json: WARNING\r\nNo license specified, it is recommended to do so. For closed-source software you may use \"proprietary\" as license.\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: \r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\nComposer version: 1.6.2\r\nPHP version: 7.1.12-3+ubuntu16.04.1+deb.sury.org+1\r\nPHP binary path: /usr/bin/php7.1\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer remove swiftmailer/swiftmailer; echo $?\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nswiftmailer/swiftmailer is not required in your composer.json and has not been removed\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\nNothing to install or update\r\nGenerating autoload files\r\n```\r\n\r\nAnd I expected this to happen:\r\n\r\n1. A message telling me that swiftmailer was not removed (maybe with a reason: 'hard requirement by laravel/framework\")\r\n2. Exit code of non-0, because 0 means success.\r\n\r\nI want to *remove* a package, and composer did not do that - and failed to tell me that. The package I wanted to remove is still installed.\r\n\r\nI do know that \"composer remove\" currently only removes the entry from `composer.json` and then runs \"update\", but thats implementation detail. The user's intent when using \"remove\" is that a package shall be removed, and composer doesn't behave in a way the user would expect.\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6998/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "IndraGunawan": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6993", "title": "Could not find package when using composer repository that provide lazy providers", "body": "How to reproduce\r\n\r\n- use composer repositry that provide lazy providers like `packagist.com` or `pakethub.com` and add the repository config to `composer.json`\r\n- add `symfony/symfony` package to the composer repository provider. so when you access `packages.json` from the composer repository hosting you will get \r\n```json\r\n{\r\n\"packages\":{\"symfony/symfony\":{...}},\r\n\"search\":\"...\",\r\n\"providers-lazy-url\":\".../p/%package%.json\",\r\n\"mirrors\":[{...}]\r\n}\r\n```\r\n- run `composer require symfony/security-bundle -vvv` at project directory.\r\n\r\nHere the response\r\n```\r\n[InvalidArgumentException]\r\n  Could not find package symfony/security-bundle.\r\n```\r\n  ", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6993/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "verbruggenalex": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6992", "title": "\"tar\" type repository does not allow extraction of empty folder in tar.gz file", "body": "Because the tar.gz file contains an un-named folder \".\" the tar type extractor is not able to extract the contents of the folder. If the folder is named there is no problem.\r\n\r\n<details><summary>File: composer.json</summary>\r\n\r\n```json\r\n    \"require\": {\r\n        \"ec-europa/platform_dev\": \"~2.4.0\"\r\n    },\r\n    \"repositories\": [\r\n        {\r\n            \"type\": \"package\",\r\n            \"package\": {\r\n                \"name\": \"ec-europa/platform_dev\",\r\n                \"version\": \"2.4.63\",\r\n                \"type\": \"drupal-core\",\r\n                \"dist\": {\r\n                    \"url\": \"https://github.com/ec-europa/platform-dev/releases/download/2.4.63/platform-dev-2.4.63.tar.gz\",\r\n                    \"type\": \"tar\"\r\n                }\r\n            }\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n</details>\r\n\r\n<details><p><summary>Run: composer install</summary>\r\n\r\n```\r\n  [PharException]\r\n  Extraction from phar \"/home/verbral/platform-composer/build/28911af645fcdc4a61e64f6ef3e444ab.gz\" failed: Cannot extract \".\", internal error\r\n```\r\n</details></p>\r\n\r\nI know this is an edge case. But would it be possible to allow for un-named folders to be extracted? I'm not really in the mood to re-upload 500 packages to our repository.\r\n\r\nPossible solution provided on PHP documentation page:\r\nhttp://php.net/manual/en/phardata.extractto.php\r\n\r\n  ", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "NomanJaved": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6980", "title": "[RuntimeException] Could not scan for classes inside \"src/\" which does not appear to be a file nor a folder", "body": "I am have installed Xampp on Windows 10.\r\n\r\nI am facing the issue that the composer install not work properly in Laravel 5.5. How can I fix this issue. the error is mentioned in the title. If you guys require further detail I can provide it.\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6980/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Salamek": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6975", "title": "Fresh composer install/update and following composer update inconsistency", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n  \"name\": \"dravencms/dravencms\",\r\n  \"type\": \"library\",\r\n  \"description\": \"DravenCMS Content Management System\",\r\n  \"keywords\": [\r\n    \"dravencms\"\r\n  ],\r\n  \"license\": [\r\n    \"LGPL-3.0\"\r\n  ],\r\n  \"authors\": [\r\n    {\r\n      \"name\": \"Adam Schubert\"\r\n    }\r\n  ],\r\n  \"require-dev\": {\r\n    \"nette/tester\": \"@dev\"\r\n  },\r\n  \"repositories\": [\r\n    {\r\n      \"type\": \"vcs\",\r\n      \"url\": \"https://github.com/Salamek/gravatar\"\r\n    }\r\n  ],\r\n  \"require\": {\r\n    \"dravencms/packager\": \"~v1.0\",\r\n    \"dravencms/admin\": \"~v1.0.0\",\r\n    \"dravencms/issue\": \"~v1.0.1\",\r\n    \"dravencms/file\": \"~v1.1\",\r\n    \"o5/grido\": \"dev-master\",\r\n    \"janmarek/webloader\": \"dev-master\",\r\n    \"kdyby/doctrine\": \"v3.3.x-dev\"\r\n  },\r\n  \"scripts\": {\r\n    \"post-install-cmd\": [\r\n      \"php vendor/dravencms/packager/bin/packager packager:sync\"\r\n    ],\r\n    \"post-update-cmd\": [\r\n      \"php vendor/dravencms/packager/bin/packager packager:sync\"\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nChecking composer.json: WARNING\r\nLicense \"LGPL-3.0\" is a deprecated SPDX license identifier, use \"LGPL-3.0-only\" or \"LGPL-3.0-or-later\" instead\r\nrequire.o5/grido : unbound version constraints (dev-master) should be avoided\r\nrequire.janmarek/webloader : unbound version constraints (dev-master) should be avoided\r\nrequire.kdyby/doctrine : exact version constraints (v3.3.x-dev) should be avoided if the package follows semantic versioning\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: FAIL\r\nMissing pubkey for tags verification\r\nMissing pubkey for dev verification\r\nRun composer self-update --update-keys to set them up\r\nChecking composer version: OK\r\nComposer version: 1.6.0\r\nPHP version: 7.2.0\r\nPHP binary path: /usr/bin/php\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\nrm composer.lock\r\nrm -rf ./vendor\r\ncomposer update or composer install\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\n...Lot of installed stuff...\r\n- Installing dravencms/user (v1.0.2): Loading from cache  #<-- OLD VERSION\r\n...Lot of installed stuff...\r\n- Installing dravencms/admin (v1.0): Loading from cache #<-- OLD VERSION\r\n...Lot of installed stuff...\r\n```\r\n\r\nWhen I run this command (after first install or update):\r\n\r\n```\r\ncomposer update\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)         \r\nPackage operations: 0 installs, 2 updates, 0 removals\r\n  - Updating dravencms/user (v1.0.2 => v1.0.3): Loading from cache\r\n  - Updating dravencms/admin (v1.0 => v1.0.3): Loading from cache\r\nPackage symnedi/event-dispatcher is abandoned, you should avoid using it. Use contributte/event-dispatcher instead.\r\nPackage zenify/doctrine-migrations is abandoned, you should avoid using it. Use nettrine/migrations instead.\r\nWriting lock file\r\nGenerating autoload files\r\nocramius/package-versions:  Generating version class...\r\nocramius/package-versions: ...done generating version class\r\n> php vendor/dravencms/packager/bin/packager packager:sync\r\nPackages synced successfully\r\n```\r\n\r\nAnd I expected this to happen:\r\n\r\nWhen i run `composer install` or `composer update` in clean project (vendor and composer.lock deleted) i should get latest versions of all deps matching composer.json, second run of `composer update` should not do anything when no new version is released\r\n\r\nPS: I tried to delete ~/.cache/composer and i get same results as above but with downloads, so it is not cache related\r\nComposer version 1.6.0 2018-01-04 12:03:22\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6975/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/6959", "title": "Your requirements could not be resolved to an installable set of packages. But nothing is wrong", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n  \"name\": \"dravencms/dravencms\",\r\n  \"type\": \"library\",\r\n  \"description\": \"DravenCMS Content Management System\",\r\n  \"keywords\": [\r\n    \"dravencms\"\r\n  ],\r\n  \"license\": [\r\n    \"LGPL-3.0\"\r\n  ],\r\n  \"authors\": [\r\n    {\r\n      \"name\": \"Adam Schubert\"\r\n    }\r\n  ],\r\n  \"require-dev\": {\r\n    \"nette/tester\": \"@dev\"\r\n  },\r\n  \"require\": {\r\n    \"dravencms/packager\": \"^v1.0\",\r\n    \"dravencms/admin\": \"^v1.0\",\r\n    \"dravencms/location\": \"^v1.0\",\r\n    \"dravencms/user\": \"^v1.0\",\r\n    \"dravencms/file\": \"^v1.0\",\r\n    \"ipub/visual-paginator\": \"^v1.0\",\r\n    \"joseki/pdf-response\": \"^v3.1\",\r\n    \"o5/grido\": \"dev-master\",\r\n    \"janmarek/webloader\": \"dev-master\"\r\n  },\r\n  \"scripts\": {\r\n    \"post-install-cmd\": [\r\n      \"php vendor/dravencms/packager/bin/packager packager:sync\"\r\n    ],\r\n    \"post-update-cmd\": [\r\n      \"php vendor/dravencms/packager/bin/packager packager:sync\"\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nChecking composer.json: WARNING\r\nrequire.o5/grido : unbound version constraints (dev-master) should be avoided\r\nrequire.janmarek/webloader : unbound version constraints (dev-master) should be avoided\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com rate limit: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: FAIL\r\nMissing pubkey for tags verification\r\nMissing pubkey for dev verification\r\nRun composer self-update --update-keys to set them up\r\nChecking composer version: OK\r\nwww-data@ceskadatabaze:~/svetst\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer update\r\ncomposer install\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\nYour requirements could not be resolved to an installable set of packages.\r\n\r\n  Problem 1\r\n    - Installation request for dravencms/file ^v1.0 -> satisfiable by dravencms/file[v1.1].\r\n    - dravencms/file v1.1 requires dravencms/locale ^v1.0 -> satisfiable by dravencms/locale[v1.0, v1.0.1].\r\n    - dravencms/locale v1.0 requires dravencms/base ^v1.0 -> satisfiable by dravencms/base[v1.0.7].\r\n    - dravencms/locale v1.0.1 requires dravencms/base ^v1.0.4 -> satisfiable by dravencms/base[v1.0.7].\r\n    - Conclusion: don't install dravencms/base v1.0.7\r\n```\r\n\r\nAnd I expected this to happen:\r\nComposer version 1.5.6 2017-12-18 12:09:18\r\nInstall depedencies, this message is useless, i'm not able to find out what is wrong", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6959/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "schmunk42": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6972", "title": "composer does not fully check versions when changing repository URL", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n    \"name\": \"tobias/issue-composer-repo-url-downgrade\",\r\n    \"require\": {\r\n        \"dektrium/yii2-rbac\": \"^0.3.0\"\r\n    },\r\n    \"repositories\": {\r\n        \"rbac\": {\r\n            \"type\": \"vcs\",\r\n            \"url\": \"https://github.com/dmstr-forks/yii2-rbac.git\"\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n(You need https://github.com/fxpio/composer-asset-plugin or https://asset-packagist.org/ to reproduce - but the plugin or additional repo is not the cause for this issue)\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\n> composer diagnose\r\nChecking composer.json: WARNING\r\nNo license specified, it is recommended to do so. For closed-source software you may use \"proprietary\" as license.\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys:\r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: WARNING\r\nYou are not running the latest stable version, run `composer self-update` to update (1.5.2 => 1.5.6)\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer update -vv\r\n<remove repositories section>\r\ncomposer update -vv\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\n[...]\r\nAnalyzed 405 packages to resolve dependencies\r\nAnalyzed 3081 rules to resolve dependencies\r\nNothing to install or update\r\nWriting lock file\r\nGenerating autoload files\r\n```\r\n\r\nAnd I expected this to happen:\r\n\r\n```\r\n[...]\r\nDependency resolution completed in 0.006 seconds\r\nAnalyzed 404 packages to resolve dependencies\r\nAnalyzed 3078 rules to resolve dependencies\r\nPackage operations: 1 install, 0 updates, 0 removals\r\nInstalls: dektrium/yii2-rbac:0.3.0\r\n  - Installing dektrium/yii2-rbac (0.3.0): Loading from cache\r\n Extracting archive    REASON: Required by the root package: Install command rule (install dektrium/yii2-rbac 0.3.0)\r\n\r\nWriting lock file\r\nGenerating autoload files\r\n```\r\n\r\nWe're using a fork of `dektrium/yii2-rbac` which has a tag `0.3.999`, if we remove the custom fork-repo, composer should check only the versions in the original URL and downgrade to `0.3.0` in this case, but it sees the installed version - which should not be available at all now - as valid and stays on `0.3.999`.\r\n\r\nRelated to https://github.com/composer/composer/issues/3876#issue-64525212\r\n\r\nIt works, when I remove `vendor/dektrium/yii2-rbac` - there should be some additional checks to https://github.com/composer/composer/pull/3985 if a URL has been changed. Actually composer should treat the package as not available and force a full check of it's versions.\r\n \r\n[addon]\r\n\r\nClearing the cache has no effect.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "alcanardanangelo": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6970", "title": "zlib_decode() data error", "body": "I can use Composer before. But now I cannot do composer update. I can't even install composer. The error shows. I didn't change any configuration on my computer.\r\n\r\n\r\n````The \"https://getcomposer.org/versions\" file could not be downloaded: failed to open stream: HTTP request failed!\r\nThe \"https://getcomposer.org/download/1.5.6/composer.phar.sig\" file could not be downloaded: failed to open stream: HTTP request failed!\r\nFailed to decode zlib stream\r\n\r\nPlease help. Thanks!", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6970/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "EduenSarceno": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6968", "title": "exec command doesn't works correctly on windows", "body": "I don't know if I'm wrong but I think the command only adds COMPOSER_BIN_PATH to the path and after runs the program\r\n\r\ncomposer.json\r\n```\r\n{\r\n\t\"name\": \"vendor/foo\",\r\n\t\"description\": \"A foo package\",\r\n\t\"scripts\": {\r\n\t\t\"test\" : \"phpunit --version\"\r\n\t},\r\n\t\"require-dev\": {\r\n\t\t\"phpunit/phpunit\": \"^6.5\"\r\n\t}\r\n}\r\n```\r\n\r\nIf I try to execute phpunit, I get a error\r\n```\r\n> composer exec phpunit\r\nScript phpunit handling the __exec_command event returned with error code 2\r\n```\r\nBut if I run the script its works\r\n```\r\n> composer run-script test\r\n> phpunit --version\r\nPHPUnit 6.5.5 by Sebastian Bergmann and contributors.\r\n```\r\n\r\nI don't like do things like  `vendor\\bin\\phpunit --help` instead of  `composer exec -- phpunit --help`.\r\n\r\n**Note**  \r\nThe arguments are not passed correctly either\r\n\r\n```\r\n>composer exec -- phpunit --help\r\nUsage:\r\n  exec [options] [--] [<binary>] [<args>]...\r\n\r\nArguments:\r\n  binary                         The binary to run, e.g. phpunit\r\n  args                           Arguments to pass to the binary. Use -- to separate from composer arguments\r\n\r\nOptions:\r\n  -l, --list\r\n  -h, --help                     Display this help message\r\n  -q, --quiet                    Do not output any message\r\n  -V, --version                  Display this application version\r\n      --ansi                     Force ANSI output\r\n      --no-ansi                  Disable ANSI output\r\n  -n, --no-interaction           Do not ask any interactive question\r\n      --profile                  Display timing and memory usage information\r\n      --no-plugins               Whether to disable plugins.\r\n  -d, --working-dir=WORKING-DIR  If specified, use the given directory as working directory.\r\n  -v|vv|vvv, --verbose           Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug\r\n\r\nHelp:\r\n  Executes a vendored binary/script.\r\n```\r\nEverything that is after -- should be treated as an argument to the program not as a part of the composer command\r\n\r\nEnvironment:\r\n```\r\n>composer --version\r\nComposer version 1.5.6 2017-12-18 12:09:18\r\n```", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6968/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wouterj": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6967", "title": "[Docs] Explicitly mention not to use `apt-get install composer`", "body": "Since `symfony/thanks` is now required by Laravel and Symfony, there are quite some people looking for help because they get \"symfony/thanks depends on composer-plugin-api ^1.1, you are using 1.0\".\r\n\r\nIn all these cases (i.e. https://github.com/symfony/symfony-docs/issues/8938), it is because they are using Composer 1.0.0 beta2 installed through `apt-get`.\r\n\r\nCan the Composer community do something to avoid people using `apt-get` and installing this very old version of Composer? Can we show some alert, just like it used to do in beta phrase? Can we maybe explicitly tell in the docs *not* to use `apt-get`? Or, maybe simpler, can we make `apt-get` install a more recent version?\r\n\r\n*EDIT: Just released I probably created this issue in a very wrong repository. Sorry! If you want, I can reopen it in another repository.*", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6967/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sebastianblum": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6965", "title": "[RFC] Optional requirements ", "body": "Hello!\r\n\r\nI want to discuss if we can add support for optional dependencies to composer.\r\n\r\nProblem explained by the LiipImagineBundle:\r\nThe LiipImagineBundle:2.0 had an dependency to PHP-CS-FIXER\r\n```json\r\n{\r\n  \"require-dev\": {\r\n    \"friendsofphp/php-cs-fixer\": \"^1.0|^2.0\"\r\n  }\r\n}\r\n```\r\nand PHP-CS-Fixer doesn't support PHP 7.3 see https://github.com/FriendsOfPHP/PHP-CS-Fixer/blob/2.9/composer.json\r\n```json\r\n{\r\n  \"require\": {\r\n        \"php\": \"^5.6 || >=7.0 <7.3\"\r\n  }\r\n}\r\n```\r\nSee discussion https://github.com/FriendsOfPHP/PHP-CS-Fixer/issues/3323 - PHP-CS-FIXER will not support PHP 7.3 at the moment. So the nightly php travis builds fail because composer could not resolve the dependencies. LiipImagineBundle now removed PHP-CS-FIXER dependency\r\n at the moment.\r\n\r\nHow can we solve the problem in composer?\r\n\r\nOne solution will be to add support for optional requirements which can be installed or skipped.\r\nWhat do you think about this?\r\n\r\nRelated Issues (I found)\r\n- #6321 use case for conflict\r\n\r\nPossible syntax\r\n```json\r\n{\r\n  \"optional\": {\r\n    \"friendsofphp/php-cs-fixer\": \"^1.0|^2.0\"\r\n  }, \r\n  \"optional-dev\": {\r\n    \"friendsofphp/php-cs-fixer\": \"^1.0|^2.0\"\r\n  }\r\n}\r\n```\r\nor question mark before\r\n```json\r\n{\r\n  \"require-dev\": {\r\n    \"?friendsofphp/php-cs-fixer\": \"^1.0|^2.0\"\r\n  }\r\n}\r\n```\r\nor dash for skipped\r\n```json\r\n{\r\n  \"require-dev\": {\r\n    \"friendsofphp/php-cs-fixer\": \"^1.0|^2.0|-\"\r\n  }\r\n}\r\n```\r\n\r\n\r\nThank you very much\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6965/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Seldaek": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/015927d0b058eb5d31e098952f7f1ab9613cb959", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/1a6e3ee8c75579d179dd440b1a61d3c900372457", "message": "Show script description for custom commands in run-script --list, fixes #7009"}, {"url": "https://api.github.com/repos/composer/composer/commits/994bac0c153348c09d42cd77225c465c1b81e8e9", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/59fcb91912932b5f9acd2f6d9c774b72907ef31d", "message": "Merge pull request #6985 from nicolas-grekas/get-url-contents\n\nAdd RemoteFilesystem::getRemoteContents() extension point"}, {"url": "https://api.github.com/repos/composer/composer/commits/82b80a54513085e4c791e0671775341a459d197f", "message": "Merge pull request #6979 from nicolas-grekas/fix-ctrl-c\n\nFix CTRL+C handling during create-project"}, {"url": "https://api.github.com/repos/composer/composer/commits/4331b116248b70e2adac3eb6df106ef71132206a", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/188b3a35c8d2a2a32a23f18b6b628696cb0eeff6", "message": "Tweak license deprecation text to handle + more gracefully, fixes #6981"}, {"url": "https://api.github.com/repos/composer/composer/commits/9a443e6d0bf336e45951078b399c4d8cfcac4bcd", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/20699905abf2613d4d91c03e80ca2a7f9ab8f0f1", "message": "Update changelog"}, {"url": "https://api.github.com/repos/composer/composer/commits/74838790b55ef82cb557372a73321694103e402d", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/e6114b2ca7b2eb75920fd03957070045a1ac1bc1", "message": "Fix support for replacing dist refs in gitlab URLs and add support for gitlab/github enterprise too"}, {"url": "https://api.github.com/repos/composer/composer/commits/be040f8e3111b38c1e49ae5cd6b929dbf5c39045", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/ac9c7a50e927f402c4c95fe05eb4043263b6d0cb", "message": "Merge pull request #6976 from nicolas-grekas/fix-autoloader\n\nFix generated static map..."}, {"url": "https://api.github.com/repos/composer/composer/commits/4a7389f5b7070925a7fbaaaa99d2b961648ba5de", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/95d5e8dd947f4ec1402e96ddfcc8f6a7bb7bc0a6", "message": "Update changelog"}, {"url": "https://api.github.com/repos/composer/composer/commits/8c7b13e9beb7f82de9645f9d71f8c5204a0495fd", "message": "Update content hash"}, {"url": "https://api.github.com/repos/composer/composer/commits/8ff3a8bcc048b6d6d091ddbf0975b04f94fef016", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/5e223dae61b7b04ad4cf8361cb60ab76d07a63f8", "message": "Update jsonlint dep"}, {"url": "https://api.github.com/repos/composer/composer/commits/ebc3c7d0da6393b92611c2f2b3c7847faf661bb8", "message": "Merge pull request #6973 from nicolas-grekas/fix-autoloader\n\nFix BC of generated static map"}, {"url": "https://api.github.com/repos/composer/composer/commits/749b4c46b74f9702fc4f6abde6480fb6f0373ed6", "message": "Bump branch alias"}, {"url": "https://api.github.com/repos/composer/composer/commits/c962be2f4123434b4843b1d945724a633237ce00", "message": "Update changelog for 1.6.0"}, {"url": "https://api.github.com/repos/composer/composer/commits/882b82d542b45435bae1d95b33e225427950c59c", "message": "Add COMPOSER_MEMORY_LIMIT env var to force a given memory_limit, fixes #6931"}, {"url": "https://api.github.com/repos/composer/composer/commits/5cd0fef7ff75dbe32c06a8d36b4f837852a6d004", "message": "Upgrade to SPDX License 3.0 and handle deprecations more gracefully, fixes #6951"}, {"url": "https://api.github.com/repos/composer/composer/commits/ab8437ce06256109d10731f3baff3d513e93ad1f", "message": "Merge remote-tracking branch 'swumao/feature-6892'"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/511765", "body": "dumb http != http://. http still works, and afaik it's still better/faster than git protocol which is really old.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/511765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/511768", "body": "As for old version of git.. how old is that? I think very very old, if github thought it didn't matter anymore.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/511768/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/511784", "body": "Because some people, including me and my shitty cygwin git, have problems with https. Some had problems with git protocol too I believe. That's why symfony-standard ended up with http://. Interop hell.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/511784/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/511804", "body": "Ok, this is fixing it actually http://stackoverflow.com/questions/3777075/https-github-access/4454754#4454754 - just for the record. But let's keep it as is until someone complains..\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/511804/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/512425", "body": "Yes, it doesn't suffer from the cygwin issues, but I use cygwin all the time for many other reasons so it's easier to grab git from there. Anyway it's solved now.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/512425/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/515655", "body": "Yeah this is temporary just as a way to make sure that @naderman fixes the problem I am having.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/515655/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/589730", "body": "Yeah, copy paste ftw. Why mbstring? Well I just wanted to be sure that we don't blow up on non-ascii package names. Not that I think this should happen, but better safe than sorry, no?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/589730/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/590502", "body": "This isn't entirely true, the following outputs \u00f6 and then garbage (if saved/served as UTF8).\n\n```\necho utf8_encode(strtolower(utf8_decode('\u00d6')));\necho strtolower('\u00d6');\n```\n\nAll I want to make sure of is that the package names are case insensitive. I lowercase them when they're output in packagist, and I thought lowercasing the user input in composer would complete the loop. Now if we say we only support [a-z0-9_-] in package names, fine by me, but we need to make this explicit and not allow stuff to be mangled if it contains accented chars.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/590502/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/590670", "body": "Sorry to insist, but I'm not seeing the same here:\n\n```\necho ord(utf8_encode(strtolower(utf8_decode('\u00d6'))));\necho ord(strtolower('\u00d6'));\necho ord(utf8_encode(mb_strtolower(utf8_decode('\u00d6'), 'ISO-8859-1')));\necho ord(mb_strtolower('\u00d6', 'UTF-8'));\n```\n\nPrints 195 227 195 195\nPrinting the second byte of each gets you: 182 150 182 182\n\nIt seems to me that strtolower() with UTF8 input is touching things that go beyond the scope of ASCII chars, and therefore should not be relied upon since we do have UTF8.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/590670/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/590678", "body": "According to PHP docs, strtolower follows the locale, if I do `setlocale(LC_ALL, 'C')` before the other calls, then it works as you said, since with the C locale it doesn't try to be smart.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/590678/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/590690", "body": "Yeah but then we need to do that in Composer, or rely on mbstring, which works just fine with UTF8. I'm not sure why so much hate :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/590690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/590709", "body": "In my experience it has worked just fine for years, but anyway, I hope [this settles the case](https://github.com/composer/composer/commit/07e181c6ebde32ec49fd829e6aba4154f1a6f51d)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/590709/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/619289", "body": "Copy paste mistake I guess, I will fix it.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/619289/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": []}, "nicolas-grekas": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/5601f07bfadc2359c53f9fa92f96d5249120188d", "message": "Add RemoteFilesystem::getRemoteContents() extension point"}, {"url": "https://api.github.com/repos/composer/composer/commits/251a347efbae4dbedb5c45f1571265e0a8705230", "message": "Fix CTRL+C handling during create-project"}, {"url": "https://api.github.com/repos/composer/composer/commits/0c912d6eee60505333479c71e5708ce263ae65ae", "message": "Fix generated static map..."}, {"url": "https://api.github.com/repos/composer/composer/commits/ce70e0e9dd63e4f3fcdd0eb2d960873d160a3a2f", "message": "Fix BC of generated static map"}], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/3951", "title": "Concurrent git clone and downloads with React", "body": "This adds an optional event loop argument and promises as return values to the GitDownloader.\nThe Installer takes advantage of it to trigger several `git clone` and manage them concurrently.\nNo change is made to the behavior of the code when no event loop is used, so that tests still pass.\nThis could be the first step towards parallel downloads in composer: the other downloaders would need to be updated following the same principle, the GitDownloader also needs to be finished (only public repos can be managed by the loop for now).\nThe console output also would need to be handled differently.\nIf someone else likes the approach, help is welcomed for porting the other downloaders to use and return promises! (a PR on this PR anyone?).\nPHP 5.3 is not supported by React, but there is no blocker to change that.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "remicollet": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/b0fa2bd5e20b5300cdfe977678eea315e96df9a3", "message": "Fix dependency on seld/jsonlint 1.4\n\nAs deprecated flag is used."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zymsys": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/7011", "title": "Show reason for php version package mismatch due to config.platform", "body": "A couple of times I've run into a frustrating situation where a config.platform generated by the Symfony installer has specified a php 5 version and I've changed my require to php 7 without realizing the config.platform issue. That leaves me hunting for a version of php that isn't installed anywhere on my system. Using verbose or even very very verbose doesn't seem to help. \r\n\r\nI used xdebug to track it down and saw that the package knew what the problem really was in its description but it wasn't revealing this to the user. This patch exposes that information. The nested parens aren't pretty, but I think developers will be able to parse it.\r\n\r\nThe patch starts by determining the version in the same way it used to. Then it double checks that we have a package, and that it is a CompletePackage so that it has a description. If so it appends the description to the version information.\r\n\r\nI double checked it with phpcs and it complained about line lengths, but it also did this for much of the rest of the file.\r\n\r\nThe output looks like this:\r\n\r\n```\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\nYour requirements could not be resolved to an installable set of packages.\r\n\r\n  Problem 1\r\n    - This package requires php >=7.0.0 but your PHP version (5.6.0; Package overridden via config.platform (actual: 7.0.22)) does not satisfy that requirement.\r\n```", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tanarurkerem": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/7006", "title": "Update how-do-i-install-a-package-to-a-custom-path-for-my-framework.md", "body": "Title changed", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "carusogabriel": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6995", "title": "Use $strict param in functions that have it", "body": "Some functions, e.g. `in_array`, have a third param to enable strict comparison. With PHP-CS-Fixer `strict_param` rule, we can fix all of them :shipit:", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/6982", "title": "Fixes from PHPStan level 0", "body": "Some, not all, fixes found by running [`PHPStan`](https://github.com/phpstan/phpstan) at level 0:\r\n\r\nFile | Problem\r\n---- | ----\r\nsrc/Composer/DependencyResolver/Rule.php:56 | Access to an undefined property Composer\\DependencyResolver\\Rule::$job.\r\nsrc/Composer/Factory.php:549 | Class Composer\\Installer\\MetapackageInstaller does not have a constructor and must be instantiated without any parameters.\r\nsrc/Composer/Command/DiagnoseCommand.php:38 | Property Composer\\Command\\DiagnoseCommand::$rfs has unknown class Composer\\Command\\RemoteFileSystem as its type.\r\nsrc/Composer/Command/InitCommand.php:282 | Anonymous function has an unused use $self.\r\nsrc/Composer/Repository/RepositoryInterface.php:73 | Return typehint of method Composer\\Repository\\RepositoryInterface::search() has invalid type array.\r\nsrc/Composer/Package/Archiver/BaseExcludeFilter.php:78 | Parameter $lineParser of method Composer\\Package\\Archiver\\BaseExcludeFilter::parseLines() has invalid typehint type Composer\\Package\\Archiver\\callback.\r\nsrc/Composer/Installer/PluginInstaller.php: 37 | Constructor of class Composer\\Installer\\PluginInstaller has an unused parameter $type.\r\nsrc/Composer/Json/JsonManipulator.php:232 | Anonymous function has an unused use $name.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/6896", "title": "Add PHPUnit 6 support", "body": "I've added `PHPUnit 6` support to `Composer`. Changes:\r\n- Define mocks with fluent interface;\r\n- `setExpectedException` isn't available in version `6`, so I substitute to `@expectedException` and `@expectedExceptionMessage` notations. But, there are some tests that these expectations are variables, so, I created a method layer in `Composer\\TestCase` and extend those TestCases that need this method.\r\n\r\nOne question: why not extend all TestCases from `Composer\\TestCase`? I guess is easier for maintenance, isn't?", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wsandin": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6956", "title": "Fix for issue 6602 - warning when running composer as another user", "body": "Raising a warning if the current user doesn't match the initial ownership of the $home directory. \r\nNot sure how this works on let's say Windows, might have to add some extra checks for that.\r\n\r\nWould love some feedback on how I can improve this PR in order to merge into master.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "localheinz": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6942", "title": "Fix: Remove unused parameter and field", "body": "This PR\r\n\r\n* [x] removes an unused parameter and field from `Locker`\r\n\r\n\ud83d\udc81\u200d\u2642\ufe0f The instance of `RepositoryManager` passed in into its constructor is never used.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mbaynton": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6864", "title": "Proposed event on SolverProblemsException with power to trigger re-run.", "body": "So this is definitely not ready to actually merge yet, but @naderman suggested discussing PRs early, so here goes. Oh, in case there would otherwise be confusion, this is unrelated to my work on `replace`.\r\n\r\nThe problem this helps solve is enabling Drupal installations/updates for nontechie users without exceeding the resource limitations of a webserver environment; it's a huge pain point for Drupal right now that it isn't possible to do Composer-enabled installs/updates in a browser. The way it helps solve it is by allowing a plugin to initially restrict the `Pool` to a repository containing only one version of each required package, all of which are pre-selected to be compatible with each other; this should make the sat problem and number of modeled packages/decisions trivial/very fast in execution time/low in memory. For sites that only need things available from this special repository, a complete Composer run ought to work fine within the confines of a webserver environment. When the site does also have requirements from the wider world, the first solver run will fail, but it will fail fast. This PR would allow a plugin to then introduce packagist etc to the Pool and rerun the Solver. (I believe @thom8 has talked with some Composer maintainers about the possibility of running the solver on a remote \"solver as a service\" host; I've got a vague idea of also swapping out the standard solver for the remote one long-term when a full-scale dependency resolution is required.)\r\n\r\nSomething like this have a chance of going in?", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "am05mhz": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6751", "title": "adds 2 steps install script for windows users", "body": "just add a little convenience for windows users ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hboomsma": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6714", "title": "add gitlab-dist-format option", "body": "Add `gitlab-dist-format` configuration option for the `GitLabDriver`. It defaults to `zip` as is the current default. You can set it to `zip`, `tar.gz`, `tar` and `tar.bz2`.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kthbit": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6707", "title": "Teach fossil to use HTTP Basic and Fossil built-in authentication", "body": "Composer was unable to clone/pull from a Fossil repo that was protected by either HTTP Basic or Fossil  authentication. This patch attempts to fix that. Both (or either) authentications are stored in auth.json. HTTP Basic auth is specified as before, per domain. Fossil credentials are specified per remote repository, in case pulling from multiple remote repositories with different credentials for each.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "RobberPhex": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6683", "title": "fix gitlab repo config in composer.lock", "body": "1. When `attemptCloneFallback` use `generatePublicUrl` to get public_url, we cannot forget some gitlab instance doesn't support https. **So we get `scheme` from config.**\r\n2. When generate `composer.lock` file, we should use repo url *what user wrote* at `composer.json` , not we got from gitlab api.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Toflar": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6284", "title": "Improve memory usage a little by not creating new Link objects", "body": "I was able to shave off only a litte memory usage (about 2% on average) by this change.\r\nAt first I did not consider it to be worth discussing about because the improvements are not significant enough (well, a penny saved is a penny earned but still). However, I still decided to make the changes public because at the end of the day this is what open source is all about. Maybe someone can improve the impact even more based on my idea \ud83d\ude04 \r\n\r\nSo the idea behind it is that most `Rule` instances get a `$reasonData` assigned which mostly is an instance of `Link` or `CompletePackage`. While debugging a little, I noticed that even though a big amount of `Link` instances are actually of equal content, they are not the same (they do not share the same object hash). They are different objects because every `Package` creates its `Link` objects (`requires`,  `conflicts` etc.) when it is created. So the `Link` objects are not shared across memory.\r\nHence, I thought by making sure to not create them but instead reference to an already created one if it is the same should decrease memory usage. This seems to be true but I was expecting an even bigger impact. Now somebody can tell me maybe why the impact is not bigger or make it bigger based on my idea \ud83d\ude0b ", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "webflo": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6139", "title": "Test case for #6131", "body": "I think this is valid test case for #6131. Not 100% sure.\r\n\r\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "alcohol": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/5507", "title": "add a fixture for github issue #5505", "body": "not sure how to solve yet, or if it requires solving at all\n", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "stratdes": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/5360", "title": "ISSUE 3568 Show downloading package speed", "body": "- Added new class Download to represent the download progress\n- Added the util class DownloadUnitsFormatter to format Download class speed and ETA values\n- Some refactor on RemoteFileSystem\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hirak": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/5293", "title": "Parallel downloader", "body": "## Parallel Prefetcher\n\nporting from https://github.com/hirak/prestissimo\n- Fetching packages in parallel at `Composer\\Installer::doInstall()`\n- This is NOT replacement of `Composer\\Util\\RemoteFilesystem`.\n  - `repository.json` download in serial\n- If `!extension_loaded('curl')`, then fallback to RemoteFilesystem\n- If it fails to download, then fallback to RemoteFilesystem. (do not retry / do not show any prompt)\n### See also\n\nhttps://github.com/composer/composer/pull/2696\nhttps://github.com/composer/composer/issues/3930#issuecomment-193750145\n### Question\n\n`github-token`, `gitlab-token` options are still alive?\nhttps://github.com/composer/composer/blob/36665d791d8ec6520e31880dfe462bd2bf799132/src/Composer/Util/RemoteFilesystem.php#L235\nhttps://github.com/composer/composer/blob/36665d791d8ec6520e31880dfe462bd2bf799132/src/Composer/Util/RemoteFilesystem.php#L240\n\nI can't find any documentation about that options. In this P-R, I didn't implement it yet.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "curry684": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/4998", "title": "Removed inefficiency in the autoloader generation", "body": "This line was originally added for PHP 5.2 compatibility but that was dropped long ago, so no longer need to incur the handful of extra function calls on every autoloader init.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "aripringle": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/4210", "title": "add support for config inheritance", "body": "Refs #183. This is a refactoring of #1013, with attempts to address the comments in that thread.\n\nAll credit goes to @1stvamp for the original code.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "naderman": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/4163", "title": "[WIP] RepositorySet / Pool Split & Load only explicitly referenced package data", "body": "This is a fixed version of https://github.com/composer/composer/pull/3994\n\nTodo:\n- [ ] RepositorySetTest\n- [ ] don't use object state to construct pool in RepositorySet\n- [x] move request name collection logic into request - solver should take repo set\n- [ ] evaluate if RepositorySet and CompositeRepository should be merged\n- [ ] refactor policy to work with repositoryset in addition to pool\n- [ ] remove uses of small pools from installer\n- [ ] this should be empty: `grep -ri \"pool\" src/ | grep -v \"src/Composer/DependencyResolver\"`\n", "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/2898", "title": "[WIP] Extension installer", "body": "Supports PHP & HHVM.\n\nTodo:\n- [ ] Need to come up with a solution for ext-\\* packages actually being installable now, so extensions can be compiled automatically to satisfy dependencies on extensions.\n- [ ] Documentation\n- [ ] Use a different downloader to download binary builds from github releases for windows (or pecl for PHP)\n- [ ] Output information on configuring the server to include extension.so\n\nReplaces the earlier PR #498\n", "author_association": "OWNER"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/449810", "body": "Indeed.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/449810/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/588527", "body": "Why would you use mbstring here? Just strtolower should be fine. And indeed only one argument.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/588527/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/589953", "body": "honestly mb_strtolower is more likely to blow up than strtolower. strtolower touches only ASCII and leaves the rest alone. strtolower is an operation that doesn't even make sense on a variety of unicode characters. In addition this makes the behaviour of the solver dependent on whether mbstring is installed. So please let's avoid the use of any mbstring functions.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/589953/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/590645", "body": "For a start we should handle UTF-8 only. Anything (in patricular our json files) in any other encoding or character set should be outright rejected. Apart from that your example actually works fine. The result of both lines is precisely the same. However it's entirely irrelevant because utf8_decode turns it into ISO-8859-1 which we would have rejected anyway. UTF-8 on the other hand stores only ASCII characters as single bytes, and strtolower only operates on those characters.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/590645/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/590654", "body": "Only case where I could see your example mangle anything, is if you happen to let mbstring overload your string functions. That feature is an absolute catastrophe and all the more reason to stay as far away from mbstring as possible.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/590654/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/590684", "body": "Indeed, I should have pointed that out. But setting the locale to C is a good idea in general to avoid strangeness ;-)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/590684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/590693", "body": "Many many hours of trying to locate bugs which turned out to be caused by mbstring :P And yes I'd suggest we use a C locale in composer and avoid mbstring.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/590693/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/590785", "body": "Thank you ;-)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/590785/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/125833", "body": "I tend to agree with that\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/125833/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "fcastilloes": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/4036", "title": "Add support to interactive scripts defined in composer.json", "body": "This change should allow for interactive scripts defined in composer.json as requested in issue #3299 without breaking non-interactive scripts.\n\nAs far as I know, the Process component accepts both a stream or a string as input argument. I see no reason to pass a string, but the stdin is useful. Any reasons not to do it or something I didn't consider?\n\nI've run the test suite and introduces no errors.\n\nThanks.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pierrejoye": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/3897", "title": "draft support for Pickle in Composer", "body": "Draft support for Pickle (https://github.com/FriendsOfPHP/pickle) in Composer.\n\nSpent more time to dig composer code than actually implement that but at least it works to install exts from within a project.\n\nExample project and extension composer.json:\nhttps://gist.github.com/pierrejoye/1bbc2bdcec5887e60490\n\nIf you like to test with more extensions:\ngit  clone myext\ncd myext\npickle convert\n\nAdd the dep to your project. If you do not want to fork an ext, you can create a dep vs a zip file and use the artifact repository, it should work.\n\nStill many things to solve but at least there is something to play with now\n\nUpdate:\n\nAccording to our discussions, it is now a two steps process to install extensions, to make sure users understand that installing extensions may affect many projects:\n\nFirst, the usual command:\ncomposer install\n\ncomposer will tell you to run\ncomposer install --install-extensions\n\nif the project has extensions dependencies\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "frederikbosch": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/3608", "title": "Remove authentication credentials from git config file", "body": "When using private repositories, composer leaves authentication credentials in .git/config. This is undesired behaviour because credentials are potentially leaked. This PR removes credentials after fetching. It contains tests for download and update.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "padraic": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/2814", "title": "[WIP] Developer Package Signing", "body": "This PR is a work in progress. Expect changes and check the TODO list. Review/testing is welcome.\n\nThis pull request is intended to add support for developer-level package signing to Composer using openssl. It includes a \"create-keys\" command to generate an RSA private and public keys (the private key should be encrypted using a passphrase), an \"add-dev-key\" command which imports a private key and extracts the public key for distribution in a package within keys.json, and a \"sign\" command which assembles a manifest of files, their checksums, and lengths, and signs the manifest using a private key within manifest.json. This PR does not address any form of package or metadata signing by Packagist which is also required for repository-level security. This PR does not depend on SSL/TLS support.\n\nTODO:\n1. ADD support for Composer to cache keys.json data since it should only be populated on first encounter so that attacks to alter keys.json have a chance to be detected.\n2. ADD support for Composer to verify package signatures as part of its install/update routines.\n3. ADD verification status to install/update output.\n4. ADD composer command options to reject unverified packages (I'll make it optional but it's strongly suggested that this become enabled by default in time).\n\nYou can currently test sign packages using the following commands (the first three are only required to setup keys):\n\n```\nphp composer.phar create-keys --prefix=myUniquePrefix\n\nphp composer.phar add-dev-key ./path/to/myUniquePrefix-private.pem\n\nphp composer.phar sign-dev-keys ./path/to/myUniquePrefix-private.pem\n```\n\n```\nphp composer.phar sign ./path/to/myUniquePrefix-private.pem\n```\n\nThis should result in two new files: keys.json (used to distribute authorised public keys) and manifest.json (a signed listing of all package files, their SHA256 checksums and lengths).\n\nThe theory is to sign packages and commit keys/manifest changes as the FINAL step before tagging a release. If you make any other changes, or altered the tag after signing, then the signatures could never be verified by users.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "peteraba": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/2696", "title": "Curl transfer", "body": "Added curl fallback for data transfer. Moved hard coded stream context calls into separate transfer class. Created interface for transfer classes. Added tests.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ghost": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/composer/composer/issues/comments/3517632", "body": "I am having this issue while trying to install the Composer (commit 098ba8e5) dependencies. I think it can provide more background to understand the issue (seems related with the last @Seldaek [comment](https://github.com/composer/composer/issues/162#issuecomment-3201363))\n\n```\nvagrant@lucid64:/tmp/composer$ composer.phar --version\nComposer version 098ba8e\nvagrant@lucid64:/tmp/composer$ composer.phar install\nInstalling dependencies.\nSegmentation fault\nvagrant@lucid64:/tmp/composer$ composer.phar install\nInstalling dependencies.\nPHP Warning:  assert(): Assertion failed in phar:///usr/local/bin/composer.phar/src/Composer/DependencyResolver/Solver.php on line 2\nSegmentation fault\nvagrant@lucid64:/tmp/composer$ ls\nbin  composer.json  doc  LICENSE  phpunit.xml.dist  PORTING_INFO  README.md  src  tests  un.php  vendor\nvagrant@lucid64:/tmp/composer$ rm -rf vendor/\nvagrant@lucid64:/tmp/composer$ composer.phar install\nInstalling dependencies.\nPHP Warning:  assert(): Assertion failed in phar:///usr/local/bin/composer.phar/src/Composer/DependencyResolver/Solver.php on line 2\nSegmentation fault\n```\n\nNote the `require` key of `composer.json`:\n\n```\n\"require\": {\n    \"php\": \">=5.3.0\",\n    \"symfony/console\": \">2.0,<2.2-dev\",\n    \"symfony/finder\": \">2.0,<2.2-dev\",\n    \"symfony/process\": \">2.0,<2.2-dev\"\n},\n```\n\nThen I saw in Packagist that the Symfony components are available since the 2.0.4 release, and just changed one of the dependencies to be greater than 2.0.4:\n\n```\n\"require\": {\n    \"php\": \">=5.3.0\",\n    \"symfony/console\": \">2.0.4,<2.2-dev\",\n    \"symfony/finder\": \">2.0,<2.2-dev\",\n    \"symfony/process\": \">2.0,<2.2-dev\"\n},\n```\n\nIt partialy worked (it did not created the autoload files)!\n\n```\nvagrant@lucid64:/tmp/composer$ rm -rf composer.lock vendor/\nvagrant@lucid64:/tmp/composer$ composer.phar install\nInstalling dependencies.\nDownloading http://github.com/symfony/Process/zipball/96512471ac1481eef59051a26239e825105ddd1d to /tmp/composer/vendor/symfony/process/Symfony/Component/Process/aa301e02ac3e7461c1afa753ec3c1e60\nUnpacking archive\nCleaning up\nDownloading http://github.com/symfony/Finder/zipball/dd56fc9f1f0baa006d7491d5c17eb3e2dd8a066c to /tmp/composer/vendor/symfony/finder/Symfony/Component/Finder/e0a2d80a077d2d0f471b10f29be1f9b2\nUnpacking archive\nCleaning up\nDownloading http://github.com/symfony/Console/zipball/63af6eb3f342ac79f0ebbc3bfc59721e247cbb4c to /tmp/composer/vendor/symfony/console/Symfony/Component/Console/b40d67c9ca6f11df924d9c943b05b67f\nUnpacking archive\nCleaning up\nWriting lock file\nGenerating autoload files\nSegmentation fault\nvagrant@lucid64:/tmp/composer$ ls -a vendor/.composer/\n.  ..  installed.json\n```\n\nThen, I updated `composer.json` again:\n\n```\n\"require\": {\n    \"php\": \">=5.3.0\",\n    \"symfony/console\": \">2.0.4,<2.2-dev\",\n    \"symfony/finder\": \">2.0.4,<2.2-dev\",\n    \"symfony/process\": \">2.0.4,<2.2-dev\"\n},\n```\n\nAnd it finally worked, without segfaults:\n\n```\nvagrant@lucid64:/tmp/composer$ rm -rf composer.lock vendor/\nvagrant@lucid64:/tmp/composer$ composer.phar install\nInstalling dependencies.\nDownloading http://github.com/symfony/Process/zipball/96512471ac1481eef59051a26239e825105ddd1d to /tmp/composer/vendor/symfony/process/Symfony/Component/Process/ed4e7277155fbd8bae1f020ed0a183e3\nUnpacking archive\nCleaning up\nDownloading http://github.com/symfony/Finder/zipball/dd56fc9f1f0baa006d7491d5c17eb3e2dd8a066c to /tmp/composer/vendor/symfony/finder/Symfony/Component/Finder/dfa893b97922079460f7fd8163dddc98\nUnpacking archive\nCleaning up\nDownloading http://github.com/symfony/Console/zipball/63af6eb3f342ac79f0ebbc3bfc59721e247cbb4c to /tmp/composer/vendor/symfony/console/Symfony/Component/Console/2d5351c867fdf130ea823d63aeec5a4f\nUnpacking archive\nCleaning up\nWriting lock file\nGenerating autoload files\n```\n\nNote that I set the Symfony components to be greater than `>2.0.4`. Greater equal (`>=2.0.4`) segfaults also.\n\nBTW, PHP 5.3.2.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/3517632/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/3540567", "body": "@mpdude Yes, and seems irony Suhosin giving contribution to segfaults :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/3540567/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/6840068", "body": "how to fix it in a environnement where php.ini is not on dev's control ? \n\ni've tried php_flag apc.enable_cli 1 in .htaccess, same result. \n\nFatal error: include(): Cannot redeclare class composer\\command\\showcommand in phar:///data_path/composer.phar/vendor/composer/ClassLoader.php on line 150\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/6840068/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/5022153", "body": "I have a very slow connection and it would be wonderful to know the progress of git clones.  Git itself shows progress, but when composer clones a repo that is hidden.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/5022153/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/5022348", "body": "@stof, `---verbose` only shows that it's cloning, not the progress achieved so there is no way of knowing how fast or slow the clone is actually taking.\n\ne.g.\n\n```\nInstalling sensio/generator-bundle (dev-master)\n  - Package sensio/generator-bundle (dev-master)\n    Cloning 06d07e0514d310be8d5630bfd93637136991c30c\nCloning into 'C:\\xampp\\htdocs\\core2\\vendor/sensio/generator-bundle/Sensio/Bundle/GeneratorBundle'...\n```\n\nThat's it, no x%, no git clone output etc.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/5022348/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/6298953", "body": "I'm getting a similar error:\n\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 78 bytes) in phar:///<path to site>/composer.phar/src/Composer/DependencyResolver/Solver.php on line 169\n\nNote: have the latest update file.\n\nAny ideas?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/6298953/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/6327064", "body": "Thanks, it's working now.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/6327064/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4592997", "body": "Same here with\n\n```\n\"require\": {\n    \"php\": \">=5.3.2\",\n    \"symfony/framework-bundle\": \"2.*\",\n    \"symfony/twig-bundle\": \"2.*\",\n    \"twig/twig\": \"*\"\n},\n```\n\nworks fine after removing twig\n\n```\n\"require\": {\n    \"php\": \">=5.3.2\",\n    \"symfony/framework-bundle\": \"2.*\",\n    \"symfony/twig-bundle\": \"2.*\"\n},\n```\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4592997/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4605254", "body": "According to the docs, you are doing it wrong.\n\n\"Package\" type is used when repository does NOT have its own `composer.json` config file. In your case you should go with VCS type. For more information see VCS and Package chapters at http://getcomposer.org/doc/05-repositories.md\n\nHowever, from my experience you can still have some problems with private repos (see #482). If you get this working, you should help in #482 ;>\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4605254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4606676", "body": "After re-reading the docs at http://getcomposer.org/doc/05-repositories.md ... as I understand, the repo defined with VCS type should be picked up automatically. There is also such example in the docs.\n\nHowever the sentence \"When hosting your own package repository it is recommended to use a composer one.\" from \"Hosting your own\" chapter is confusing me. Is having own packages.json file _required_ or _recommended_ ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4606676/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4607166", "body": "> If you want to create a \"composer\" type repository, you must have a packages.json file.\n\nOf course. This is not what I meant.... Do I **have to** create composer repository (with \"packages.json\" file) in order to correctly define private repos as dependencies? Using VCS-type repository doesn't seem to work for me.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4607166/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4614428", "body": "@brikou `symfony/finder` is not a private repository.\n1. You need to use slash instead of colon between symfony and finder.\n2. Defining VCS repository for `symfony/finder` is not necessary as it is published in Packagist: http://packagist.org/packages/symfony/finder \n3. **The problem here is related to private repositories which are not (cannot be) published in Packagist.**\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4614428/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4624494", "body": "@Seldaek After your suggestion I changed 'vcs' to 'git' and used the following form:\n\n```\n\"repositories\": [\n    {\n        \"type\": \"git\",\n        \"url\": \"git@bitbucket.org:vendor/abcdeprivatebundle.git\"\n    }\n]\n```\n\nwhich gives the same error message. I have tried to debug the issue... Looks like the repository is downloaded (as autorization occurs and repository is saved in temporary dir - thanks @brikou for this info).\n\nBut, the error still occurs. Dumping the `$this->reasons` variable before https://github.com/composer/composer/blob/master/src/Composer/DependencyResolver/Problem.php#L84 line is not more helpful:\n\n```\nArray\n(\n    [a:4:{s:8:\"packages\";a:0:{}s:3:\"cmd\";s:7:\"install\";s:11:\"packageName\";s:27:\"vendor/abcde-private-bundle\";s:10:\"constraint\";O:47:\"Composer\\Package\\LinkConstraint\\MultiConstraint\":1:{s:14:\" * constraints\";a:0:{}}}] => Array\n        (\n            [rule] => \n            [job] => Array\n                (\n                    [packages] => Array\n                        (\n                        )\n\n                    [cmd] => install\n                    [packageName] => vendor/abcde-private-bundle\n                    [constraint] => Composer\\Package\\LinkConstraint\\MultiConstraint Object\n                        (\n                            [constraints:protected] => Array\n                                (\n                                )\n\n                        )\n\n                )\n\n        )\n\n)\n```\n\nAnyone willing to help?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4624494/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4629360", "body": "Ok, I found the issue. Will send a patch soon.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4629360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4629889", "body": "See #487\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4629889/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4636210", "body": "The following form work fine now (handled by `GitDriver`):\n\n```\n\"repositories\": [\n    {\n        \"type\": \"vcs\",\n        \"url\": \"git@bitbucket.org:vendor/repo.git\"\n    }\n]\n```\n\nPrivate repos specified as `https://bitbucket.org/vendor/repo.git` or `https://vendor@bitbucket.org/vendor/repo.git` does not work.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4636210/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/8442831", "body": "@Seldaek Given the information in #1092 about security of git protocol - can we increase the priority of this issue?\n\nSide note: when implementing HTTPS support to bitbucket recently added `github-protocols` config option could be reused.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/8442831/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/8443130", "body": "Wait... after reading the code of GitHubDriver & some docs about BitBucket API... `git@bitbucket.org:vendor/repo.git` is SSH not GIT protocol?\n\nOk, my bad - so this issue seems to deserve low priority :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/8443130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4871142", "body": "I found similar issue. After updating/recreating `packages.json` with Satis for 30+ private repos, some of my repos were missing.\n\nAs I found out this was because of local copy of repository which was not properly initialized (?). The repository in a temp directory had only `.git` directory (with objects and refs subdirectories) - nothing else.\n\nI am not sure what caused this. There was no error message. Maybe some internet connection problems or temporary http error like 503? If the cause of this can not be fixed - can we at least throw an exception ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4871142/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4896973", "body": "I can not reproduce the issue - it occured randomly. \n\nSatis is a separate issue which is fixed in a waiting PR. We also need to throw exception in Satis when required package was not found - either because of badly cloned git repo or because the package was defined without details about repository.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4896973/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/5240247", "body": "@Seldaek - since the major BC break has now occurred (where the `autoload.php` is located), maybe you could consider adding a non-hidden subdirectory for the 4 `autoload.php` dependencies?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/5240247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/5240485", "body": "@stof - \"is likely\" is probably a bit too strong, but one could just make \"composer-autoloader\" a protected key in the \"require\" schema. I'm only suggesting a non-hidden folder because this ticket is about the disadvantages of hidden folders? Unless it was only about the fact that the autoload.php was hidden - if that is the case, keep the `.composer` folder for the autoloader deps.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/5240485/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/5240807", "body": "@jalliot - see https://groups.google.com/forum/?fromgroups#!topic/composer-dev/fWIs3KocwoA\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/5240807/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/5240910", "body": "How about `-composer`, `~composer`, `composer_` or `composer_deps` and make it a protected key that cant be specified in composer.json\n\nBut why is a hidden dir for the dependencies of composer objectionable (i.e all except the autoload.php)?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/5240910/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/5013734", "body": "@stanlemon I don't think you can get the package repos to specify the vendor dir, but in the `require` statements, it would be good to be able to override the default `vendor-dir` settings.  I already discussed this with @Seldaek \n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/5013734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/5013812", "body": "@mvriel or what about a type called 'require-extra' which is defined by `vendor => array(version, path)`\n\ne.g.\n\n```\n    \"require-extra\": {\n        \"foo/bar\": [\"1.2.3\", \"vendor-dir\"],\n    }, \n```\n\nThis way it can truly work for anything.  There are other usecases for example system modules e.g. in Zikula or Drupal where modules sort of need to go in a special folder.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/5013812/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4949211", "body": "Also, in this case there is no error message & no validation if requirements could be solved.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4949211/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4949780", "body": "fixed description of the issue\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4949780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4950521", "body": "I cant as these are **private repos**. Description with steps to reproduce should be enough.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4950521/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/5405513", "body": "This bug still exists (tested today with composer in version d60188903d) but the steps to reproduce can be simplified:\n- main repo's composer.json has dependencies which are installed via php composer.phar install\n- new dependency XYZ is added to composer.json (XYZ dependency also contains subdependencies)\n- php composer.phar update\n\nend result:\n\nXYZ dependency is installed but required subdependencies of XYZ dependency are **NOT** installed\n\n@naderman @Seldaek ping - could you give this issue a higher priority? thanks.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/5405513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "stof": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/449133", "body": "This class should probably implement the `IteratorAgregate` method to make it easier to use. There is no special code as the method is already implemented here :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/449133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/511757", "body": "you should probably use the git protocol here as the http protocol does not work for people using an old version of git (github dropped the support of dumb http a month ago) and has some issues by returning 403 responses in some cases\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/511757/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/511777", "body": "git < 1.6.6 does not support smart http.\n\nBut well, there is a way to change the url of submodule if needed by using `git submodule init` first and changing the url so it can stay as is.\n\nBtw, why changing https to http ? github gives the https url on the repo page, not the http one\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/511777/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/511782", "body": "and github documented that old version can simply use the git protocol :) They did it to allow optimizing the way they store the files.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/511782/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/514925", "body": "you should use mocks to test the solver. Currently, your test is not a unit test but a functional test relying on Packagist being up and containing  only one package: Monolog\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/514925/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/619243", "body": "why is it public instead of protected ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/619243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/80944", "body": "you should remove this file\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/80944/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/124668", "body": "you should remove the extra empty line\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/124668/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/124670", "body": "you should add the help for the command too\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/124670/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/124671", "body": "it should be protected IMO\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/124671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/125737", "body": "is it really necessary to use the finder here ? The command will not be added often, and they will likely be only a few ones so registering them explicitly could be more readable and maintainable (like it is done in Doctrine btw)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/125737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/127420", "body": "the `piblic` keyword should be omitted for interface as they can only define public methods anyway\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/127420/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/127422", "body": "same here\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/127422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/133157", "body": "the class name is `JsonLoader`\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/133157/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/133158", "body": "why aliasing it ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/133158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139530", "body": "@everzet the type is still there\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139531", "body": "all these use statement should probably be removed as they are the only changes in the class\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139532", "body": "what is it for ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139532/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139533", "body": "these should probably be renamed to be more explicit\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139533/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139534", "body": "the last two are probably useless as there is no change in the class to use them\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139535", "body": "this change is wrong as the commands are added explicitly, not by using the Finder to search for them\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139535/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139536", "body": "we should be consistent between the different managers. The `DownloaderManager` uses `UnexpectedValueException` for the corresponding case.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139536/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139537", "body": "the property should maybe be renamed to be clearer for someone reading the code\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139537/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139539", "body": "same here than for other managers. Choose one of the 2 exceptions.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139539/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139543", "body": "I don't see what is shorter by aliasing it to a longer name than `Application` :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139543/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139550", "body": "@chEbba because the way to update package depends of the way it was downloaded. For instance, when installing the package with a `git clone`, updating it simply means fetching the changes with git.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "xaav": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/511956", "body": "I'm using mysysgit, and don't have any problems.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/511956/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/81575", "body": "Sorry; another side affect when squashing commits.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/81575/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "damianb": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/512003", "body": "Echoing @xaav.  I've been using msysgit for a while, and haven't had problems with https github URLs.\n\nThough, I will say that when behind my college's extensive firewall setup, I have to use the git:// URLs (instead of the https URLs) in order to push/pull.  But, that's another story.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/512003/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "beberlei": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/588490", "body": "strtolower has no second parameter.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/588490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "weaverryan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/126563", "body": "I agree also - was a bit of copy-and-paste, but I've simplified it now.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/126563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "yethee": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/133593", "body": "Here typo\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/133593/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "everzet": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/139538", "body": "To be cleaner/shorter :-)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139538/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139540", "body": "It's for lock. It's not implemented yet ;-)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139540/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139541", "body": "Yeah, it would. I've just tried to finish this big refactoring as fast as possible. We'll clean Composer with later PRs ;-)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139541/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139544", "body": "Yeah, `UnexpectedValueException` is Seldaek legacy. I kinda don't like it, because `InvalidArgumentException` provides more contextual info :-) We'll clean those things in later PRs\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139544/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139545", "body": "Agree.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139545/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "chEbba": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/139549", "body": "Why does downloader need to have update and remove methods? It's really strange for Downloader, as we have update and uninstall methods in Intaller.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139549/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}}, "2": {"c00ler123": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7021", "title": "Composer file could not be downloaded (404 not found)", "body": "I tyring to install Laravel\r\n\r\nOutput of `composer diagnose`:\r\n\r\nd:\\web>composer diag\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking HTTP proxy: OK\r\nChecking HTTP proxy support for request_fulluri: OK\r\nChecking HTTPS proxy support for request_fulluri: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys:\r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  ****\r\n723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  ****\r\n8C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\nComposer version: 1.6.2\r\nPHP version: 7.2.1\r\nPHP binary path: D:\\php-7.2.1-nts-Win32-VC15-x86\\php.exe\r\n\r\nWhen I run this command:\r\n\r\ncomposer global require \"laravel/installer\"\r\n\r\nI get the following output:\r\n\r\n [Composer\\Downloader\\TransportException]\r\n The \"https://packagist.org/p/symfony/console%2433f24f3dbe55cff57fe06a5fa93b\r\n a0bbe3ae3b259e2c5b7d051da0238769fa0f.json\" file could not be downloaded (HT\r\n TP/1.1 404 Not Found)\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vnagara": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7020", "title": "Segment fault and out of memory on installation", "body": "Hi,\r\nI was out of programming a while (about 2 years). Now I tried to up to date my sources and got versioning conflict on _composer install_. After resolving api I got new worse bug segment fault on php5.6 and 10Gb Memory leak on php7.1.\r\nHere my data:\r\n\r\nMy `composer.json`:\r\n\r\n```json\r\n{\r\n    \"require\": {\r\n        \"libra/libra-assets-installer\":     \"2.2.0\",\r\n        \"libra/twitter-bootstrap-assets\":   \"3.3.0\"\r\n    }\r\n}\r\n```\r\n\r\nOutput of `composer diagnose` (__php5.6__):\r\n\r\n```\r\nChecking composer.json: WARNING\r\nNo license specified, it is recommended to do so. For closed-source software you may use \"proprietary\" as license.\r\nrequire.libra/libra-assets-installer : exact version constraints (2.2.0) should be avoided if the package follows semantic versioning\r\nrequire.libra/twitter-bootstrap-assets : exact version constraints (3.3.0) should be avoided if the package follows semantic versioning\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: \r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\nComposer version: 1.6.2\r\nPHP version: 5.6.33-1+0~20180105151408.9+stretch~1.gbp0deeda\r\nPHP binary path: /usr/bin/php5.6\r\n```\r\nWhen I run this command:\r\n\r\n```\r\nphp5.6 /usr/bin/composer -vvv install\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nReading ./composer.json\r\nLoading config file /home/user/composer/config.json\r\nLoading config file /home/user/.composer/auth.json\r\nLoading config file ./composer.json\r\nChecked CA file /etc/ssl/certs/ca-certificates.crt: valid\r\nExecuting command (/var/www/tmp/b): git branch --no-color --no-abbrev -v\r\nExecuting command (/var/www/tmp/b): git describe --exact-match --tags\r\nExecuting command (/var/www/tmp/b): git log --pretty=\"%H\" -n1 HEAD\r\nExecuting command (/var/www/tmp/b): hg branch\r\nExecuting command (/var/www/tmp/b): fossil branch list\r\nExecuting command (/var/www/tmp/b): fossil tag list\r\nExecuting command (/var/www/tmp/b): svn info --xml\r\nFailed to initialize global composer: Composer could not find the config file: /home/user/.composer/composer.json\r\nTo initialize a project, please create a composer.json file as described in the https://getcomposer.org/ \"Getting Started\" section\r\nReading /var/www/tmp/b/vendor/composer/installed.json\r\nRunning 1.6.2 (2018-01-05 15:28:41) with PHP 5.6.33-1+0~20180105151408.9+stretch~1.gbp0deeda on Linux / 4.9.0-5-amd64\r\nLoading composer repositories with package information\r\nDownloading https://packagist.org/packages.json\r\nWriting /home/user/.composer/cache/repo/https---packagist.org/packages.json into cache\r\nUpdating dependencies (including require-dev)\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2013.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2014.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2015.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2016.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2017.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2017-04.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2017-07.json from cache\r\nDownloading http://packagist.org/p/provider-2017-10%247fe61c2bcc3ee23f172c498bd8cf2f9a46ac2020b1bb656936850c57a091d417.json\r\nWriting /home/user/.composer/cache/repo/https---packagist.org/p-provider-2017-10.json into cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2018-01.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-archived.json from cache\r\nDownloading http://packagist.org/p/provider-latest%24a07e2c01b6005319524ed8cd28c942abb11d3a2bb7078410f77a3fc9d082b65e.json\r\nWriting /home/user/.composer/cache/repo/https---packagist.org/p-provider-latest.json into cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/provider-libra$libra-assets-installer.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/provider-libra$twitter-bootstrap-assets.json from cache\r\nResolving dependencies through SAT\r\nDependency resolution completed in 0.001 seconds\r\nAnalyzed 72 packages to resolve dependencies\r\nAnalyzed 61 rules to resolve dependencies\r\nPackage operations: 1 install, 0 updates, 0 removals\r\nInstalls: libra/twitter-bootstrap-assets:3.3.0\r\nSegmentation fault\r\n\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\nphp7.1 /usr/bin/composer install\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nReading ./composer.json\r\nLoading config file /home/user/.composer/config.json\r\nLoading config file /home/user/.composer/auth.json\r\nLoading config file ./composer.json\r\nChecked CA file /etc/ssl/certs/ca-certificates.crt: valid\r\nExecuting command (/var/www/tmp/b): git branch --no-color --no-abbrev -v\r\nExecuting command (/var/www/tmp/b): git describe --exact-match --tags\r\nExecuting command (/var/www/tmp/b): git log --pretty=\"%H\" -n1 HEAD\r\nExecuting command (/var/www/tmp/b): hg branch\r\nExecuting command (/var/www/tmp/b): fossil branch list\r\nExecuting command (/var/www/tmp/b): fossil tag list\r\nExecuting command (/var/www/tmp/b): svn info --xml\r\nFailed to initialize global composer: Composer could not find the config file: /home/user/.composer/composer.json\r\nTo initialize a project, please create a composer.json file as described in the https://getcomposer.org/ \"Getting Started\" section\r\nReading /var/www/tmp/b/vendor/composer/installed.json\r\nRunning 1.6.2 (2018-01-05 15:28:41) with PHP 7.1.13-1+0~20180105151623.14+stretch~1.gbp1086fa on Linux / 4.9.0-5-amd64\r\nLoading composer repositories with package information\r\nDownloading https://packagist.org/packages.json\r\nWriting /home/user/.composer/cache/repo/https---packagist.org/packages.json into cache\r\nUpdating dependencies (including require-dev)\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2013.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2014.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2015.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2016.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2017.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2017-04.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2017-07.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2017-10.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2018-01.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-archived.json from cache\r\nDownloading http://packagist.org/p/provider-latest%24b0107e8bd42cbfbf0f3dc7caf6776e71801478f60931c6d8f1aad89b4cd1e98d.json\r\nWriting /home/user/.composer/cache/repo/https---packagist.org/p-provider-latest.json into cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/provider-libra$libra-assets-installer.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/provider-libra$twitter-bootstrap-assets.json from cache\r\nResolving dependencies through SAT\r\nDependency resolution completed in 0.000 seconds\r\nAnalyzed 70 packages to resolve dependencies\r\nAnalyzed 59 rules to resolve dependencies\r\nPackage operations: 1 install, 0 updates, 0 removals\r\nInstalls: libra/twitter-bootstrap-assets:3.3.0\r\n\r\nmmap() failed: [12] Cannot allocate memory\r\n\r\nmmap() failed: [12] Cannot allocate memory\r\nPHP Fatal error:  Out of memory (allocated 13529776128) (tried to allocate 262144 bytes) in phar:///usr/bin/composer/src/Composer/Installer/LibraryInstaller.php on line 173\r\n\r\nFatal error: Out of memory (allocated 13529776128) (tried to allocate 262144 bytes) in phar:///usr/bin/composer/src/Composer/Installer/LibraryInstaller.php on line 173\r\n\r\nmmap() failed: [12] Cannot allocate memory\r\n\r\nmmap() failed: [12] Cannot allocate memory\r\nPHP Fatal error:  Out of memory (allocated 13529776128) (tried to allocate 262144 bytes) in Unknown on line 0\r\n\r\nFatal error: Out of memory (allocated 13529776128) (tried to allocate 262144 bytes) in Unknown on line 0\r\n\r\n(Consumed all my memory what is more than 12Gb).\r\n```\r\n\r\nAnd I expected this to happen:\r\n\r\nTo avoid segment fault. \r\nTo stop unlimited memory allocation.\r\n\r\nComposer version __1.0.0-alpha11__ works without errors. Next one fails.\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7020/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rickselby": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7018", "title": "--no-dev installs package replaced by dev requirement, not original requirement", "body": "My `composer.json`:\r\n\r\n_This is a simplified version of the issue I'm seeing. In the real case, my `require-dev` contains `\"graham-campbell/testbench\": \"^4.0\"`; its dependencies eventually require `laravel/framework`, which causes the issue. Both setups give the same results._\r\n\r\n```json\r\n{\r\n    \"require\": {\r\n        \"illuminate/contracts\": \"~5.5.0\"\r\n    },\r\n    \"require-dev\": {\r\n        \"laravel/framework\": \"~5.5.0\"\r\n    }\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nChecking composer.json: WARNING\r\nNo license specified, it is recommended to do so. For closed-source software you may use \"proprietary\" as license.\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: \r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\nComposer version: 1.6.2\r\nPHP version: 7.0.22-0ubuntu0.16.04.1\r\nPHP binary path: /usr/bin/php7.0\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer install --no-dev\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nLoading composer repositories with package information\r\nUpdating dependencies\r\nPackage operations: 30 installs, 0 updates, 0 removals\r\n...<snip>...\r\n  - Installing laravel/framework (v5.5.31): Downloading (100%)         \r\nWriting lock file\r\nGenerating autoload files\r\n```\r\n\r\nAnd I expected this to happen:\r\n\r\n```\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\nPackage operations: 3 installs, 0 updates, 0 removals\r\n...<snip>...\r\n  - Installing illuminate/contracts (v5.5.28): Downloading (100%)         \r\nWriting lock file\r\nGenerating autoload files\r\n```\r\n\r\n`laravel/framework`'s composer.json contains the following:\r\n```\r\n\"replace\": {\r\n   ...\r\n   \"illuminate/contracts\": \"self.version\",\r\n   ...\r\n}\r\n```\r\n\r\nI've read through the numerous issues relating to updating requiring require-dev to be solvable (#5224 etc), and that require-dev is parsed even when --no-dev is specified, so I'm not sure if anything can be done here, but thought it best to raise this case.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7018/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nadar": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7017", "title": "Composer TestCase", "body": "We have built a composer based open source CMS and Admin UI (https://luya.io), therefore we have made a composer plugin to track the packages from our \"type\". In order to test (phpunit) the composer plugin, we could not found any useful documentation, so where looking how you did => https://github.com/composer/composer/blob/master/tests/Composer/TestCase.php. \r\n\r\nSo we have used the TestCase class to test our own plugin, sadly due to this comment `https://github.com/composer/composer/commit/b656973a86c9f4793f45bd5fa68410878bb5acc3#comments` the test files are no longer shipped into the vendor folder.\r\n\r\nComposer is the future, so more plugins will follow, we need tools to test those plugins.\r\n\r\nSo my question is:\r\n\r\n1. Why not adding the test files for other developers to? (re add the `tests` folder)\r\n2. Or provide a basic TestCase for developers which makes it easy to test the plugin, like a composer testsuite?", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7017/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rabin999": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7012", "title": "while installing package through composer it require too much time to install and update too, i am using in laravel project ", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n    \"name\": \"laravel/laravel\",\r\n    \"description\": \"The Laravel Framework.\",\r\n    \"keywords\": [\"framework\", \"laravel\"],\r\n    \"license\": \"MIT\",\r\n    \"type\": \"project\",\r\n    \"require\": {\r\n        \"php\": \">=7.0.0\",\r\n        \"fideloper/proxy\": \"~3.3\",\r\n        \"laravel/framework\": \"5.5.*\",\r\n        \"laravel/tinker\": \"~1.0\"\r\n    },\r\n    \"require-dev\": {\r\n        \"filp/whoops\": \"~2.0\",\r\n        \"fzaninotto/faker\": \"~1.4\",\r\n        \"mockery/mockery\": \"~1.0\",\r\n        \"phpunit/phpunit\": \"~6.0\",\r\n        \"predis/predis\": \"^1.1\"\r\n    },\r\n    \"autoload\": {\r\n        \"classmap\": [\r\n            \"database/seeds\",\r\n            \"database/factories\"\r\n        ],\r\n        \"psr-4\": {\r\n            \"App\\\\\": \"app/\"\r\n        }\r\n    },\r\n    \"autoload-dev\": {\r\n        \"psr-4\": {\r\n            \"Tests\\\\\": \"tests/\"\r\n        }\r\n    },\r\n    \"extra\": {\r\n        \"laravel\": {\r\n            \"dont-discover\": [\r\n            ]\r\n        }\r\n    },\r\n    \"scripts\": {\r\n        \"post-root-package-install\": [\r\n            \"@php -r \\\"file_exists('.env') || copy('.env.example', '.env');\\\"\"\r\n        ],\r\n        \"post-create-project-cmd\": [\r\n            \"@php artisan key:generate\"\r\n        ],\r\n        \"post-autoload-dump\": [\r\n            \"Illuminate\\\\Foundation\\\\ComposerScripts::postAutoloadDump\",\r\n            \"@php artisan package:discover\"\r\n        ]\r\n    },\r\n    \"config\": {\r\n        \"preferred-install\": \"dist\",\r\n        \"sort-packages\": true,\r\n        \"optimize-autoloader\": true\r\n    }\r\n}\r\n\r\n```\r\n\r\nWhen I run command require or update on package, at least it took 15-18 min for small changes :(\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7012/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mhujer": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7010", "title": "composer validate show report scripts-descriptions for non-existent scripts", "body": "My `composer.json` (note the _typo_ in the first item in `scripts-descriptions`):\r\n\r\n```json\r\n  \"scripts\": {\r\n    \"test\": \"phpunit\",\r\n    \"phpcs\": \"phpcs --standard=PSR2 src\"\r\n  },\r\n  \"scripts-descriptions\": {\r\n    \"phpcsxxx\": \"Checks that the application code conforms to coding standard\",\r\n    \"test\": \"Launches the preconfigured PHPUnit\"\r\n  }\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nComposer version: 1.6.2\r\nPHP version: 7.1.12\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer validate --strict\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\n./composer.json is valid\r\n```\r\n\r\nAnd I expected this to happen:\r\n```\r\nWarning: Description for non-existent script \"phpcsxxx\" found in \"scripts-descriptions\"\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7010/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/7019", "title": "Validation warns if script description for nonexistent script is present", "body": "Fixes #7010", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "logig": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7007", "title": "`composer update` not work at local repo. The 1.4.x version used to work.", "body": "My `operating System`: Windows 10\r\nMy `config.json`:\r\n\r\n```json\r\n{\r\n    \"config\": {\r\n        \"optimize-autoloader\": true,\r\n        \"preferred-install\": \"dist\"\r\n    },\r\n    \"repositories\": {\r\n        \"packagist\": {\r\n            \"type\": \"composer\",\r\n            \"url\": \"https://packagist.phpcomposer.com\"\r\n        },\r\n        \"local\": {\r\n            \"type\": \"path\",\r\n            \"url\": \"D:/logig/*\",\r\n            \"options\": {\r\n                \"symlink\": true\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\n$ composer diagnose\r\nChecking composer.json: WARNING\r\nrequire.logig/wp-notice : unbound version constraints (dev-master) should be avoided\r\nrequire.logig/wp-admin-ui : unbound version constraints (dev-master) should be avoided\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys:\r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\nComposer version: 1.6.2\r\nPHP version: 7.1.1\r\nPHP binary path: D:\\Nginx\\php\\php.exe\r\n\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer update\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\n$ composer update\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\nNothing to install or update\r\nGenerating optimized autoload files\r\n\r\n```\r\nor sometimes:\r\n\r\n```\r\n$ composer update\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\nPackage operations: 0 installs, 1 update, 0 removals\r\n  - Removing junction for logig/wp-admin-ui (dev-master)\r\n\r\n\r\n  [Symfony\\Component\\Filesystem\\Exception\\IOException]\r\n  D:\\logig\\wordpress.local\\wp-content\\plugins\\mayun-oss-support\\vendor\\logig\\wp-admin-ui is not a junction and thus c\r\n  annot be removed as one\r\n\r\n```\r\n\r\nAnd I expected this to happen:\r\nUpdate the namespace autoload data which changed in my local repo's composer.json\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7007/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "staabm": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7004", "title": "svn log command misses credentials", "body": "we are running in the situation that composer tries to run a `svn log` command, and this doesnt succeed because of missing credentials.\r\n\r\nhaving a closer look at the code\r\n\r\nhttps://github.com/composer/composer/blob/994bac0c153348c09d42cd77225c465c1b81e8e9/src/Composer/Downloader/SvnDownloader.php#L173-L184\r\n\r\nreveals that this command is not executed using the `SvnUtil` which would otherwise provide this authentication stuff.\r\n\r\nwe see errors like\r\n\r\n```\r\n[localhost] < [error]\u2002\u2002 - Updating complex/portallib dev-trunk (/trunk/@8668 => /trunk/@8769):\r\n[localhost] < [error]\u2002\u2002Checking out /trunk/@8769\r\n[localhost] < [error] At revision 8769.\r\n[localhost] < [error]\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\r\n[localhost] < [error]\u2002\u2002 [RuntimeException]\r\n[localhost] < [error]\u2002\u2002 Failed to execute svn log -r8668:8769 --incremental\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\r\n[localhost] < [error]\u2002\u2002 svn: E170013: Unable to connect to a repository at URL https://xyz.com/svn/myproject/portallib/trunk\u2002\u2002\r\n[localhost] < [error]\u2002\u2002 svn: E215004: No more credentials or we tried too many times.\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\r\n[localhost] < [error]\u2002\u2002 Authentication failed\r\n[localhost] < [error] Exception trace:\r\n[localhost] < [error]\u2002\u2002() at phar:///usr/local/bin/composer/src/Composer/Downloader/SvnDownloader.php:174\r\n[localhost] < [error]\u2002\u2002Composer\\Downloader\\SvnDownloader->getCommitLogs() at phar:///usr/local/bin/composer/src/Composer/Downloader/VcsDownloader.php:167\r\n[localhost] < [error]\u2002\u2002Composer\\Downloader\\VcsDownloader->update() at phar:///usr/local/bin/composer/src/Composer/Downloader/DownloadManager.php:268\r\n[localhost] < [error]\u2002\u2002Composer\\Downloader\\DownloadManager->update() at phar:///usr/local/bin/composer/src/Composer/Installer/LibraryInstaller.php:207\r\n[localhost] < [error]\u2002\u2002Composer\\Installer\\LibraryInstaller->updateCode() at phar:///usr/local/bin/composer/src/Composer/Installer/LibraryInstaller.php:109\r\n[localhost] < [error]\u2002\u2002Composer\\Installer\\LibraryInstaller->update() at phar:///usr/local/bin/composer/src/Composer/Installer/InstallationManager.php:193\r\n[localhost] < [error]\u2002\u2002Composer\\Installer\\InstallationManager->update() at phar:///usr/local/bin/composer/src/Composer/Installer/InstallationManager.php:160\r\n[localhost] < [error]\u2002\u2002Composer\\Installer\\InstallationManager->execute() at phar:///usr/local/bin/composer/src/Composer/Installer.php:587\r\n[localhost] < [error]\u2002\u2002Composer\\Installer->doInstall() at phar:///usr/local/bin/composer/src/Composer/Installer.php:226\r\n[localhost] < [error]\u2002\u2002Composer\\Installer->run() at phar:///usr/local/bin/composer/src/Composer/Command/InstallCommand.php:119\r\n[localhost] < [error]\u2002\u2002Composer\\Command\\InstallCommand->execute() at phar:///usr/local/bin/composer/vendor/symfony/console/Command/Command.php:266\r\n[localhost] < [error]\u2002\u2002Symfony\\Component\\Console\\Command\\Command->run() at phar:///usr/local/bin/composer/vendor/symfony/console/Application.php:861\r\n[localhost] < [error]\u2002\u2002Symfony\\Component\\Console\\Application->doRunCommand() at phar:///usr/local/bin/composer/vendor/symfony/console/Application.php:208\r\n[localhost] < [error]\u2002\u2002Symfony\\Component\\Console\\Application->doRun() at phar:///usr/local/bin/composer/src/Composer/Console/Application.php:245\r\n[localhost] < [error]\u2002\u2002Composer\\Console\\Application->doRun() at phar:///usr/local/bin/composer/vendor/symfony/console/Application.php:127\r\n[localhost] < [error]\u2002\u2002Symfony\\Component\\Console\\Application->run() at phar:///usr/local/bin/composer/src/Composer/Console/Application.php:100\r\n[localhost] < [error]\u2002\u2002Composer\\Console\\Application->run() at phar:///usr/local/bin/composer/bin/composer:54\r\n[localhost] < [error]\u2002\u2002require() at /usr/local/bin/composer:24\r\n[localhost] < [error] install [--prefer-source] [--prefer-dist] [--dry-run] [--dev] [--no-dev] [--no-custom-installers] [--no-autoloader] [--no-scripts] [--no-progress] [--no-suggest] [-v|vv|vvv|--verbose] [-o|--optimize-autoloader] [-a|--classmap-authoritative] [--apcu-autoloader] [--ignore-platform-reqs] [--] [<packages>]...\r\n```", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/7015", "title": "Mention that also a antivirus software might corrupt file contents", "body": "The \"possible man-in-the-middle attack\" examples seems a bit over aggressive/dramatic.\r\n\r\nIn my experience most of the time bad/aggresive antivirus/firewall/content-filter applications/appliances are to blame.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/7005", "title": "Pass auth credentials to svn log while retrieving commit logs", "body": "Fixes https://github.com/composer/composer/issues/7004", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ncomer": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7003", "title": "could this apporoach will be more useful to optimize with apcu ", "body": "since  i run the command  \"dump-autoload -o --apcu\" to improve the boot speed of laravel,\r\ni got a big autoload_static file which have 4k lines code.\r\nThen i found   this code block within auloload_real.php:\r\nif ($useStaticLoader) {\r\n      require_once __DIR__ . '/autoload_static.php';  \r\n call_user_func(\\Composer\\Autoload\\ComposerStaticInitb6642ee553ca64f76f58aeb2231d582d::getInitializer($loader));\r\n}\r\n,when run a xhprof, load::composer/autoload_static.php rank No 1(about 11,702 \u00b5s in my case).\r\n\r\nWhat i think is: since apcu can be used for cache,and an obj type can directly  be stored in,\r\nthen i can modify above code like this:\r\n1.autoload_static .php@getInitializer\r\nadd \r\n$loader->f = ComposerStaticInitb6642ee553ca64f76f58aeb2231d582d::$files;\r\n2.auloload_real.php\r\n$loaderApc = apcu_fetch('cloader', $hit);\r\n            if (!$hit){\r\n                require_once __DIR__ . '/autoload_static.php';\r\n\r\n                call_user_func(\\Composer\\Autoload\\ComposerStaticInitb6642ee553ca64f76f58aeb2231d582d::getInitializer($loader));\r\n                apcu_store('cloader', clone $loader);\r\n            }else{\r\n                $loader = $loaderApc;\r\n            }\r\nanother place:\r\nif ($useStaticLoader) {\r\n            $includeFiles = $loader->f;\r\n        }\r\n\r\nI do not have a overall composer source code's reading, but this seems  work,\r\nWill this ok and be achieved further or am i wrong with something..  1st post,sorry for possiable mis", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7003/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "apfelbox": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7002", "title": "Option to always remove VCS on `create-project`?", "body": "Hi \ud83d\udc4b ,\r\n\r\nI am currently in the process of researching a possible fix for https://github.com/symfony/flex/issues/285.\r\n\r\nThe desired behaviour is for the symfony skeleton installation to just always remove the VCS directory and don't ask in the CLI for it.\r\n\r\nCurrently this is implemented that Symfony Flex just completely disables interactivity in IO, so that the call to `->askConfirmation()` [here](https://github.com/composer/composer/blob/994bac0c153348c09d42cd77225c465c1b81e8e9/src/Composer/Command/CreateProjectCommand.php#L201) just [returns the default value](https://github.com/symfony/console/blob/bf56f79b8604e4dd32c236048606c507e9dbbcd3/Helper/QuestionHelper.php#L55) (`true`).\r\n\r\nUnfortunately that also kills all subsequent interactive calls.\r\n\r\nAs I read the code:\r\nhttps://github.com/composer/composer/blob/master/src/Composer/Command/CreateProjectCommand.php#L176-L202\r\n\r\nthere currently is no way to just disable interactivity for the one call to `askConfirmation()`.\r\nIt's always either all scripts + the \"delete VCS dir\" one, or nothing.\r\n\r\nSo I would like to ask whether it would be possible to:\r\n\r\n* dispatch another event between `Installer` and `->askConfirmation()` so that Flex can hook specifically in to disable interactivity in this event and re-enable again in the event `POST_CREATE_PROJECT_CMD ` (something like `POST_ROOT_PACKAGE_DEPENDENCIES_INSTALL`).\r\n* provide a way to just always remove the VCS directory in a plugin (env var, some global setting or a callback somewhere).\r\n\r\nWhat do you think?", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7002/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "chrisEspira": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7001", "title": "The \"https://getcomposer.org/versions\" file could not be downloaded: failed to open stream: HTTP request failed!", "body": "HI,\r\nSomebody can help me solve this problem\r\ni cannot install composer\r\n when i try to install composer \r\nI get this error\r\nThe \"https://getcomposer.org/versions\" file could not be downloaded: failed to open stream: HTTP request failed!\r\n\r\ni need help please..........thx\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "victorynox": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7000", "title": "Wrong return value from Composer/IO/ConsoleIO::select() method", "body": "My `composer.json`:\r\n\r\n```json\r\n\"require\": {\r\n        \"rollun-com/rollun-installer \"^4.0\",\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: \r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\nComposer version: 1.6.2\r\nPHP version: 7.1.12-2+0~20171207160618.12+stretch~1.gbp5c91f3\r\nPHP binary path: /usr/bin/php7.1\r\n```\r\n\r\n```\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: \r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: WARNING\r\nYou are not running the latest stable version, run `composer self-update` to update (1.5.2 => 1.6.2)\r\n```\r\n\r\nWhen I run this method:\r\n\r\n[Composer\\IO\\ConsoleIO::select()](https://github.com/composer/composer/blob/master/src/Composer/IO/ConsoleIO.php#L283) \r\n```\r\n$data = $console->select(\r\n\"Select value\",\r\n[\r\n            \"Choice value 0\",\r\n            \"Choice value 1\",\r\n            \"Choice value 2\",\r\n],\r\n\"0,2\",\r\nfalse,\r\n'Value \"%s\" is invalid',\r\ntrue\r\n);\r\n```\r\n\r\nI get the following output in data:\r\nArray with **values** of the `\"$choices\"` array\r\n```\r\n[\r\n \"Choice value0\",\r\n \"Choice value2\"\r\n]\r\n```\r\n\r\nAnd I expected this to happen:\r\nArray with **keys** of the `\"$choices\"` array\r\n```\r\n[\r\n0,\r\n2\r\n]\r\n```\r\n\r\nWen I'm using composer version 1.5.2 and earlier, method [Composer\\IO\\ConsoleIO::select()](https://github.com/composer/composer/blob/master/src/Composer/IO/ConsoleIO.php#L283)\r\nreturn the array with **keys** of the `\"$choices\"` array ([as in the documentation ](https://getcomposer.org/apidoc/1.6.1/Composer/IO/ConsoleIO.html#method_select)), but in composer 1.6.2 i'm getting the array with **values** of the `\"$choices\"` array. \r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7000/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cweiske": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6998", "title": "\"remove\" output and exit status do not tell about failures/non-removages", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n    \"require\": {\r\n        \"laravel/framework\": \"^5.5\"\r\n    }\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nChecking composer.json: WARNING\r\nNo license specified, it is recommended to do so. For closed-source software you may use \"proprietary\" as license.\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: \r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\nComposer version: 1.6.2\r\nPHP version: 7.1.12-3+ubuntu16.04.1+deb.sury.org+1\r\nPHP binary path: /usr/bin/php7.1\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer remove swiftmailer/swiftmailer; echo $?\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nswiftmailer/swiftmailer is not required in your composer.json and has not been removed\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\nNothing to install or update\r\nGenerating autoload files\r\n```\r\n\r\nAnd I expected this to happen:\r\n\r\n1. A message telling me that swiftmailer was not removed (maybe with a reason: 'hard requirement by laravel/framework\")\r\n2. Exit code of non-0, because 0 means success.\r\n\r\nI want to *remove* a package, and composer did not do that - and failed to tell me that. The package I wanted to remove is still installed.\r\n\r\nI do know that \"composer remove\" currently only removes the entry from `composer.json` and then runs \"update\", but thats implementation detail. The user's intent when using \"remove\" is that a package shall be removed, and composer doesn't behave in a way the user would expect.\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6998/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "IndraGunawan": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6993", "title": "Could not find package when using composer repository that provide lazy providers", "body": "How to reproduce\r\n\r\n- use composer repositry that provide lazy providers like `packagist.com` or `pakethub.com` and add the repository config to `composer.json`\r\n- add `symfony/symfony` package to the composer repository provider. so when you access `packages.json` from the composer repository hosting you will get \r\n```json\r\n{\r\n\"packages\":{\"symfony/symfony\":{...}},\r\n\"search\":\"...\",\r\n\"providers-lazy-url\":\".../p/%package%.json\",\r\n\"mirrors\":[{...}]\r\n}\r\n```\r\n- run `composer require symfony/security-bundle -vvv` at project directory.\r\n\r\nHere the response\r\n```\r\n[InvalidArgumentException]\r\n  Could not find package symfony/security-bundle.\r\n```\r\n  ", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6993/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "verbruggenalex": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6992", "title": "\"tar\" type repository does not allow extraction of empty folder in tar.gz file", "body": "Because the tar.gz file contains an un-named folder \".\" the tar type extractor is not able to extract the contents of the folder. If the folder is named there is no problem.\r\n\r\n<details><summary>File: composer.json</summary>\r\n\r\n```json\r\n    \"require\": {\r\n        \"ec-europa/platform_dev\": \"~2.4.0\"\r\n    },\r\n    \"repositories\": [\r\n        {\r\n            \"type\": \"package\",\r\n            \"package\": {\r\n                \"name\": \"ec-europa/platform_dev\",\r\n                \"version\": \"2.4.63\",\r\n                \"type\": \"drupal-core\",\r\n                \"dist\": {\r\n                    \"url\": \"https://github.com/ec-europa/platform-dev/releases/download/2.4.63/platform-dev-2.4.63.tar.gz\",\r\n                    \"type\": \"tar\"\r\n                }\r\n            }\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n</details>\r\n\r\n<details><p><summary>Run: composer install</summary>\r\n\r\n```\r\n  [PharException]\r\n  Extraction from phar \"/home/verbral/platform-composer/build/28911af645fcdc4a61e64f6ef3e444ab.gz\" failed: Cannot extract \".\", internal error\r\n```\r\n</details></p>\r\n\r\nI know this is an edge case. But would it be possible to allow for un-named folders to be extracted? I'm not really in the mood to re-upload 500 packages to our repository.\r\n\r\nPossible solution provided on PHP documentation page:\r\nhttp://php.net/manual/en/phardata.extractto.php\r\n\r\n  ", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "NomanJaved": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6980", "title": "[RuntimeException] Could not scan for classes inside \"src/\" which does not appear to be a file nor a folder", "body": "I am have installed Xampp on Windows 10.\r\n\r\nI am facing the issue that the composer install not work properly in Laravel 5.5. How can I fix this issue. the error is mentioned in the title. If you guys require further detail I can provide it.\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6980/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Salamek": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6975", "title": "Fresh composer install/update and following composer update inconsistency", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n  \"name\": \"dravencms/dravencms\",\r\n  \"type\": \"library\",\r\n  \"description\": \"DravenCMS Content Management System\",\r\n  \"keywords\": [\r\n    \"dravencms\"\r\n  ],\r\n  \"license\": [\r\n    \"LGPL-3.0\"\r\n  ],\r\n  \"authors\": [\r\n    {\r\n      \"name\": \"Adam Schubert\"\r\n    }\r\n  ],\r\n  \"require-dev\": {\r\n    \"nette/tester\": \"@dev\"\r\n  },\r\n  \"repositories\": [\r\n    {\r\n      \"type\": \"vcs\",\r\n      \"url\": \"https://github.com/Salamek/gravatar\"\r\n    }\r\n  ],\r\n  \"require\": {\r\n    \"dravencms/packager\": \"~v1.0\",\r\n    \"dravencms/admin\": \"~v1.0.0\",\r\n    \"dravencms/issue\": \"~v1.0.1\",\r\n    \"dravencms/file\": \"~v1.1\",\r\n    \"o5/grido\": \"dev-master\",\r\n    \"janmarek/webloader\": \"dev-master\",\r\n    \"kdyby/doctrine\": \"v3.3.x-dev\"\r\n  },\r\n  \"scripts\": {\r\n    \"post-install-cmd\": [\r\n      \"php vendor/dravencms/packager/bin/packager packager:sync\"\r\n    ],\r\n    \"post-update-cmd\": [\r\n      \"php vendor/dravencms/packager/bin/packager packager:sync\"\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nChecking composer.json: WARNING\r\nLicense \"LGPL-3.0\" is a deprecated SPDX license identifier, use \"LGPL-3.0-only\" or \"LGPL-3.0-or-later\" instead\r\nrequire.o5/grido : unbound version constraints (dev-master) should be avoided\r\nrequire.janmarek/webloader : unbound version constraints (dev-master) should be avoided\r\nrequire.kdyby/doctrine : exact version constraints (v3.3.x-dev) should be avoided if the package follows semantic versioning\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: FAIL\r\nMissing pubkey for tags verification\r\nMissing pubkey for dev verification\r\nRun composer self-update --update-keys to set them up\r\nChecking composer version: OK\r\nComposer version: 1.6.0\r\nPHP version: 7.2.0\r\nPHP binary path: /usr/bin/php\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\nrm composer.lock\r\nrm -rf ./vendor\r\ncomposer update or composer install\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\n...Lot of installed stuff...\r\n- Installing dravencms/user (v1.0.2): Loading from cache  #<-- OLD VERSION\r\n...Lot of installed stuff...\r\n- Installing dravencms/admin (v1.0): Loading from cache #<-- OLD VERSION\r\n...Lot of installed stuff...\r\n```\r\n\r\nWhen I run this command (after first install or update):\r\n\r\n```\r\ncomposer update\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)         \r\nPackage operations: 0 installs, 2 updates, 0 removals\r\n  - Updating dravencms/user (v1.0.2 => v1.0.3): Loading from cache\r\n  - Updating dravencms/admin (v1.0 => v1.0.3): Loading from cache\r\nPackage symnedi/event-dispatcher is abandoned, you should avoid using it. Use contributte/event-dispatcher instead.\r\nPackage zenify/doctrine-migrations is abandoned, you should avoid using it. Use nettrine/migrations instead.\r\nWriting lock file\r\nGenerating autoload files\r\nocramius/package-versions:  Generating version class...\r\nocramius/package-versions: ...done generating version class\r\n> php vendor/dravencms/packager/bin/packager packager:sync\r\nPackages synced successfully\r\n```\r\n\r\nAnd I expected this to happen:\r\n\r\nWhen i run `composer install` or `composer update` in clean project (vendor and composer.lock deleted) i should get latest versions of all deps matching composer.json, second run of `composer update` should not do anything when no new version is released\r\n\r\nPS: I tried to delete ~/.cache/composer and i get same results as above but with downloads, so it is not cache related\r\nComposer version 1.6.0 2018-01-04 12:03:22\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6975/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/6959", "title": "Your requirements could not be resolved to an installable set of packages. But nothing is wrong", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n  \"name\": \"dravencms/dravencms\",\r\n  \"type\": \"library\",\r\n  \"description\": \"DravenCMS Content Management System\",\r\n  \"keywords\": [\r\n    \"dravencms\"\r\n  ],\r\n  \"license\": [\r\n    \"LGPL-3.0\"\r\n  ],\r\n  \"authors\": [\r\n    {\r\n      \"name\": \"Adam Schubert\"\r\n    }\r\n  ],\r\n  \"require-dev\": {\r\n    \"nette/tester\": \"@dev\"\r\n  },\r\n  \"require\": {\r\n    \"dravencms/packager\": \"^v1.0\",\r\n    \"dravencms/admin\": \"^v1.0\",\r\n    \"dravencms/location\": \"^v1.0\",\r\n    \"dravencms/user\": \"^v1.0\",\r\n    \"dravencms/file\": \"^v1.0\",\r\n    \"ipub/visual-paginator\": \"^v1.0\",\r\n    \"joseki/pdf-response\": \"^v3.1\",\r\n    \"o5/grido\": \"dev-master\",\r\n    \"janmarek/webloader\": \"dev-master\"\r\n  },\r\n  \"scripts\": {\r\n    \"post-install-cmd\": [\r\n      \"php vendor/dravencms/packager/bin/packager packager:sync\"\r\n    ],\r\n    \"post-update-cmd\": [\r\n      \"php vendor/dravencms/packager/bin/packager packager:sync\"\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nChecking composer.json: WARNING\r\nrequire.o5/grido : unbound version constraints (dev-master) should be avoided\r\nrequire.janmarek/webloader : unbound version constraints (dev-master) should be avoided\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com rate limit: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: FAIL\r\nMissing pubkey for tags verification\r\nMissing pubkey for dev verification\r\nRun composer self-update --update-keys to set them up\r\nChecking composer version: OK\r\nwww-data@ceskadatabaze:~/svetst\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer update\r\ncomposer install\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\nYour requirements could not be resolved to an installable set of packages.\r\n\r\n  Problem 1\r\n    - Installation request for dravencms/file ^v1.0 -> satisfiable by dravencms/file[v1.1].\r\n    - dravencms/file v1.1 requires dravencms/locale ^v1.0 -> satisfiable by dravencms/locale[v1.0, v1.0.1].\r\n    - dravencms/locale v1.0 requires dravencms/base ^v1.0 -> satisfiable by dravencms/base[v1.0.7].\r\n    - dravencms/locale v1.0.1 requires dravencms/base ^v1.0.4 -> satisfiable by dravencms/base[v1.0.7].\r\n    - Conclusion: don't install dravencms/base v1.0.7\r\n```\r\n\r\nAnd I expected this to happen:\r\nComposer version 1.5.6 2017-12-18 12:09:18\r\nInstall depedencies, this message is useless, i'm not able to find out what is wrong", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6959/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "schmunk42": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6972", "title": "composer does not fully check versions when changing repository URL", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n    \"name\": \"tobias/issue-composer-repo-url-downgrade\",\r\n    \"require\": {\r\n        \"dektrium/yii2-rbac\": \"^0.3.0\"\r\n    },\r\n    \"repositories\": {\r\n        \"rbac\": {\r\n            \"type\": \"vcs\",\r\n            \"url\": \"https://github.com/dmstr-forks/yii2-rbac.git\"\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n(You need https://github.com/fxpio/composer-asset-plugin or https://asset-packagist.org/ to reproduce - but the plugin or additional repo is not the cause for this issue)\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\n> composer diagnose\r\nChecking composer.json: WARNING\r\nNo license specified, it is recommended to do so. For closed-source software you may use \"proprietary\" as license.\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys:\r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: WARNING\r\nYou are not running the latest stable version, run `composer self-update` to update (1.5.2 => 1.5.6)\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer update -vv\r\n<remove repositories section>\r\ncomposer update -vv\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\n[...]\r\nAnalyzed 405 packages to resolve dependencies\r\nAnalyzed 3081 rules to resolve dependencies\r\nNothing to install or update\r\nWriting lock file\r\nGenerating autoload files\r\n```\r\n\r\nAnd I expected this to happen:\r\n\r\n```\r\n[...]\r\nDependency resolution completed in 0.006 seconds\r\nAnalyzed 404 packages to resolve dependencies\r\nAnalyzed 3078 rules to resolve dependencies\r\nPackage operations: 1 install, 0 updates, 0 removals\r\nInstalls: dektrium/yii2-rbac:0.3.0\r\n  - Installing dektrium/yii2-rbac (0.3.0): Loading from cache\r\n Extracting archive    REASON: Required by the root package: Install command rule (install dektrium/yii2-rbac 0.3.0)\r\n\r\nWriting lock file\r\nGenerating autoload files\r\n```\r\n\r\nWe're using a fork of `dektrium/yii2-rbac` which has a tag `0.3.999`, if we remove the custom fork-repo, composer should check only the versions in the original URL and downgrade to `0.3.0` in this case, but it sees the installed version - which should not be available at all now - as valid and stays on `0.3.999`.\r\n\r\nRelated to https://github.com/composer/composer/issues/3876#issue-64525212\r\n\r\nIt works, when I remove `vendor/dektrium/yii2-rbac` - there should be some additional checks to https://github.com/composer/composer/pull/3985 if a URL has been changed. Actually composer should treat the package as not available and force a full check of it's versions.\r\n \r\n[addon]\r\n\r\nClearing the cache has no effect.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "alcanardanangelo": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6970", "title": "zlib_decode() data error", "body": "I can use Composer before. But now I cannot do composer update. I can't even install composer. The error shows. I didn't change any configuration on my computer.\r\n\r\n\r\n````The \"https://getcomposer.org/versions\" file could not be downloaded: failed to open stream: HTTP request failed!\r\nThe \"https://getcomposer.org/download/1.5.6/composer.phar.sig\" file could not be downloaded: failed to open stream: HTTP request failed!\r\nFailed to decode zlib stream\r\n\r\nPlease help. Thanks!", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6970/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "EduenSarceno": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6968", "title": "exec command doesn't works correctly on windows", "body": "I don't know if I'm wrong but I think the command only adds COMPOSER_BIN_PATH to the path and after runs the program\r\n\r\ncomposer.json\r\n```\r\n{\r\n\t\"name\": \"vendor/foo\",\r\n\t\"description\": \"A foo package\",\r\n\t\"scripts\": {\r\n\t\t\"test\" : \"phpunit --version\"\r\n\t},\r\n\t\"require-dev\": {\r\n\t\t\"phpunit/phpunit\": \"^6.5\"\r\n\t}\r\n}\r\n```\r\n\r\nIf I try to execute phpunit, I get a error\r\n```\r\n> composer exec phpunit\r\nScript phpunit handling the __exec_command event returned with error code 2\r\n```\r\nBut if I run the script its works\r\n```\r\n> composer run-script test\r\n> phpunit --version\r\nPHPUnit 6.5.5 by Sebastian Bergmann and contributors.\r\n```\r\n\r\nI don't like do things like  `vendor\\bin\\phpunit --help` instead of  `composer exec -- phpunit --help`.\r\n\r\n**Note**  \r\nThe arguments are not passed correctly either\r\n\r\n```\r\n>composer exec -- phpunit --help\r\nUsage:\r\n  exec [options] [--] [<binary>] [<args>]...\r\n\r\nArguments:\r\n  binary                         The binary to run, e.g. phpunit\r\n  args                           Arguments to pass to the binary. Use -- to separate from composer arguments\r\n\r\nOptions:\r\n  -l, --list\r\n  -h, --help                     Display this help message\r\n  -q, --quiet                    Do not output any message\r\n  -V, --version                  Display this application version\r\n      --ansi                     Force ANSI output\r\n      --no-ansi                  Disable ANSI output\r\n  -n, --no-interaction           Do not ask any interactive question\r\n      --profile                  Display timing and memory usage information\r\n      --no-plugins               Whether to disable plugins.\r\n  -d, --working-dir=WORKING-DIR  If specified, use the given directory as working directory.\r\n  -v|vv|vvv, --verbose           Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug\r\n\r\nHelp:\r\n  Executes a vendored binary/script.\r\n```\r\nEverything that is after -- should be treated as an argument to the program not as a part of the composer command\r\n\r\nEnvironment:\r\n```\r\n>composer --version\r\nComposer version 1.5.6 2017-12-18 12:09:18\r\n```", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6968/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wouterj": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6967", "title": "[Docs] Explicitly mention not to use `apt-get install composer`", "body": "Since `symfony/thanks` is now required by Laravel and Symfony, there are quite some people looking for help because they get \"symfony/thanks depends on composer-plugin-api ^1.1, you are using 1.0\".\r\n\r\nIn all these cases (i.e. https://github.com/symfony/symfony-docs/issues/8938), it is because they are using Composer 1.0.0 beta2 installed through `apt-get`.\r\n\r\nCan the Composer community do something to avoid people using `apt-get` and installing this very old version of Composer? Can we show some alert, just like it used to do in beta phrase? Can we maybe explicitly tell in the docs *not* to use `apt-get`? Or, maybe simpler, can we make `apt-get` install a more recent version?\r\n\r\n*EDIT: Just released I probably created this issue in a very wrong repository. Sorry! If you want, I can reopen it in another repository.*", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6967/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sebastianblum": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6965", "title": "[RFC] Optional requirements ", "body": "Hello!\r\n\r\nI want to discuss if we can add support for optional dependencies to composer.\r\n\r\nProblem explained by the LiipImagineBundle:\r\nThe LiipImagineBundle:2.0 had an dependency to PHP-CS-FIXER\r\n```json\r\n{\r\n  \"require-dev\": {\r\n    \"friendsofphp/php-cs-fixer\": \"^1.0|^2.0\"\r\n  }\r\n}\r\n```\r\nand PHP-CS-Fixer doesn't support PHP 7.3 see https://github.com/FriendsOfPHP/PHP-CS-Fixer/blob/2.9/composer.json\r\n```json\r\n{\r\n  \"require\": {\r\n        \"php\": \"^5.6 || >=7.0 <7.3\"\r\n  }\r\n}\r\n```\r\nSee discussion https://github.com/FriendsOfPHP/PHP-CS-Fixer/issues/3323 - PHP-CS-FIXER will not support PHP 7.3 at the moment. So the nightly php travis builds fail because composer could not resolve the dependencies. LiipImagineBundle now removed PHP-CS-FIXER dependency\r\n at the moment.\r\n\r\nHow can we solve the problem in composer?\r\n\r\nOne solution will be to add support for optional requirements which can be installed or skipped.\r\nWhat do you think about this?\r\n\r\nRelated Issues (I found)\r\n- #6321 use case for conflict\r\n\r\nPossible syntax\r\n```json\r\n{\r\n  \"optional\": {\r\n    \"friendsofphp/php-cs-fixer\": \"^1.0|^2.0\"\r\n  }, \r\n  \"optional-dev\": {\r\n    \"friendsofphp/php-cs-fixer\": \"^1.0|^2.0\"\r\n  }\r\n}\r\n```\r\nor question mark before\r\n```json\r\n{\r\n  \"require-dev\": {\r\n    \"?friendsofphp/php-cs-fixer\": \"^1.0|^2.0\"\r\n  }\r\n}\r\n```\r\nor dash for skipped\r\n```json\r\n{\r\n  \"require-dev\": {\r\n    \"friendsofphp/php-cs-fixer\": \"^1.0|^2.0|-\"\r\n  }\r\n}\r\n```\r\n\r\n\r\nThank you very much\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6965/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Seldaek": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/015927d0b058eb5d31e098952f7f1ab9613cb959", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/1a6e3ee8c75579d179dd440b1a61d3c900372457", "message": "Show script description for custom commands in run-script --list, fixes #7009"}, {"url": "https://api.github.com/repos/composer/composer/commits/994bac0c153348c09d42cd77225c465c1b81e8e9", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/59fcb91912932b5f9acd2f6d9c774b72907ef31d", "message": "Merge pull request #6985 from nicolas-grekas/get-url-contents\n\nAdd RemoteFilesystem::getRemoteContents() extension point"}, {"url": "https://api.github.com/repos/composer/composer/commits/82b80a54513085e4c791e0671775341a459d197f", "message": "Merge pull request #6979 from nicolas-grekas/fix-ctrl-c\n\nFix CTRL+C handling during create-project"}, {"url": "https://api.github.com/repos/composer/composer/commits/4331b116248b70e2adac3eb6df106ef71132206a", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/188b3a35c8d2a2a32a23f18b6b628696cb0eeff6", "message": "Tweak license deprecation text to handle + more gracefully, fixes #6981"}, {"url": "https://api.github.com/repos/composer/composer/commits/9a443e6d0bf336e45951078b399c4d8cfcac4bcd", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/20699905abf2613d4d91c03e80ca2a7f9ab8f0f1", "message": "Update changelog"}, {"url": "https://api.github.com/repos/composer/composer/commits/74838790b55ef82cb557372a73321694103e402d", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/e6114b2ca7b2eb75920fd03957070045a1ac1bc1", "message": "Fix support for replacing dist refs in gitlab URLs and add support for gitlab/github enterprise too"}, {"url": "https://api.github.com/repos/composer/composer/commits/be040f8e3111b38c1e49ae5cd6b929dbf5c39045", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/ac9c7a50e927f402c4c95fe05eb4043263b6d0cb", "message": "Merge pull request #6976 from nicolas-grekas/fix-autoloader\n\nFix generated static map..."}, {"url": "https://api.github.com/repos/composer/composer/commits/4a7389f5b7070925a7fbaaaa99d2b961648ba5de", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/95d5e8dd947f4ec1402e96ddfcc8f6a7bb7bc0a6", "message": "Update changelog"}, {"url": "https://api.github.com/repos/composer/composer/commits/8c7b13e9beb7f82de9645f9d71f8c5204a0495fd", "message": "Update content hash"}, {"url": "https://api.github.com/repos/composer/composer/commits/8ff3a8bcc048b6d6d091ddbf0975b04f94fef016", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/5e223dae61b7b04ad4cf8361cb60ab76d07a63f8", "message": "Update jsonlint dep"}, {"url": "https://api.github.com/repos/composer/composer/commits/ebc3c7d0da6393b92611c2f2b3c7847faf661bb8", "message": "Merge pull request #6973 from nicolas-grekas/fix-autoloader\n\nFix BC of generated static map"}, {"url": "https://api.github.com/repos/composer/composer/commits/749b4c46b74f9702fc4f6abde6480fb6f0373ed6", "message": "Bump branch alias"}, {"url": "https://api.github.com/repos/composer/composer/commits/c962be2f4123434b4843b1d945724a633237ce00", "message": "Update changelog for 1.6.0"}, {"url": "https://api.github.com/repos/composer/composer/commits/882b82d542b45435bae1d95b33e225427950c59c", "message": "Add COMPOSER_MEMORY_LIMIT env var to force a given memory_limit, fixes #6931"}, {"url": "https://api.github.com/repos/composer/composer/commits/5cd0fef7ff75dbe32c06a8d36b4f837852a6d004", "message": "Upgrade to SPDX License 3.0 and handle deprecations more gracefully, fixes #6951"}, {"url": "https://api.github.com/repos/composer/composer/commits/ab8437ce06256109d10731f3baff3d513e93ad1f", "message": "Merge remote-tracking branch 'swumao/feature-6892'"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/511765", "body": "dumb http != http://. http still works, and afaik it's still better/faster than git protocol which is really old.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/511765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/511768", "body": "As for old version of git.. how old is that? I think very very old, if github thought it didn't matter anymore.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/511768/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/511784", "body": "Because some people, including me and my shitty cygwin git, have problems with https. Some had problems with git protocol too I believe. That's why symfony-standard ended up with http://. Interop hell.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/511784/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/511804", "body": "Ok, this is fixing it actually http://stackoverflow.com/questions/3777075/https-github-access/4454754#4454754 - just for the record. But let's keep it as is until someone complains..\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/511804/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/512425", "body": "Yes, it doesn't suffer from the cygwin issues, but I use cygwin all the time for many other reasons so it's easier to grab git from there. Anyway it's solved now.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/512425/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/515655", "body": "Yeah this is temporary just as a way to make sure that @naderman fixes the problem I am having.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/515655/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/589730", "body": "Yeah, copy paste ftw. Why mbstring? Well I just wanted to be sure that we don't blow up on non-ascii package names. Not that I think this should happen, but better safe than sorry, no?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/589730/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/590502", "body": "This isn't entirely true, the following outputs \u00f6 and then garbage (if saved/served as UTF8).\n\n```\necho utf8_encode(strtolower(utf8_decode('\u00d6')));\necho strtolower('\u00d6');\n```\n\nAll I want to make sure of is that the package names are case insensitive. I lowercase them when they're output in packagist, and I thought lowercasing the user input in composer would complete the loop. Now if we say we only support [a-z0-9_-] in package names, fine by me, but we need to make this explicit and not allow stuff to be mangled if it contains accented chars.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/590502/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/590670", "body": "Sorry to insist, but I'm not seeing the same here:\n\n```\necho ord(utf8_encode(strtolower(utf8_decode('\u00d6'))));\necho ord(strtolower('\u00d6'));\necho ord(utf8_encode(mb_strtolower(utf8_decode('\u00d6'), 'ISO-8859-1')));\necho ord(mb_strtolower('\u00d6', 'UTF-8'));\n```\n\nPrints 195 227 195 195\nPrinting the second byte of each gets you: 182 150 182 182\n\nIt seems to me that strtolower() with UTF8 input is touching things that go beyond the scope of ASCII chars, and therefore should not be relied upon since we do have UTF8.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/590670/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/590678", "body": "According to PHP docs, strtolower follows the locale, if I do `setlocale(LC_ALL, 'C')` before the other calls, then it works as you said, since with the C locale it doesn't try to be smart.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/590678/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/590690", "body": "Yeah but then we need to do that in Composer, or rely on mbstring, which works just fine with UTF8. I'm not sure why so much hate :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/590690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/590709", "body": "In my experience it has worked just fine for years, but anyway, I hope [this settles the case](https://github.com/composer/composer/commit/07e181c6ebde32ec49fd829e6aba4154f1a6f51d)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/590709/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/619289", "body": "Copy paste mistake I guess, I will fix it.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/619289/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": []}, "nicolas-grekas": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/5601f07bfadc2359c53f9fa92f96d5249120188d", "message": "Add RemoteFilesystem::getRemoteContents() extension point"}, {"url": "https://api.github.com/repos/composer/composer/commits/251a347efbae4dbedb5c45f1571265e0a8705230", "message": "Fix CTRL+C handling during create-project"}, {"url": "https://api.github.com/repos/composer/composer/commits/0c912d6eee60505333479c71e5708ce263ae65ae", "message": "Fix generated static map..."}, {"url": "https://api.github.com/repos/composer/composer/commits/ce70e0e9dd63e4f3fcdd0eb2d960873d160a3a2f", "message": "Fix BC of generated static map"}], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/3951", "title": "Concurrent git clone and downloads with React", "body": "This adds an optional event loop argument and promises as return values to the GitDownloader.\nThe Installer takes advantage of it to trigger several `git clone` and manage them concurrently.\nNo change is made to the behavior of the code when no event loop is used, so that tests still pass.\nThis could be the first step towards parallel downloads in composer: the other downloaders would need to be updated following the same principle, the GitDownloader also needs to be finished (only public repos can be managed by the loop for now).\nThe console output also would need to be handled differently.\nIf someone else likes the approach, help is welcomed for porting the other downloaders to use and return promises! (a PR on this PR anyone?).\nPHP 5.3 is not supported by React, but there is no blocker to change that.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "remicollet": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/b0fa2bd5e20b5300cdfe977678eea315e96df9a3", "message": "Fix dependency on seld/jsonlint 1.4\n\nAs deprecated flag is used."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zymsys": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/7011", "title": "Show reason for php version package mismatch due to config.platform", "body": "A couple of times I've run into a frustrating situation where a config.platform generated by the Symfony installer has specified a php 5 version and I've changed my require to php 7 without realizing the config.platform issue. That leaves me hunting for a version of php that isn't installed anywhere on my system. Using verbose or even very very verbose doesn't seem to help. \r\n\r\nI used xdebug to track it down and saw that the package knew what the problem really was in its description but it wasn't revealing this to the user. This patch exposes that information. The nested parens aren't pretty, but I think developers will be able to parse it.\r\n\r\nThe patch starts by determining the version in the same way it used to. Then it double checks that we have a package, and that it is a CompletePackage so that it has a description. If so it appends the description to the version information.\r\n\r\nI double checked it with phpcs and it complained about line lengths, but it also did this for much of the rest of the file.\r\n\r\nThe output looks like this:\r\n\r\n```\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\nYour requirements could not be resolved to an installable set of packages.\r\n\r\n  Problem 1\r\n    - This package requires php >=7.0.0 but your PHP version (5.6.0; Package overridden via config.platform (actual: 7.0.22)) does not satisfy that requirement.\r\n```", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tanarurkerem": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/7006", "title": "Update how-do-i-install-a-package-to-a-custom-path-for-my-framework.md", "body": "Title changed", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "carusogabriel": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6995", "title": "Use $strict param in functions that have it", "body": "Some functions, e.g. `in_array`, have a third param to enable strict comparison. With PHP-CS-Fixer `strict_param` rule, we can fix all of them :shipit:", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/6982", "title": "Fixes from PHPStan level 0", "body": "Some, not all, fixes found by running [`PHPStan`](https://github.com/phpstan/phpstan) at level 0:\r\n\r\nFile | Problem\r\n---- | ----\r\nsrc/Composer/DependencyResolver/Rule.php:56 | Access to an undefined property Composer\\DependencyResolver\\Rule::$job.\r\nsrc/Composer/Factory.php:549 | Class Composer\\Installer\\MetapackageInstaller does not have a constructor and must be instantiated without any parameters.\r\nsrc/Composer/Command/DiagnoseCommand.php:38 | Property Composer\\Command\\DiagnoseCommand::$rfs has unknown class Composer\\Command\\RemoteFileSystem as its type.\r\nsrc/Composer/Command/InitCommand.php:282 | Anonymous function has an unused use $self.\r\nsrc/Composer/Repository/RepositoryInterface.php:73 | Return typehint of method Composer\\Repository\\RepositoryInterface::search() has invalid type array.\r\nsrc/Composer/Package/Archiver/BaseExcludeFilter.php:78 | Parameter $lineParser of method Composer\\Package\\Archiver\\BaseExcludeFilter::parseLines() has invalid typehint type Composer\\Package\\Archiver\\callback.\r\nsrc/Composer/Installer/PluginInstaller.php: 37 | Constructor of class Composer\\Installer\\PluginInstaller has an unused parameter $type.\r\nsrc/Composer/Json/JsonManipulator.php:232 | Anonymous function has an unused use $name.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/6896", "title": "Add PHPUnit 6 support", "body": "I've added `PHPUnit 6` support to `Composer`. Changes:\r\n- Define mocks with fluent interface;\r\n- `setExpectedException` isn't available in version `6`, so I substitute to `@expectedException` and `@expectedExceptionMessage` notations. But, there are some tests that these expectations are variables, so, I created a method layer in `Composer\\TestCase` and extend those TestCases that need this method.\r\n\r\nOne question: why not extend all TestCases from `Composer\\TestCase`? I guess is easier for maintenance, isn't?", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wsandin": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6956", "title": "Fix for issue 6602 - warning when running composer as another user", "body": "Raising a warning if the current user doesn't match the initial ownership of the $home directory. \r\nNot sure how this works on let's say Windows, might have to add some extra checks for that.\r\n\r\nWould love some feedback on how I can improve this PR in order to merge into master.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "localheinz": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6942", "title": "Fix: Remove unused parameter and field", "body": "This PR\r\n\r\n* [x] removes an unused parameter and field from `Locker`\r\n\r\n\ud83d\udc81\u200d\u2642\ufe0f The instance of `RepositoryManager` passed in into its constructor is never used.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mbaynton": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6864", "title": "Proposed event on SolverProblemsException with power to trigger re-run.", "body": "So this is definitely not ready to actually merge yet, but @naderman suggested discussing PRs early, so here goes. Oh, in case there would otherwise be confusion, this is unrelated to my work on `replace`.\r\n\r\nThe problem this helps solve is enabling Drupal installations/updates for nontechie users without exceeding the resource limitations of a webserver environment; it's a huge pain point for Drupal right now that it isn't possible to do Composer-enabled installs/updates in a browser. The way it helps solve it is by allowing a plugin to initially restrict the `Pool` to a repository containing only one version of each required package, all of which are pre-selected to be compatible with each other; this should make the sat problem and number of modeled packages/decisions trivial/very fast in execution time/low in memory. For sites that only need things available from this special repository, a complete Composer run ought to work fine within the confines of a webserver environment. When the site does also have requirements from the wider world, the first solver run will fail, but it will fail fast. This PR would allow a plugin to then introduce packagist etc to the Pool and rerun the Solver. (I believe @thom8 has talked with some Composer maintainers about the possibility of running the solver on a remote \"solver as a service\" host; I've got a vague idea of also swapping out the standard solver for the remote one long-term when a full-scale dependency resolution is required.)\r\n\r\nSomething like this have a chance of going in?", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "am05mhz": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6751", "title": "adds 2 steps install script for windows users", "body": "just add a little convenience for windows users ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hboomsma": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6714", "title": "add gitlab-dist-format option", "body": "Add `gitlab-dist-format` configuration option for the `GitLabDriver`. It defaults to `zip` as is the current default. You can set it to `zip`, `tar.gz`, `tar` and `tar.bz2`.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kthbit": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6707", "title": "Teach fossil to use HTTP Basic and Fossil built-in authentication", "body": "Composer was unable to clone/pull from a Fossil repo that was protected by either HTTP Basic or Fossil  authentication. This patch attempts to fix that. Both (or either) authentications are stored in auth.json. HTTP Basic auth is specified as before, per domain. Fossil credentials are specified per remote repository, in case pulling from multiple remote repositories with different credentials for each.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "RobberPhex": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6683", "title": "fix gitlab repo config in composer.lock", "body": "1. When `attemptCloneFallback` use `generatePublicUrl` to get public_url, we cannot forget some gitlab instance doesn't support https. **So we get `scheme` from config.**\r\n2. When generate `composer.lock` file, we should use repo url *what user wrote* at `composer.json` , not we got from gitlab api.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Toflar": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6284", "title": "Improve memory usage a little by not creating new Link objects", "body": "I was able to shave off only a litte memory usage (about 2% on average) by this change.\r\nAt first I did not consider it to be worth discussing about because the improvements are not significant enough (well, a penny saved is a penny earned but still). However, I still decided to make the changes public because at the end of the day this is what open source is all about. Maybe someone can improve the impact even more based on my idea \ud83d\ude04 \r\n\r\nSo the idea behind it is that most `Rule` instances get a `$reasonData` assigned which mostly is an instance of `Link` or `CompletePackage`. While debugging a little, I noticed that even though a big amount of `Link` instances are actually of equal content, they are not the same (they do not share the same object hash). They are different objects because every `Package` creates its `Link` objects (`requires`,  `conflicts` etc.) when it is created. So the `Link` objects are not shared across memory.\r\nHence, I thought by making sure to not create them but instead reference to an already created one if it is the same should decrease memory usage. This seems to be true but I was expecting an even bigger impact. Now somebody can tell me maybe why the impact is not bigger or make it bigger based on my idea \ud83d\ude0b ", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "webflo": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6139", "title": "Test case for #6131", "body": "I think this is valid test case for #6131. Not 100% sure.\r\n\r\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "alcohol": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/5507", "title": "add a fixture for github issue #5505", "body": "not sure how to solve yet, or if it requires solving at all\n", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "stratdes": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/5360", "title": "ISSUE 3568 Show downloading package speed", "body": "- Added new class Download to represent the download progress\n- Added the util class DownloadUnitsFormatter to format Download class speed and ETA values\n- Some refactor on RemoteFileSystem\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hirak": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/5293", "title": "Parallel downloader", "body": "## Parallel Prefetcher\n\nporting from https://github.com/hirak/prestissimo\n- Fetching packages in parallel at `Composer\\Installer::doInstall()`\n- This is NOT replacement of `Composer\\Util\\RemoteFilesystem`.\n  - `repository.json` download in serial\n- If `!extension_loaded('curl')`, then fallback to RemoteFilesystem\n- If it fails to download, then fallback to RemoteFilesystem. (do not retry / do not show any prompt)\n### See also\n\nhttps://github.com/composer/composer/pull/2696\nhttps://github.com/composer/composer/issues/3930#issuecomment-193750145\n### Question\n\n`github-token`, `gitlab-token` options are still alive?\nhttps://github.com/composer/composer/blob/36665d791d8ec6520e31880dfe462bd2bf799132/src/Composer/Util/RemoteFilesystem.php#L235\nhttps://github.com/composer/composer/blob/36665d791d8ec6520e31880dfe462bd2bf799132/src/Composer/Util/RemoteFilesystem.php#L240\n\nI can't find any documentation about that options. In this P-R, I didn't implement it yet.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "curry684": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/4998", "title": "Removed inefficiency in the autoloader generation", "body": "This line was originally added for PHP 5.2 compatibility but that was dropped long ago, so no longer need to incur the handful of extra function calls on every autoloader init.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "aripringle": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/4210", "title": "add support for config inheritance", "body": "Refs #183. This is a refactoring of #1013, with attempts to address the comments in that thread.\n\nAll credit goes to @1stvamp for the original code.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "naderman": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/4163", "title": "[WIP] RepositorySet / Pool Split & Load only explicitly referenced package data", "body": "This is a fixed version of https://github.com/composer/composer/pull/3994\n\nTodo:\n- [ ] RepositorySetTest\n- [ ] don't use object state to construct pool in RepositorySet\n- [x] move request name collection logic into request - solver should take repo set\n- [ ] evaluate if RepositorySet and CompositeRepository should be merged\n- [ ] refactor policy to work with repositoryset in addition to pool\n- [ ] remove uses of small pools from installer\n- [ ] this should be empty: `grep -ri \"pool\" src/ | grep -v \"src/Composer/DependencyResolver\"`\n", "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/2898", "title": "[WIP] Extension installer", "body": "Supports PHP & HHVM.\n\nTodo:\n- [ ] Need to come up with a solution for ext-\\* packages actually being installable now, so extensions can be compiled automatically to satisfy dependencies on extensions.\n- [ ] Documentation\n- [ ] Use a different downloader to download binary builds from github releases for windows (or pecl for PHP)\n- [ ] Output information on configuring the server to include extension.so\n\nReplaces the earlier PR #498\n", "author_association": "OWNER"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/449810", "body": "Indeed.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/449810/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/588527", "body": "Why would you use mbstring here? Just strtolower should be fine. And indeed only one argument.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/588527/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/589953", "body": "honestly mb_strtolower is more likely to blow up than strtolower. strtolower touches only ASCII and leaves the rest alone. strtolower is an operation that doesn't even make sense on a variety of unicode characters. In addition this makes the behaviour of the solver dependent on whether mbstring is installed. So please let's avoid the use of any mbstring functions.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/589953/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/590645", "body": "For a start we should handle UTF-8 only. Anything (in patricular our json files) in any other encoding or character set should be outright rejected. Apart from that your example actually works fine. The result of both lines is precisely the same. However it's entirely irrelevant because utf8_decode turns it into ISO-8859-1 which we would have rejected anyway. UTF-8 on the other hand stores only ASCII characters as single bytes, and strtolower only operates on those characters.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/590645/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/590654", "body": "Only case where I could see your example mangle anything, is if you happen to let mbstring overload your string functions. That feature is an absolute catastrophe and all the more reason to stay as far away from mbstring as possible.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/590654/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/590684", "body": "Indeed, I should have pointed that out. But setting the locale to C is a good idea in general to avoid strangeness ;-)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/590684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/590693", "body": "Many many hours of trying to locate bugs which turned out to be caused by mbstring :P And yes I'd suggest we use a C locale in composer and avoid mbstring.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/590693/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/590785", "body": "Thank you ;-)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/590785/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/125833", "body": "I tend to agree with that\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/125833/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "fcastilloes": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/4036", "title": "Add support to interactive scripts defined in composer.json", "body": "This change should allow for interactive scripts defined in composer.json as requested in issue #3299 without breaking non-interactive scripts.\n\nAs far as I know, the Process component accepts both a stream or a string as input argument. I see no reason to pass a string, but the stdin is useful. Any reasons not to do it or something I didn't consider?\n\nI've run the test suite and introduces no errors.\n\nThanks.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pierrejoye": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/3897", "title": "draft support for Pickle in Composer", "body": "Draft support for Pickle (https://github.com/FriendsOfPHP/pickle) in Composer.\n\nSpent more time to dig composer code than actually implement that but at least it works to install exts from within a project.\n\nExample project and extension composer.json:\nhttps://gist.github.com/pierrejoye/1bbc2bdcec5887e60490\n\nIf you like to test with more extensions:\ngit  clone myext\ncd myext\npickle convert\n\nAdd the dep to your project. If you do not want to fork an ext, you can create a dep vs a zip file and use the artifact repository, it should work.\n\nStill many things to solve but at least there is something to play with now\n\nUpdate:\n\nAccording to our discussions, it is now a two steps process to install extensions, to make sure users understand that installing extensions may affect many projects:\n\nFirst, the usual command:\ncomposer install\n\ncomposer will tell you to run\ncomposer install --install-extensions\n\nif the project has extensions dependencies\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "frederikbosch": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/3608", "title": "Remove authentication credentials from git config file", "body": "When using private repositories, composer leaves authentication credentials in .git/config. This is undesired behaviour because credentials are potentially leaked. This PR removes credentials after fetching. It contains tests for download and update.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "padraic": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/2814", "title": "[WIP] Developer Package Signing", "body": "This PR is a work in progress. Expect changes and check the TODO list. Review/testing is welcome.\n\nThis pull request is intended to add support for developer-level package signing to Composer using openssl. It includes a \"create-keys\" command to generate an RSA private and public keys (the private key should be encrypted using a passphrase), an \"add-dev-key\" command which imports a private key and extracts the public key for distribution in a package within keys.json, and a \"sign\" command which assembles a manifest of files, their checksums, and lengths, and signs the manifest using a private key within manifest.json. This PR does not address any form of package or metadata signing by Packagist which is also required for repository-level security. This PR does not depend on SSL/TLS support.\n\nTODO:\n1. ADD support for Composer to cache keys.json data since it should only be populated on first encounter so that attacks to alter keys.json have a chance to be detected.\n2. ADD support for Composer to verify package signatures as part of its install/update routines.\n3. ADD verification status to install/update output.\n4. ADD composer command options to reject unverified packages (I'll make it optional but it's strongly suggested that this become enabled by default in time).\n\nYou can currently test sign packages using the following commands (the first three are only required to setup keys):\n\n```\nphp composer.phar create-keys --prefix=myUniquePrefix\n\nphp composer.phar add-dev-key ./path/to/myUniquePrefix-private.pem\n\nphp composer.phar sign-dev-keys ./path/to/myUniquePrefix-private.pem\n```\n\n```\nphp composer.phar sign ./path/to/myUniquePrefix-private.pem\n```\n\nThis should result in two new files: keys.json (used to distribute authorised public keys) and manifest.json (a signed listing of all package files, their SHA256 checksums and lengths).\n\nThe theory is to sign packages and commit keys/manifest changes as the FINAL step before tagging a release. If you make any other changes, or altered the tag after signing, then the signatures could never be verified by users.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "peteraba": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/2696", "title": "Curl transfer", "body": "Added curl fallback for data transfer. Moved hard coded stream context calls into separate transfer class. Created interface for transfer classes. Added tests.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ghost": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/composer/composer/issues/comments/3517632", "body": "I am having this issue while trying to install the Composer (commit 098ba8e5) dependencies. I think it can provide more background to understand the issue (seems related with the last @Seldaek [comment](https://github.com/composer/composer/issues/162#issuecomment-3201363))\n\n```\nvagrant@lucid64:/tmp/composer$ composer.phar --version\nComposer version 098ba8e\nvagrant@lucid64:/tmp/composer$ composer.phar install\nInstalling dependencies.\nSegmentation fault\nvagrant@lucid64:/tmp/composer$ composer.phar install\nInstalling dependencies.\nPHP Warning:  assert(): Assertion failed in phar:///usr/local/bin/composer.phar/src/Composer/DependencyResolver/Solver.php on line 2\nSegmentation fault\nvagrant@lucid64:/tmp/composer$ ls\nbin  composer.json  doc  LICENSE  phpunit.xml.dist  PORTING_INFO  README.md  src  tests  un.php  vendor\nvagrant@lucid64:/tmp/composer$ rm -rf vendor/\nvagrant@lucid64:/tmp/composer$ composer.phar install\nInstalling dependencies.\nPHP Warning:  assert(): Assertion failed in phar:///usr/local/bin/composer.phar/src/Composer/DependencyResolver/Solver.php on line 2\nSegmentation fault\n```\n\nNote the `require` key of `composer.json`:\n\n```\n\"require\": {\n    \"php\": \">=5.3.0\",\n    \"symfony/console\": \">2.0,<2.2-dev\",\n    \"symfony/finder\": \">2.0,<2.2-dev\",\n    \"symfony/process\": \">2.0,<2.2-dev\"\n},\n```\n\nThen I saw in Packagist that the Symfony components are available since the 2.0.4 release, and just changed one of the dependencies to be greater than 2.0.4:\n\n```\n\"require\": {\n    \"php\": \">=5.3.0\",\n    \"symfony/console\": \">2.0.4,<2.2-dev\",\n    \"symfony/finder\": \">2.0,<2.2-dev\",\n    \"symfony/process\": \">2.0,<2.2-dev\"\n},\n```\n\nIt partialy worked (it did not created the autoload files)!\n\n```\nvagrant@lucid64:/tmp/composer$ rm -rf composer.lock vendor/\nvagrant@lucid64:/tmp/composer$ composer.phar install\nInstalling dependencies.\nDownloading http://github.com/symfony/Process/zipball/96512471ac1481eef59051a26239e825105ddd1d to /tmp/composer/vendor/symfony/process/Symfony/Component/Process/aa301e02ac3e7461c1afa753ec3c1e60\nUnpacking archive\nCleaning up\nDownloading http://github.com/symfony/Finder/zipball/dd56fc9f1f0baa006d7491d5c17eb3e2dd8a066c to /tmp/composer/vendor/symfony/finder/Symfony/Component/Finder/e0a2d80a077d2d0f471b10f29be1f9b2\nUnpacking archive\nCleaning up\nDownloading http://github.com/symfony/Console/zipball/63af6eb3f342ac79f0ebbc3bfc59721e247cbb4c to /tmp/composer/vendor/symfony/console/Symfony/Component/Console/b40d67c9ca6f11df924d9c943b05b67f\nUnpacking archive\nCleaning up\nWriting lock file\nGenerating autoload files\nSegmentation fault\nvagrant@lucid64:/tmp/composer$ ls -a vendor/.composer/\n.  ..  installed.json\n```\n\nThen, I updated `composer.json` again:\n\n```\n\"require\": {\n    \"php\": \">=5.3.0\",\n    \"symfony/console\": \">2.0.4,<2.2-dev\",\n    \"symfony/finder\": \">2.0.4,<2.2-dev\",\n    \"symfony/process\": \">2.0.4,<2.2-dev\"\n},\n```\n\nAnd it finally worked, without segfaults:\n\n```\nvagrant@lucid64:/tmp/composer$ rm -rf composer.lock vendor/\nvagrant@lucid64:/tmp/composer$ composer.phar install\nInstalling dependencies.\nDownloading http://github.com/symfony/Process/zipball/96512471ac1481eef59051a26239e825105ddd1d to /tmp/composer/vendor/symfony/process/Symfony/Component/Process/ed4e7277155fbd8bae1f020ed0a183e3\nUnpacking archive\nCleaning up\nDownloading http://github.com/symfony/Finder/zipball/dd56fc9f1f0baa006d7491d5c17eb3e2dd8a066c to /tmp/composer/vendor/symfony/finder/Symfony/Component/Finder/dfa893b97922079460f7fd8163dddc98\nUnpacking archive\nCleaning up\nDownloading http://github.com/symfony/Console/zipball/63af6eb3f342ac79f0ebbc3bfc59721e247cbb4c to /tmp/composer/vendor/symfony/console/Symfony/Component/Console/2d5351c867fdf130ea823d63aeec5a4f\nUnpacking archive\nCleaning up\nWriting lock file\nGenerating autoload files\n```\n\nNote that I set the Symfony components to be greater than `>2.0.4`. Greater equal (`>=2.0.4`) segfaults also.\n\nBTW, PHP 5.3.2.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/3517632/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/3540567", "body": "@mpdude Yes, and seems irony Suhosin giving contribution to segfaults :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/3540567/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/6840068", "body": "how to fix it in a environnement where php.ini is not on dev's control ? \n\ni've tried php_flag apc.enable_cli 1 in .htaccess, same result. \n\nFatal error: include(): Cannot redeclare class composer\\command\\showcommand in phar:///data_path/composer.phar/vendor/composer/ClassLoader.php on line 150\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/6840068/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/5022153", "body": "I have a very slow connection and it would be wonderful to know the progress of git clones.  Git itself shows progress, but when composer clones a repo that is hidden.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/5022153/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/5022348", "body": "@stof, `---verbose` only shows that it's cloning, not the progress achieved so there is no way of knowing how fast or slow the clone is actually taking.\n\ne.g.\n\n```\nInstalling sensio/generator-bundle (dev-master)\n  - Package sensio/generator-bundle (dev-master)\n    Cloning 06d07e0514d310be8d5630bfd93637136991c30c\nCloning into 'C:\\xampp\\htdocs\\core2\\vendor/sensio/generator-bundle/Sensio/Bundle/GeneratorBundle'...\n```\n\nThat's it, no x%, no git clone output etc.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/5022348/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/6298953", "body": "I'm getting a similar error:\n\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 78 bytes) in phar:///<path to site>/composer.phar/src/Composer/DependencyResolver/Solver.php on line 169\n\nNote: have the latest update file.\n\nAny ideas?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/6298953/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/6327064", "body": "Thanks, it's working now.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/6327064/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4592997", "body": "Same here with\n\n```\n\"require\": {\n    \"php\": \">=5.3.2\",\n    \"symfony/framework-bundle\": \"2.*\",\n    \"symfony/twig-bundle\": \"2.*\",\n    \"twig/twig\": \"*\"\n},\n```\n\nworks fine after removing twig\n\n```\n\"require\": {\n    \"php\": \">=5.3.2\",\n    \"symfony/framework-bundle\": \"2.*\",\n    \"symfony/twig-bundle\": \"2.*\"\n},\n```\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4592997/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4605254", "body": "According to the docs, you are doing it wrong.\n\n\"Package\" type is used when repository does NOT have its own `composer.json` config file. In your case you should go with VCS type. For more information see VCS and Package chapters at http://getcomposer.org/doc/05-repositories.md\n\nHowever, from my experience you can still have some problems with private repos (see #482). If you get this working, you should help in #482 ;>\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4605254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4606676", "body": "After re-reading the docs at http://getcomposer.org/doc/05-repositories.md ... as I understand, the repo defined with VCS type should be picked up automatically. There is also such example in the docs.\n\nHowever the sentence \"When hosting your own package repository it is recommended to use a composer one.\" from \"Hosting your own\" chapter is confusing me. Is having own packages.json file _required_ or _recommended_ ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4606676/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4607166", "body": "> If you want to create a \"composer\" type repository, you must have a packages.json file.\n\nOf course. This is not what I meant.... Do I **have to** create composer repository (with \"packages.json\" file) in order to correctly define private repos as dependencies? Using VCS-type repository doesn't seem to work for me.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4607166/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4614428", "body": "@brikou `symfony/finder` is not a private repository.\n1. You need to use slash instead of colon between symfony and finder.\n2. Defining VCS repository for `symfony/finder` is not necessary as it is published in Packagist: http://packagist.org/packages/symfony/finder \n3. **The problem here is related to private repositories which are not (cannot be) published in Packagist.**\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4614428/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4624494", "body": "@Seldaek After your suggestion I changed 'vcs' to 'git' and used the following form:\n\n```\n\"repositories\": [\n    {\n        \"type\": \"git\",\n        \"url\": \"git@bitbucket.org:vendor/abcdeprivatebundle.git\"\n    }\n]\n```\n\nwhich gives the same error message. I have tried to debug the issue... Looks like the repository is downloaded (as autorization occurs and repository is saved in temporary dir - thanks @brikou for this info).\n\nBut, the error still occurs. Dumping the `$this->reasons` variable before https://github.com/composer/composer/blob/master/src/Composer/DependencyResolver/Problem.php#L84 line is not more helpful:\n\n```\nArray\n(\n    [a:4:{s:8:\"packages\";a:0:{}s:3:\"cmd\";s:7:\"install\";s:11:\"packageName\";s:27:\"vendor/abcde-private-bundle\";s:10:\"constraint\";O:47:\"Composer\\Package\\LinkConstraint\\MultiConstraint\":1:{s:14:\" * constraints\";a:0:{}}}] => Array\n        (\n            [rule] => \n            [job] => Array\n                (\n                    [packages] => Array\n                        (\n                        )\n\n                    [cmd] => install\n                    [packageName] => vendor/abcde-private-bundle\n                    [constraint] => Composer\\Package\\LinkConstraint\\MultiConstraint Object\n                        (\n                            [constraints:protected] => Array\n                                (\n                                )\n\n                        )\n\n                )\n\n        )\n\n)\n```\n\nAnyone willing to help?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4624494/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4629360", "body": "Ok, I found the issue. Will send a patch soon.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4629360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4629889", "body": "See #487\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4629889/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4636210", "body": "The following form work fine now (handled by `GitDriver`):\n\n```\n\"repositories\": [\n    {\n        \"type\": \"vcs\",\n        \"url\": \"git@bitbucket.org:vendor/repo.git\"\n    }\n]\n```\n\nPrivate repos specified as `https://bitbucket.org/vendor/repo.git` or `https://vendor@bitbucket.org/vendor/repo.git` does not work.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4636210/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/8442831", "body": "@Seldaek Given the information in #1092 about security of git protocol - can we increase the priority of this issue?\n\nSide note: when implementing HTTPS support to bitbucket recently added `github-protocols` config option could be reused.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/8442831/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/8443130", "body": "Wait... after reading the code of GitHubDriver & some docs about BitBucket API... `git@bitbucket.org:vendor/repo.git` is SSH not GIT protocol?\n\nOk, my bad - so this issue seems to deserve low priority :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/8443130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4871142", "body": "I found similar issue. After updating/recreating `packages.json` with Satis for 30+ private repos, some of my repos were missing.\n\nAs I found out this was because of local copy of repository which was not properly initialized (?). The repository in a temp directory had only `.git` directory (with objects and refs subdirectories) - nothing else.\n\nI am not sure what caused this. There was no error message. Maybe some internet connection problems or temporary http error like 503? If the cause of this can not be fixed - can we at least throw an exception ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4871142/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4896973", "body": "I can not reproduce the issue - it occured randomly. \n\nSatis is a separate issue which is fixed in a waiting PR. We also need to throw exception in Satis when required package was not found - either because of badly cloned git repo or because the package was defined without details about repository.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4896973/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/5240247", "body": "@Seldaek - since the major BC break has now occurred (where the `autoload.php` is located), maybe you could consider adding a non-hidden subdirectory for the 4 `autoload.php` dependencies?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/5240247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/5240485", "body": "@stof - \"is likely\" is probably a bit too strong, but one could just make \"composer-autoloader\" a protected key in the \"require\" schema. I'm only suggesting a non-hidden folder because this ticket is about the disadvantages of hidden folders? Unless it was only about the fact that the autoload.php was hidden - if that is the case, keep the `.composer` folder for the autoloader deps.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/5240485/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/5240807", "body": "@jalliot - see https://groups.google.com/forum/?fromgroups#!topic/composer-dev/fWIs3KocwoA\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/5240807/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/5240910", "body": "How about `-composer`, `~composer`, `composer_` or `composer_deps` and make it a protected key that cant be specified in composer.json\n\nBut why is a hidden dir for the dependencies of composer objectionable (i.e all except the autoload.php)?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/5240910/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/5013734", "body": "@stanlemon I don't think you can get the package repos to specify the vendor dir, but in the `require` statements, it would be good to be able to override the default `vendor-dir` settings.  I already discussed this with @Seldaek \n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/5013734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/5013812", "body": "@mvriel or what about a type called 'require-extra' which is defined by `vendor => array(version, path)`\n\ne.g.\n\n```\n    \"require-extra\": {\n        \"foo/bar\": [\"1.2.3\", \"vendor-dir\"],\n    }, \n```\n\nThis way it can truly work for anything.  There are other usecases for example system modules e.g. in Zikula or Drupal where modules sort of need to go in a special folder.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/5013812/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4949211", "body": "Also, in this case there is no error message & no validation if requirements could be solved.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4949211/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4949780", "body": "fixed description of the issue\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4949780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4950521", "body": "I cant as these are **private repos**. Description with steps to reproduce should be enough.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4950521/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/5405513", "body": "This bug still exists (tested today with composer in version d60188903d) but the steps to reproduce can be simplified:\n- main repo's composer.json has dependencies which are installed via php composer.phar install\n- new dependency XYZ is added to composer.json (XYZ dependency also contains subdependencies)\n- php composer.phar update\n\nend result:\n\nXYZ dependency is installed but required subdependencies of XYZ dependency are **NOT** installed\n\n@naderman @Seldaek ping - could you give this issue a higher priority? thanks.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/5405513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "stof": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/449133", "body": "This class should probably implement the `IteratorAgregate` method to make it easier to use. There is no special code as the method is already implemented here :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/449133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/511757", "body": "you should probably use the git protocol here as the http protocol does not work for people using an old version of git (github dropped the support of dumb http a month ago) and has some issues by returning 403 responses in some cases\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/511757/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/511777", "body": "git < 1.6.6 does not support smart http.\n\nBut well, there is a way to change the url of submodule if needed by using `git submodule init` first and changing the url so it can stay as is.\n\nBtw, why changing https to http ? github gives the https url on the repo page, not the http one\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/511777/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/511782", "body": "and github documented that old version can simply use the git protocol :) They did it to allow optimizing the way they store the files.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/511782/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/514925", "body": "you should use mocks to test the solver. Currently, your test is not a unit test but a functional test relying on Packagist being up and containing  only one package: Monolog\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/514925/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/619243", "body": "why is it public instead of protected ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/619243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/80944", "body": "you should remove this file\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/80944/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/124668", "body": "you should remove the extra empty line\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/124668/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/124670", "body": "you should add the help for the command too\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/124670/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/124671", "body": "it should be protected IMO\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/124671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/125737", "body": "is it really necessary to use the finder here ? The command will not be added often, and they will likely be only a few ones so registering them explicitly could be more readable and maintainable (like it is done in Doctrine btw)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/125737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/127420", "body": "the `piblic` keyword should be omitted for interface as they can only define public methods anyway\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/127420/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/127422", "body": "same here\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/127422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/133157", "body": "the class name is `JsonLoader`\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/133157/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/133158", "body": "why aliasing it ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/133158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139530", "body": "@everzet the type is still there\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139531", "body": "all these use statement should probably be removed as they are the only changes in the class\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139532", "body": "what is it for ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139532/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139533", "body": "these should probably be renamed to be more explicit\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139533/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139534", "body": "the last two are probably useless as there is no change in the class to use them\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139535", "body": "this change is wrong as the commands are added explicitly, not by using the Finder to search for them\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139535/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139536", "body": "we should be consistent between the different managers. The `DownloaderManager` uses `UnexpectedValueException` for the corresponding case.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139536/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139537", "body": "the property should maybe be renamed to be clearer for someone reading the code\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139537/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139539", "body": "same here than for other managers. Choose one of the 2 exceptions.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139539/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139543", "body": "I don't see what is shorter by aliasing it to a longer name than `Application` :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139543/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139550", "body": "@chEbba because the way to update package depends of the way it was downloaded. For instance, when installing the package with a `git clone`, updating it simply means fetching the changes with git.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "xaav": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/511956", "body": "I'm using mysysgit, and don't have any problems.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/511956/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/81575", "body": "Sorry; another side affect when squashing commits.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/81575/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "damianb": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/512003", "body": "Echoing @xaav.  I've been using msysgit for a while, and haven't had problems with https github URLs.\n\nThough, I will say that when behind my college's extensive firewall setup, I have to use the git:// URLs (instead of the https URLs) in order to push/pull.  But, that's another story.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/512003/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "beberlei": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/588490", "body": "strtolower has no second parameter.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/588490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "weaverryan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/126563", "body": "I agree also - was a bit of copy-and-paste, but I've simplified it now.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/126563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "yethee": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/133593", "body": "Here typo\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/133593/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "everzet": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/139538", "body": "To be cleaner/shorter :-)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139538/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139540", "body": "It's for lock. It's not implemented yet ;-)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139540/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139541", "body": "Yeah, it would. I've just tried to finish this big refactoring as fast as possible. We'll clean Composer with later PRs ;-)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139541/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139544", "body": "Yeah, `UnexpectedValueException` is Seldaek legacy. I kinda don't like it, because `InvalidArgumentException` provides more contextual info :-) We'll clean those things in later PRs\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139544/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139545", "body": "Agree.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139545/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "chEbba": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/139549", "body": "Why does downloader need to have update and remove methods? It's really strange for Downloader, as we have update and uninstall methods in Intaller.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139549/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}}, "3": {"c00ler123": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7021", "title": "Composer file could not be downloaded (404 not found)", "body": "I tyring to install Laravel\r\n\r\nOutput of `composer diagnose`:\r\n\r\nd:\\web>composer diag\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking HTTP proxy: OK\r\nChecking HTTP proxy support for request_fulluri: OK\r\nChecking HTTPS proxy support for request_fulluri: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys:\r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  ****\r\n723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  ****\r\n8C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\nComposer version: 1.6.2\r\nPHP version: 7.2.1\r\nPHP binary path: D:\\php-7.2.1-nts-Win32-VC15-x86\\php.exe\r\n\r\nWhen I run this command:\r\n\r\ncomposer global require \"laravel/installer\"\r\n\r\nI get the following output:\r\n\r\n [Composer\\Downloader\\TransportException]\r\n The \"https://packagist.org/p/symfony/console%2433f24f3dbe55cff57fe06a5fa93b\r\n a0bbe3ae3b259e2c5b7d051da0238769fa0f.json\" file could not be downloaded (HT\r\n TP/1.1 404 Not Found)\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vnagara": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7020", "title": "Segment fault and out of memory on installation", "body": "Hi,\r\nI was out of programming a while (about 2 years). Now I tried to up to date my sources and got versioning conflict on _composer install_. After resolving api I got new worse bug segment fault on php5.6 and 10Gb Memory leak on php7.1.\r\nHere my data:\r\n\r\nMy `composer.json`:\r\n\r\n```json\r\n{\r\n    \"require\": {\r\n        \"libra/libra-assets-installer\":     \"2.2.0\",\r\n        \"libra/twitter-bootstrap-assets\":   \"3.3.0\"\r\n    }\r\n}\r\n```\r\n\r\nOutput of `composer diagnose` (__php5.6__):\r\n\r\n```\r\nChecking composer.json: WARNING\r\nNo license specified, it is recommended to do so. For closed-source software you may use \"proprietary\" as license.\r\nrequire.libra/libra-assets-installer : exact version constraints (2.2.0) should be avoided if the package follows semantic versioning\r\nrequire.libra/twitter-bootstrap-assets : exact version constraints (3.3.0) should be avoided if the package follows semantic versioning\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: \r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\nComposer version: 1.6.2\r\nPHP version: 5.6.33-1+0~20180105151408.9+stretch~1.gbp0deeda\r\nPHP binary path: /usr/bin/php5.6\r\n```\r\nWhen I run this command:\r\n\r\n```\r\nphp5.6 /usr/bin/composer -vvv install\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nReading ./composer.json\r\nLoading config file /home/user/composer/config.json\r\nLoading config file /home/user/.composer/auth.json\r\nLoading config file ./composer.json\r\nChecked CA file /etc/ssl/certs/ca-certificates.crt: valid\r\nExecuting command (/var/www/tmp/b): git branch --no-color --no-abbrev -v\r\nExecuting command (/var/www/tmp/b): git describe --exact-match --tags\r\nExecuting command (/var/www/tmp/b): git log --pretty=\"%H\" -n1 HEAD\r\nExecuting command (/var/www/tmp/b): hg branch\r\nExecuting command (/var/www/tmp/b): fossil branch list\r\nExecuting command (/var/www/tmp/b): fossil tag list\r\nExecuting command (/var/www/tmp/b): svn info --xml\r\nFailed to initialize global composer: Composer could not find the config file: /home/user/.composer/composer.json\r\nTo initialize a project, please create a composer.json file as described in the https://getcomposer.org/ \"Getting Started\" section\r\nReading /var/www/tmp/b/vendor/composer/installed.json\r\nRunning 1.6.2 (2018-01-05 15:28:41) with PHP 5.6.33-1+0~20180105151408.9+stretch~1.gbp0deeda on Linux / 4.9.0-5-amd64\r\nLoading composer repositories with package information\r\nDownloading https://packagist.org/packages.json\r\nWriting /home/user/.composer/cache/repo/https---packagist.org/packages.json into cache\r\nUpdating dependencies (including require-dev)\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2013.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2014.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2015.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2016.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2017.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2017-04.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2017-07.json from cache\r\nDownloading http://packagist.org/p/provider-2017-10%247fe61c2bcc3ee23f172c498bd8cf2f9a46ac2020b1bb656936850c57a091d417.json\r\nWriting /home/user/.composer/cache/repo/https---packagist.org/p-provider-2017-10.json into cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2018-01.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-archived.json from cache\r\nDownloading http://packagist.org/p/provider-latest%24a07e2c01b6005319524ed8cd28c942abb11d3a2bb7078410f77a3fc9d082b65e.json\r\nWriting /home/user/.composer/cache/repo/https---packagist.org/p-provider-latest.json into cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/provider-libra$libra-assets-installer.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/provider-libra$twitter-bootstrap-assets.json from cache\r\nResolving dependencies through SAT\r\nDependency resolution completed in 0.001 seconds\r\nAnalyzed 72 packages to resolve dependencies\r\nAnalyzed 61 rules to resolve dependencies\r\nPackage operations: 1 install, 0 updates, 0 removals\r\nInstalls: libra/twitter-bootstrap-assets:3.3.0\r\nSegmentation fault\r\n\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\nphp7.1 /usr/bin/composer install\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nReading ./composer.json\r\nLoading config file /home/user/.composer/config.json\r\nLoading config file /home/user/.composer/auth.json\r\nLoading config file ./composer.json\r\nChecked CA file /etc/ssl/certs/ca-certificates.crt: valid\r\nExecuting command (/var/www/tmp/b): git branch --no-color --no-abbrev -v\r\nExecuting command (/var/www/tmp/b): git describe --exact-match --tags\r\nExecuting command (/var/www/tmp/b): git log --pretty=\"%H\" -n1 HEAD\r\nExecuting command (/var/www/tmp/b): hg branch\r\nExecuting command (/var/www/tmp/b): fossil branch list\r\nExecuting command (/var/www/tmp/b): fossil tag list\r\nExecuting command (/var/www/tmp/b): svn info --xml\r\nFailed to initialize global composer: Composer could not find the config file: /home/user/.composer/composer.json\r\nTo initialize a project, please create a composer.json file as described in the https://getcomposer.org/ \"Getting Started\" section\r\nReading /var/www/tmp/b/vendor/composer/installed.json\r\nRunning 1.6.2 (2018-01-05 15:28:41) with PHP 7.1.13-1+0~20180105151623.14+stretch~1.gbp1086fa on Linux / 4.9.0-5-amd64\r\nLoading composer repositories with package information\r\nDownloading https://packagist.org/packages.json\r\nWriting /home/user/.composer/cache/repo/https---packagist.org/packages.json into cache\r\nUpdating dependencies (including require-dev)\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2013.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2014.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2015.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2016.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2017.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2017-04.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2017-07.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2017-10.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2018-01.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-archived.json from cache\r\nDownloading http://packagist.org/p/provider-latest%24b0107e8bd42cbfbf0f3dc7caf6776e71801478f60931c6d8f1aad89b4cd1e98d.json\r\nWriting /home/user/.composer/cache/repo/https---packagist.org/p-provider-latest.json into cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/provider-libra$libra-assets-installer.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/provider-libra$twitter-bootstrap-assets.json from cache\r\nResolving dependencies through SAT\r\nDependency resolution completed in 0.000 seconds\r\nAnalyzed 70 packages to resolve dependencies\r\nAnalyzed 59 rules to resolve dependencies\r\nPackage operations: 1 install, 0 updates, 0 removals\r\nInstalls: libra/twitter-bootstrap-assets:3.3.0\r\n\r\nmmap() failed: [12] Cannot allocate memory\r\n\r\nmmap() failed: [12] Cannot allocate memory\r\nPHP Fatal error:  Out of memory (allocated 13529776128) (tried to allocate 262144 bytes) in phar:///usr/bin/composer/src/Composer/Installer/LibraryInstaller.php on line 173\r\n\r\nFatal error: Out of memory (allocated 13529776128) (tried to allocate 262144 bytes) in phar:///usr/bin/composer/src/Composer/Installer/LibraryInstaller.php on line 173\r\n\r\nmmap() failed: [12] Cannot allocate memory\r\n\r\nmmap() failed: [12] Cannot allocate memory\r\nPHP Fatal error:  Out of memory (allocated 13529776128) (tried to allocate 262144 bytes) in Unknown on line 0\r\n\r\nFatal error: Out of memory (allocated 13529776128) (tried to allocate 262144 bytes) in Unknown on line 0\r\n\r\n(Consumed all my memory what is more than 12Gb).\r\n```\r\n\r\nAnd I expected this to happen:\r\n\r\nTo avoid segment fault. \r\nTo stop unlimited memory allocation.\r\n\r\nComposer version __1.0.0-alpha11__ works without errors. Next one fails.\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7020/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rickselby": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7018", "title": "--no-dev installs package replaced by dev requirement, not original requirement", "body": "My `composer.json`:\r\n\r\n_This is a simplified version of the issue I'm seeing. In the real case, my `require-dev` contains `\"graham-campbell/testbench\": \"^4.0\"`; its dependencies eventually require `laravel/framework`, which causes the issue. Both setups give the same results._\r\n\r\n```json\r\n{\r\n    \"require\": {\r\n        \"illuminate/contracts\": \"~5.5.0\"\r\n    },\r\n    \"require-dev\": {\r\n        \"laravel/framework\": \"~5.5.0\"\r\n    }\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nChecking composer.json: WARNING\r\nNo license specified, it is recommended to do so. For closed-source software you may use \"proprietary\" as license.\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: \r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\nComposer version: 1.6.2\r\nPHP version: 7.0.22-0ubuntu0.16.04.1\r\nPHP binary path: /usr/bin/php7.0\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer install --no-dev\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nLoading composer repositories with package information\r\nUpdating dependencies\r\nPackage operations: 30 installs, 0 updates, 0 removals\r\n...<snip>...\r\n  - Installing laravel/framework (v5.5.31): Downloading (100%)         \r\nWriting lock file\r\nGenerating autoload files\r\n```\r\n\r\nAnd I expected this to happen:\r\n\r\n```\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\nPackage operations: 3 installs, 0 updates, 0 removals\r\n...<snip>...\r\n  - Installing illuminate/contracts (v5.5.28): Downloading (100%)         \r\nWriting lock file\r\nGenerating autoload files\r\n```\r\n\r\n`laravel/framework`'s composer.json contains the following:\r\n```\r\n\"replace\": {\r\n   ...\r\n   \"illuminate/contracts\": \"self.version\",\r\n   ...\r\n}\r\n```\r\n\r\nI've read through the numerous issues relating to updating requiring require-dev to be solvable (#5224 etc), and that require-dev is parsed even when --no-dev is specified, so I'm not sure if anything can be done here, but thought it best to raise this case.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7018/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nadar": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7017", "title": "Composer TestCase", "body": "We have built a composer based open source CMS and Admin UI (https://luya.io), therefore we have made a composer plugin to track the packages from our \"type\". In order to test (phpunit) the composer plugin, we could not found any useful documentation, so where looking how you did => https://github.com/composer/composer/blob/master/tests/Composer/TestCase.php. \r\n\r\nSo we have used the TestCase class to test our own plugin, sadly due to this comment `https://github.com/composer/composer/commit/b656973a86c9f4793f45bd5fa68410878bb5acc3#comments` the test files are no longer shipped into the vendor folder.\r\n\r\nComposer is the future, so more plugins will follow, we need tools to test those plugins.\r\n\r\nSo my question is:\r\n\r\n1. Why not adding the test files for other developers to? (re add the `tests` folder)\r\n2. Or provide a basic TestCase for developers which makes it easy to test the plugin, like a composer testsuite?", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7017/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rabin999": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7012", "title": "while installing package through composer it require too much time to install and update too, i am using in laravel project ", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n    \"name\": \"laravel/laravel\",\r\n    \"description\": \"The Laravel Framework.\",\r\n    \"keywords\": [\"framework\", \"laravel\"],\r\n    \"license\": \"MIT\",\r\n    \"type\": \"project\",\r\n    \"require\": {\r\n        \"php\": \">=7.0.0\",\r\n        \"fideloper/proxy\": \"~3.3\",\r\n        \"laravel/framework\": \"5.5.*\",\r\n        \"laravel/tinker\": \"~1.0\"\r\n    },\r\n    \"require-dev\": {\r\n        \"filp/whoops\": \"~2.0\",\r\n        \"fzaninotto/faker\": \"~1.4\",\r\n        \"mockery/mockery\": \"~1.0\",\r\n        \"phpunit/phpunit\": \"~6.0\",\r\n        \"predis/predis\": \"^1.1\"\r\n    },\r\n    \"autoload\": {\r\n        \"classmap\": [\r\n            \"database/seeds\",\r\n            \"database/factories\"\r\n        ],\r\n        \"psr-4\": {\r\n            \"App\\\\\": \"app/\"\r\n        }\r\n    },\r\n    \"autoload-dev\": {\r\n        \"psr-4\": {\r\n            \"Tests\\\\\": \"tests/\"\r\n        }\r\n    },\r\n    \"extra\": {\r\n        \"laravel\": {\r\n            \"dont-discover\": [\r\n            ]\r\n        }\r\n    },\r\n    \"scripts\": {\r\n        \"post-root-package-install\": [\r\n            \"@php -r \\\"file_exists('.env') || copy('.env.example', '.env');\\\"\"\r\n        ],\r\n        \"post-create-project-cmd\": [\r\n            \"@php artisan key:generate\"\r\n        ],\r\n        \"post-autoload-dump\": [\r\n            \"Illuminate\\\\Foundation\\\\ComposerScripts::postAutoloadDump\",\r\n            \"@php artisan package:discover\"\r\n        ]\r\n    },\r\n    \"config\": {\r\n        \"preferred-install\": \"dist\",\r\n        \"sort-packages\": true,\r\n        \"optimize-autoloader\": true\r\n    }\r\n}\r\n\r\n```\r\n\r\nWhen I run command require or update on package, at least it took 15-18 min for small changes :(\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7012/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mhujer": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7010", "title": "composer validate show report scripts-descriptions for non-existent scripts", "body": "My `composer.json` (note the _typo_ in the first item in `scripts-descriptions`):\r\n\r\n```json\r\n  \"scripts\": {\r\n    \"test\": \"phpunit\",\r\n    \"phpcs\": \"phpcs --standard=PSR2 src\"\r\n  },\r\n  \"scripts-descriptions\": {\r\n    \"phpcsxxx\": \"Checks that the application code conforms to coding standard\",\r\n    \"test\": \"Launches the preconfigured PHPUnit\"\r\n  }\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nComposer version: 1.6.2\r\nPHP version: 7.1.12\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer validate --strict\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\n./composer.json is valid\r\n```\r\n\r\nAnd I expected this to happen:\r\n```\r\nWarning: Description for non-existent script \"phpcsxxx\" found in \"scripts-descriptions\"\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7010/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/7019", "title": "Validation warns if script description for nonexistent script is present", "body": "Fixes #7010", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "logig": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7007", "title": "`composer update` not work at local repo. The 1.4.x version used to work.", "body": "My `operating System`: Windows 10\r\nMy `config.json`:\r\n\r\n```json\r\n{\r\n    \"config\": {\r\n        \"optimize-autoloader\": true,\r\n        \"preferred-install\": \"dist\"\r\n    },\r\n    \"repositories\": {\r\n        \"packagist\": {\r\n            \"type\": \"composer\",\r\n            \"url\": \"https://packagist.phpcomposer.com\"\r\n        },\r\n        \"local\": {\r\n            \"type\": \"path\",\r\n            \"url\": \"D:/logig/*\",\r\n            \"options\": {\r\n                \"symlink\": true\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\n$ composer diagnose\r\nChecking composer.json: WARNING\r\nrequire.logig/wp-notice : unbound version constraints (dev-master) should be avoided\r\nrequire.logig/wp-admin-ui : unbound version constraints (dev-master) should be avoided\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys:\r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\nComposer version: 1.6.2\r\nPHP version: 7.1.1\r\nPHP binary path: D:\\Nginx\\php\\php.exe\r\n\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer update\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\n$ composer update\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\nNothing to install or update\r\nGenerating optimized autoload files\r\n\r\n```\r\nor sometimes:\r\n\r\n```\r\n$ composer update\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\nPackage operations: 0 installs, 1 update, 0 removals\r\n  - Removing junction for logig/wp-admin-ui (dev-master)\r\n\r\n\r\n  [Symfony\\Component\\Filesystem\\Exception\\IOException]\r\n  D:\\logig\\wordpress.local\\wp-content\\plugins\\mayun-oss-support\\vendor\\logig\\wp-admin-ui is not a junction and thus c\r\n  annot be removed as one\r\n\r\n```\r\n\r\nAnd I expected this to happen:\r\nUpdate the namespace autoload data which changed in my local repo's composer.json\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7007/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "staabm": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7004", "title": "svn log command misses credentials", "body": "we are running in the situation that composer tries to run a `svn log` command, and this doesnt succeed because of missing credentials.\r\n\r\nhaving a closer look at the code\r\n\r\nhttps://github.com/composer/composer/blob/994bac0c153348c09d42cd77225c465c1b81e8e9/src/Composer/Downloader/SvnDownloader.php#L173-L184\r\n\r\nreveals that this command is not executed using the `SvnUtil` which would otherwise provide this authentication stuff.\r\n\r\nwe see errors like\r\n\r\n```\r\n[localhost] < [error]\u2002\u2002 - Updating complex/portallib dev-trunk (/trunk/@8668 => /trunk/@8769):\r\n[localhost] < [error]\u2002\u2002Checking out /trunk/@8769\r\n[localhost] < [error] At revision 8769.\r\n[localhost] < [error]\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\r\n[localhost] < [error]\u2002\u2002 [RuntimeException]\r\n[localhost] < [error]\u2002\u2002 Failed to execute svn log -r8668:8769 --incremental\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\r\n[localhost] < [error]\u2002\u2002 svn: E170013: Unable to connect to a repository at URL https://xyz.com/svn/myproject/portallib/trunk\u2002\u2002\r\n[localhost] < [error]\u2002\u2002 svn: E215004: No more credentials or we tried too many times.\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\r\n[localhost] < [error]\u2002\u2002 Authentication failed\r\n[localhost] < [error] Exception trace:\r\n[localhost] < [error]\u2002\u2002() at phar:///usr/local/bin/composer/src/Composer/Downloader/SvnDownloader.php:174\r\n[localhost] < [error]\u2002\u2002Composer\\Downloader\\SvnDownloader->getCommitLogs() at phar:///usr/local/bin/composer/src/Composer/Downloader/VcsDownloader.php:167\r\n[localhost] < [error]\u2002\u2002Composer\\Downloader\\VcsDownloader->update() at phar:///usr/local/bin/composer/src/Composer/Downloader/DownloadManager.php:268\r\n[localhost] < [error]\u2002\u2002Composer\\Downloader\\DownloadManager->update() at phar:///usr/local/bin/composer/src/Composer/Installer/LibraryInstaller.php:207\r\n[localhost] < [error]\u2002\u2002Composer\\Installer\\LibraryInstaller->updateCode() at phar:///usr/local/bin/composer/src/Composer/Installer/LibraryInstaller.php:109\r\n[localhost] < [error]\u2002\u2002Composer\\Installer\\LibraryInstaller->update() at phar:///usr/local/bin/composer/src/Composer/Installer/InstallationManager.php:193\r\n[localhost] < [error]\u2002\u2002Composer\\Installer\\InstallationManager->update() at phar:///usr/local/bin/composer/src/Composer/Installer/InstallationManager.php:160\r\n[localhost] < [error]\u2002\u2002Composer\\Installer\\InstallationManager->execute() at phar:///usr/local/bin/composer/src/Composer/Installer.php:587\r\n[localhost] < [error]\u2002\u2002Composer\\Installer->doInstall() at phar:///usr/local/bin/composer/src/Composer/Installer.php:226\r\n[localhost] < [error]\u2002\u2002Composer\\Installer->run() at phar:///usr/local/bin/composer/src/Composer/Command/InstallCommand.php:119\r\n[localhost] < [error]\u2002\u2002Composer\\Command\\InstallCommand->execute() at phar:///usr/local/bin/composer/vendor/symfony/console/Command/Command.php:266\r\n[localhost] < [error]\u2002\u2002Symfony\\Component\\Console\\Command\\Command->run() at phar:///usr/local/bin/composer/vendor/symfony/console/Application.php:861\r\n[localhost] < [error]\u2002\u2002Symfony\\Component\\Console\\Application->doRunCommand() at phar:///usr/local/bin/composer/vendor/symfony/console/Application.php:208\r\n[localhost] < [error]\u2002\u2002Symfony\\Component\\Console\\Application->doRun() at phar:///usr/local/bin/composer/src/Composer/Console/Application.php:245\r\n[localhost] < [error]\u2002\u2002Composer\\Console\\Application->doRun() at phar:///usr/local/bin/composer/vendor/symfony/console/Application.php:127\r\n[localhost] < [error]\u2002\u2002Symfony\\Component\\Console\\Application->run() at phar:///usr/local/bin/composer/src/Composer/Console/Application.php:100\r\n[localhost] < [error]\u2002\u2002Composer\\Console\\Application->run() at phar:///usr/local/bin/composer/bin/composer:54\r\n[localhost] < [error]\u2002\u2002require() at /usr/local/bin/composer:24\r\n[localhost] < [error] install [--prefer-source] [--prefer-dist] [--dry-run] [--dev] [--no-dev] [--no-custom-installers] [--no-autoloader] [--no-scripts] [--no-progress] [--no-suggest] [-v|vv|vvv|--verbose] [-o|--optimize-autoloader] [-a|--classmap-authoritative] [--apcu-autoloader] [--ignore-platform-reqs] [--] [<packages>]...\r\n```", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/7015", "title": "Mention that also a antivirus software might corrupt file contents", "body": "The \"possible man-in-the-middle attack\" examples seems a bit over aggressive/dramatic.\r\n\r\nIn my experience most of the time bad/aggresive antivirus/firewall/content-filter applications/appliances are to blame.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/7005", "title": "Pass auth credentials to svn log while retrieving commit logs", "body": "Fixes https://github.com/composer/composer/issues/7004", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ncomer": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7003", "title": "could this apporoach will be more useful to optimize with apcu ", "body": "since  i run the command  \"dump-autoload -o --apcu\" to improve the boot speed of laravel,\r\ni got a big autoload_static file which have 4k lines code.\r\nThen i found   this code block within auloload_real.php:\r\nif ($useStaticLoader) {\r\n      require_once __DIR__ . '/autoload_static.php';  \r\n call_user_func(\\Composer\\Autoload\\ComposerStaticInitb6642ee553ca64f76f58aeb2231d582d::getInitializer($loader));\r\n}\r\n,when run a xhprof, load::composer/autoload_static.php rank No 1(about 11,702 \u00b5s in my case).\r\n\r\nWhat i think is: since apcu can be used for cache,and an obj type can directly  be stored in,\r\nthen i can modify above code like this:\r\n1.autoload_static .php@getInitializer\r\nadd \r\n$loader->f = ComposerStaticInitb6642ee553ca64f76f58aeb2231d582d::$files;\r\n2.auloload_real.php\r\n$loaderApc = apcu_fetch('cloader', $hit);\r\n            if (!$hit){\r\n                require_once __DIR__ . '/autoload_static.php';\r\n\r\n                call_user_func(\\Composer\\Autoload\\ComposerStaticInitb6642ee553ca64f76f58aeb2231d582d::getInitializer($loader));\r\n                apcu_store('cloader', clone $loader);\r\n            }else{\r\n                $loader = $loaderApc;\r\n            }\r\nanother place:\r\nif ($useStaticLoader) {\r\n            $includeFiles = $loader->f;\r\n        }\r\n\r\nI do not have a overall composer source code's reading, but this seems  work,\r\nWill this ok and be achieved further or am i wrong with something..  1st post,sorry for possiable mis", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7003/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "apfelbox": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7002", "title": "Option to always remove VCS on `create-project`?", "body": "Hi \ud83d\udc4b ,\r\n\r\nI am currently in the process of researching a possible fix for https://github.com/symfony/flex/issues/285.\r\n\r\nThe desired behaviour is for the symfony skeleton installation to just always remove the VCS directory and don't ask in the CLI for it.\r\n\r\nCurrently this is implemented that Symfony Flex just completely disables interactivity in IO, so that the call to `->askConfirmation()` [here](https://github.com/composer/composer/blob/994bac0c153348c09d42cd77225c465c1b81e8e9/src/Composer/Command/CreateProjectCommand.php#L201) just [returns the default value](https://github.com/symfony/console/blob/bf56f79b8604e4dd32c236048606c507e9dbbcd3/Helper/QuestionHelper.php#L55) (`true`).\r\n\r\nUnfortunately that also kills all subsequent interactive calls.\r\n\r\nAs I read the code:\r\nhttps://github.com/composer/composer/blob/master/src/Composer/Command/CreateProjectCommand.php#L176-L202\r\n\r\nthere currently is no way to just disable interactivity for the one call to `askConfirmation()`.\r\nIt's always either all scripts + the \"delete VCS dir\" one, or nothing.\r\n\r\nSo I would like to ask whether it would be possible to:\r\n\r\n* dispatch another event between `Installer` and `->askConfirmation()` so that Flex can hook specifically in to disable interactivity in this event and re-enable again in the event `POST_CREATE_PROJECT_CMD ` (something like `POST_ROOT_PACKAGE_DEPENDENCIES_INSTALL`).\r\n* provide a way to just always remove the VCS directory in a plugin (env var, some global setting or a callback somewhere).\r\n\r\nWhat do you think?", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7002/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "chrisEspira": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7001", "title": "The \"https://getcomposer.org/versions\" file could not be downloaded: failed to open stream: HTTP request failed!", "body": "HI,\r\nSomebody can help me solve this problem\r\ni cannot install composer\r\n when i try to install composer \r\nI get this error\r\nThe \"https://getcomposer.org/versions\" file could not be downloaded: failed to open stream: HTTP request failed!\r\n\r\ni need help please..........thx\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "victorynox": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7000", "title": "Wrong return value from Composer/IO/ConsoleIO::select() method", "body": "My `composer.json`:\r\n\r\n```json\r\n\"require\": {\r\n        \"rollun-com/rollun-installer \"^4.0\",\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: \r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\nComposer version: 1.6.2\r\nPHP version: 7.1.12-2+0~20171207160618.12+stretch~1.gbp5c91f3\r\nPHP binary path: /usr/bin/php7.1\r\n```\r\n\r\n```\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: \r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: WARNING\r\nYou are not running the latest stable version, run `composer self-update` to update (1.5.2 => 1.6.2)\r\n```\r\n\r\nWhen I run this method:\r\n\r\n[Composer\\IO\\ConsoleIO::select()](https://github.com/composer/composer/blob/master/src/Composer/IO/ConsoleIO.php#L283) \r\n```\r\n$data = $console->select(\r\n\"Select value\",\r\n[\r\n            \"Choice value 0\",\r\n            \"Choice value 1\",\r\n            \"Choice value 2\",\r\n],\r\n\"0,2\",\r\nfalse,\r\n'Value \"%s\" is invalid',\r\ntrue\r\n);\r\n```\r\n\r\nI get the following output in data:\r\nArray with **values** of the `\"$choices\"` array\r\n```\r\n[\r\n \"Choice value0\",\r\n \"Choice value2\"\r\n]\r\n```\r\n\r\nAnd I expected this to happen:\r\nArray with **keys** of the `\"$choices\"` array\r\n```\r\n[\r\n0,\r\n2\r\n]\r\n```\r\n\r\nWen I'm using composer version 1.5.2 and earlier, method [Composer\\IO\\ConsoleIO::select()](https://github.com/composer/composer/blob/master/src/Composer/IO/ConsoleIO.php#L283)\r\nreturn the array with **keys** of the `\"$choices\"` array ([as in the documentation ](https://getcomposer.org/apidoc/1.6.1/Composer/IO/ConsoleIO.html#method_select)), but in composer 1.6.2 i'm getting the array with **values** of the `\"$choices\"` array. \r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7000/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cweiske": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6998", "title": "\"remove\" output and exit status do not tell about failures/non-removages", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n    \"require\": {\r\n        \"laravel/framework\": \"^5.5\"\r\n    }\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nChecking composer.json: WARNING\r\nNo license specified, it is recommended to do so. For closed-source software you may use \"proprietary\" as license.\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: \r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\nComposer version: 1.6.2\r\nPHP version: 7.1.12-3+ubuntu16.04.1+deb.sury.org+1\r\nPHP binary path: /usr/bin/php7.1\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer remove swiftmailer/swiftmailer; echo $?\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nswiftmailer/swiftmailer is not required in your composer.json and has not been removed\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\nNothing to install or update\r\nGenerating autoload files\r\n```\r\n\r\nAnd I expected this to happen:\r\n\r\n1. A message telling me that swiftmailer was not removed (maybe with a reason: 'hard requirement by laravel/framework\")\r\n2. Exit code of non-0, because 0 means success.\r\n\r\nI want to *remove* a package, and composer did not do that - and failed to tell me that. The package I wanted to remove is still installed.\r\n\r\nI do know that \"composer remove\" currently only removes the entry from `composer.json` and then runs \"update\", but thats implementation detail. The user's intent when using \"remove\" is that a package shall be removed, and composer doesn't behave in a way the user would expect.\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6998/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "IndraGunawan": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6993", "title": "Could not find package when using composer repository that provide lazy providers", "body": "How to reproduce\r\n\r\n- use composer repositry that provide lazy providers like `packagist.com` or `pakethub.com` and add the repository config to `composer.json`\r\n- add `symfony/symfony` package to the composer repository provider. so when you access `packages.json` from the composer repository hosting you will get \r\n```json\r\n{\r\n\"packages\":{\"symfony/symfony\":{...}},\r\n\"search\":\"...\",\r\n\"providers-lazy-url\":\".../p/%package%.json\",\r\n\"mirrors\":[{...}]\r\n}\r\n```\r\n- run `composer require symfony/security-bundle -vvv` at project directory.\r\n\r\nHere the response\r\n```\r\n[InvalidArgumentException]\r\n  Could not find package symfony/security-bundle.\r\n```\r\n  ", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6993/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "verbruggenalex": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6992", "title": "\"tar\" type repository does not allow extraction of empty folder in tar.gz file", "body": "Because the tar.gz file contains an un-named folder \".\" the tar type extractor is not able to extract the contents of the folder. If the folder is named there is no problem.\r\n\r\n<details><summary>File: composer.json</summary>\r\n\r\n```json\r\n    \"require\": {\r\n        \"ec-europa/platform_dev\": \"~2.4.0\"\r\n    },\r\n    \"repositories\": [\r\n        {\r\n            \"type\": \"package\",\r\n            \"package\": {\r\n                \"name\": \"ec-europa/platform_dev\",\r\n                \"version\": \"2.4.63\",\r\n                \"type\": \"drupal-core\",\r\n                \"dist\": {\r\n                    \"url\": \"https://github.com/ec-europa/platform-dev/releases/download/2.4.63/platform-dev-2.4.63.tar.gz\",\r\n                    \"type\": \"tar\"\r\n                }\r\n            }\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n</details>\r\n\r\n<details><p><summary>Run: composer install</summary>\r\n\r\n```\r\n  [PharException]\r\n  Extraction from phar \"/home/verbral/platform-composer/build/28911af645fcdc4a61e64f6ef3e444ab.gz\" failed: Cannot extract \".\", internal error\r\n```\r\n</details></p>\r\n\r\nI know this is an edge case. But would it be possible to allow for un-named folders to be extracted? I'm not really in the mood to re-upload 500 packages to our repository.\r\n\r\nPossible solution provided on PHP documentation page:\r\nhttp://php.net/manual/en/phardata.extractto.php\r\n\r\n  ", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "NomanJaved": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6980", "title": "[RuntimeException] Could not scan for classes inside \"src/\" which does not appear to be a file nor a folder", "body": "I am have installed Xampp on Windows 10.\r\n\r\nI am facing the issue that the composer install not work properly in Laravel 5.5. How can I fix this issue. the error is mentioned in the title. If you guys require further detail I can provide it.\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6980/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Salamek": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6975", "title": "Fresh composer install/update and following composer update inconsistency", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n  \"name\": \"dravencms/dravencms\",\r\n  \"type\": \"library\",\r\n  \"description\": \"DravenCMS Content Management System\",\r\n  \"keywords\": [\r\n    \"dravencms\"\r\n  ],\r\n  \"license\": [\r\n    \"LGPL-3.0\"\r\n  ],\r\n  \"authors\": [\r\n    {\r\n      \"name\": \"Adam Schubert\"\r\n    }\r\n  ],\r\n  \"require-dev\": {\r\n    \"nette/tester\": \"@dev\"\r\n  },\r\n  \"repositories\": [\r\n    {\r\n      \"type\": \"vcs\",\r\n      \"url\": \"https://github.com/Salamek/gravatar\"\r\n    }\r\n  ],\r\n  \"require\": {\r\n    \"dravencms/packager\": \"~v1.0\",\r\n    \"dravencms/admin\": \"~v1.0.0\",\r\n    \"dravencms/issue\": \"~v1.0.1\",\r\n    \"dravencms/file\": \"~v1.1\",\r\n    \"o5/grido\": \"dev-master\",\r\n    \"janmarek/webloader\": \"dev-master\",\r\n    \"kdyby/doctrine\": \"v3.3.x-dev\"\r\n  },\r\n  \"scripts\": {\r\n    \"post-install-cmd\": [\r\n      \"php vendor/dravencms/packager/bin/packager packager:sync\"\r\n    ],\r\n    \"post-update-cmd\": [\r\n      \"php vendor/dravencms/packager/bin/packager packager:sync\"\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nChecking composer.json: WARNING\r\nLicense \"LGPL-3.0\" is a deprecated SPDX license identifier, use \"LGPL-3.0-only\" or \"LGPL-3.0-or-later\" instead\r\nrequire.o5/grido : unbound version constraints (dev-master) should be avoided\r\nrequire.janmarek/webloader : unbound version constraints (dev-master) should be avoided\r\nrequire.kdyby/doctrine : exact version constraints (v3.3.x-dev) should be avoided if the package follows semantic versioning\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: FAIL\r\nMissing pubkey for tags verification\r\nMissing pubkey for dev verification\r\nRun composer self-update --update-keys to set them up\r\nChecking composer version: OK\r\nComposer version: 1.6.0\r\nPHP version: 7.2.0\r\nPHP binary path: /usr/bin/php\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\nrm composer.lock\r\nrm -rf ./vendor\r\ncomposer update or composer install\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\n...Lot of installed stuff...\r\n- Installing dravencms/user (v1.0.2): Loading from cache  #<-- OLD VERSION\r\n...Lot of installed stuff...\r\n- Installing dravencms/admin (v1.0): Loading from cache #<-- OLD VERSION\r\n...Lot of installed stuff...\r\n```\r\n\r\nWhen I run this command (after first install or update):\r\n\r\n```\r\ncomposer update\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)         \r\nPackage operations: 0 installs, 2 updates, 0 removals\r\n  - Updating dravencms/user (v1.0.2 => v1.0.3): Loading from cache\r\n  - Updating dravencms/admin (v1.0 => v1.0.3): Loading from cache\r\nPackage symnedi/event-dispatcher is abandoned, you should avoid using it. Use contributte/event-dispatcher instead.\r\nPackage zenify/doctrine-migrations is abandoned, you should avoid using it. Use nettrine/migrations instead.\r\nWriting lock file\r\nGenerating autoload files\r\nocramius/package-versions:  Generating version class...\r\nocramius/package-versions: ...done generating version class\r\n> php vendor/dravencms/packager/bin/packager packager:sync\r\nPackages synced successfully\r\n```\r\n\r\nAnd I expected this to happen:\r\n\r\nWhen i run `composer install` or `composer update` in clean project (vendor and composer.lock deleted) i should get latest versions of all deps matching composer.json, second run of `composer update` should not do anything when no new version is released\r\n\r\nPS: I tried to delete ~/.cache/composer and i get same results as above but with downloads, so it is not cache related\r\nComposer version 1.6.0 2018-01-04 12:03:22\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6975/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/6959", "title": "Your requirements could not be resolved to an installable set of packages. But nothing is wrong", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n  \"name\": \"dravencms/dravencms\",\r\n  \"type\": \"library\",\r\n  \"description\": \"DravenCMS Content Management System\",\r\n  \"keywords\": [\r\n    \"dravencms\"\r\n  ],\r\n  \"license\": [\r\n    \"LGPL-3.0\"\r\n  ],\r\n  \"authors\": [\r\n    {\r\n      \"name\": \"Adam Schubert\"\r\n    }\r\n  ],\r\n  \"require-dev\": {\r\n    \"nette/tester\": \"@dev\"\r\n  },\r\n  \"require\": {\r\n    \"dravencms/packager\": \"^v1.0\",\r\n    \"dravencms/admin\": \"^v1.0\",\r\n    \"dravencms/location\": \"^v1.0\",\r\n    \"dravencms/user\": \"^v1.0\",\r\n    \"dravencms/file\": \"^v1.0\",\r\n    \"ipub/visual-paginator\": \"^v1.0\",\r\n    \"joseki/pdf-response\": \"^v3.1\",\r\n    \"o5/grido\": \"dev-master\",\r\n    \"janmarek/webloader\": \"dev-master\"\r\n  },\r\n  \"scripts\": {\r\n    \"post-install-cmd\": [\r\n      \"php vendor/dravencms/packager/bin/packager packager:sync\"\r\n    ],\r\n    \"post-update-cmd\": [\r\n      \"php vendor/dravencms/packager/bin/packager packager:sync\"\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nChecking composer.json: WARNING\r\nrequire.o5/grido : unbound version constraints (dev-master) should be avoided\r\nrequire.janmarek/webloader : unbound version constraints (dev-master) should be avoided\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com rate limit: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: FAIL\r\nMissing pubkey for tags verification\r\nMissing pubkey for dev verification\r\nRun composer self-update --update-keys to set them up\r\nChecking composer version: OK\r\nwww-data@ceskadatabaze:~/svetst\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer update\r\ncomposer install\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\nYour requirements could not be resolved to an installable set of packages.\r\n\r\n  Problem 1\r\n    - Installation request for dravencms/file ^v1.0 -> satisfiable by dravencms/file[v1.1].\r\n    - dravencms/file v1.1 requires dravencms/locale ^v1.0 -> satisfiable by dravencms/locale[v1.0, v1.0.1].\r\n    - dravencms/locale v1.0 requires dravencms/base ^v1.0 -> satisfiable by dravencms/base[v1.0.7].\r\n    - dravencms/locale v1.0.1 requires dravencms/base ^v1.0.4 -> satisfiable by dravencms/base[v1.0.7].\r\n    - Conclusion: don't install dravencms/base v1.0.7\r\n```\r\n\r\nAnd I expected this to happen:\r\nComposer version 1.5.6 2017-12-18 12:09:18\r\nInstall depedencies, this message is useless, i'm not able to find out what is wrong", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6959/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "schmunk42": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6972", "title": "composer does not fully check versions when changing repository URL", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n    \"name\": \"tobias/issue-composer-repo-url-downgrade\",\r\n    \"require\": {\r\n        \"dektrium/yii2-rbac\": \"^0.3.0\"\r\n    },\r\n    \"repositories\": {\r\n        \"rbac\": {\r\n            \"type\": \"vcs\",\r\n            \"url\": \"https://github.com/dmstr-forks/yii2-rbac.git\"\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n(You need https://github.com/fxpio/composer-asset-plugin or https://asset-packagist.org/ to reproduce - but the plugin or additional repo is not the cause for this issue)\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\n> composer diagnose\r\nChecking composer.json: WARNING\r\nNo license specified, it is recommended to do so. For closed-source software you may use \"proprietary\" as license.\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys:\r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: WARNING\r\nYou are not running the latest stable version, run `composer self-update` to update (1.5.2 => 1.5.6)\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer update -vv\r\n<remove repositories section>\r\ncomposer update -vv\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\n[...]\r\nAnalyzed 405 packages to resolve dependencies\r\nAnalyzed 3081 rules to resolve dependencies\r\nNothing to install or update\r\nWriting lock file\r\nGenerating autoload files\r\n```\r\n\r\nAnd I expected this to happen:\r\n\r\n```\r\n[...]\r\nDependency resolution completed in 0.006 seconds\r\nAnalyzed 404 packages to resolve dependencies\r\nAnalyzed 3078 rules to resolve dependencies\r\nPackage operations: 1 install, 0 updates, 0 removals\r\nInstalls: dektrium/yii2-rbac:0.3.0\r\n  - Installing dektrium/yii2-rbac (0.3.0): Loading from cache\r\n Extracting archive    REASON: Required by the root package: Install command rule (install dektrium/yii2-rbac 0.3.0)\r\n\r\nWriting lock file\r\nGenerating autoload files\r\n```\r\n\r\nWe're using a fork of `dektrium/yii2-rbac` which has a tag `0.3.999`, if we remove the custom fork-repo, composer should check only the versions in the original URL and downgrade to `0.3.0` in this case, but it sees the installed version - which should not be available at all now - as valid and stays on `0.3.999`.\r\n\r\nRelated to https://github.com/composer/composer/issues/3876#issue-64525212\r\n\r\nIt works, when I remove `vendor/dektrium/yii2-rbac` - there should be some additional checks to https://github.com/composer/composer/pull/3985 if a URL has been changed. Actually composer should treat the package as not available and force a full check of it's versions.\r\n \r\n[addon]\r\n\r\nClearing the cache has no effect.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "alcanardanangelo": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6970", "title": "zlib_decode() data error", "body": "I can use Composer before. But now I cannot do composer update. I can't even install composer. The error shows. I didn't change any configuration on my computer.\r\n\r\n\r\n````The \"https://getcomposer.org/versions\" file could not be downloaded: failed to open stream: HTTP request failed!\r\nThe \"https://getcomposer.org/download/1.5.6/composer.phar.sig\" file could not be downloaded: failed to open stream: HTTP request failed!\r\nFailed to decode zlib stream\r\n\r\nPlease help. Thanks!", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6970/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "EduenSarceno": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6968", "title": "exec command doesn't works correctly on windows", "body": "I don't know if I'm wrong but I think the command only adds COMPOSER_BIN_PATH to the path and after runs the program\r\n\r\ncomposer.json\r\n```\r\n{\r\n\t\"name\": \"vendor/foo\",\r\n\t\"description\": \"A foo package\",\r\n\t\"scripts\": {\r\n\t\t\"test\" : \"phpunit --version\"\r\n\t},\r\n\t\"require-dev\": {\r\n\t\t\"phpunit/phpunit\": \"^6.5\"\r\n\t}\r\n}\r\n```\r\n\r\nIf I try to execute phpunit, I get a error\r\n```\r\n> composer exec phpunit\r\nScript phpunit handling the __exec_command event returned with error code 2\r\n```\r\nBut if I run the script its works\r\n```\r\n> composer run-script test\r\n> phpunit --version\r\nPHPUnit 6.5.5 by Sebastian Bergmann and contributors.\r\n```\r\n\r\nI don't like do things like  `vendor\\bin\\phpunit --help` instead of  `composer exec -- phpunit --help`.\r\n\r\n**Note**  \r\nThe arguments are not passed correctly either\r\n\r\n```\r\n>composer exec -- phpunit --help\r\nUsage:\r\n  exec [options] [--] [<binary>] [<args>]...\r\n\r\nArguments:\r\n  binary                         The binary to run, e.g. phpunit\r\n  args                           Arguments to pass to the binary. Use -- to separate from composer arguments\r\n\r\nOptions:\r\n  -l, --list\r\n  -h, --help                     Display this help message\r\n  -q, --quiet                    Do not output any message\r\n  -V, --version                  Display this application version\r\n      --ansi                     Force ANSI output\r\n      --no-ansi                  Disable ANSI output\r\n  -n, --no-interaction           Do not ask any interactive question\r\n      --profile                  Display timing and memory usage information\r\n      --no-plugins               Whether to disable plugins.\r\n  -d, --working-dir=WORKING-DIR  If specified, use the given directory as working directory.\r\n  -v|vv|vvv, --verbose           Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug\r\n\r\nHelp:\r\n  Executes a vendored binary/script.\r\n```\r\nEverything that is after -- should be treated as an argument to the program not as a part of the composer command\r\n\r\nEnvironment:\r\n```\r\n>composer --version\r\nComposer version 1.5.6 2017-12-18 12:09:18\r\n```", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6968/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wouterj": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6967", "title": "[Docs] Explicitly mention not to use `apt-get install composer`", "body": "Since `symfony/thanks` is now required by Laravel and Symfony, there are quite some people looking for help because they get \"symfony/thanks depends on composer-plugin-api ^1.1, you are using 1.0\".\r\n\r\nIn all these cases (i.e. https://github.com/symfony/symfony-docs/issues/8938), it is because they are using Composer 1.0.0 beta2 installed through `apt-get`.\r\n\r\nCan the Composer community do something to avoid people using `apt-get` and installing this very old version of Composer? Can we show some alert, just like it used to do in beta phrase? Can we maybe explicitly tell in the docs *not* to use `apt-get`? Or, maybe simpler, can we make `apt-get` install a more recent version?\r\n\r\n*EDIT: Just released I probably created this issue in a very wrong repository. Sorry! If you want, I can reopen it in another repository.*", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6967/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sebastianblum": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6965", "title": "[RFC] Optional requirements ", "body": "Hello!\r\n\r\nI want to discuss if we can add support for optional dependencies to composer.\r\n\r\nProblem explained by the LiipImagineBundle:\r\nThe LiipImagineBundle:2.0 had an dependency to PHP-CS-FIXER\r\n```json\r\n{\r\n  \"require-dev\": {\r\n    \"friendsofphp/php-cs-fixer\": \"^1.0|^2.0\"\r\n  }\r\n}\r\n```\r\nand PHP-CS-Fixer doesn't support PHP 7.3 see https://github.com/FriendsOfPHP/PHP-CS-Fixer/blob/2.9/composer.json\r\n```json\r\n{\r\n  \"require\": {\r\n        \"php\": \"^5.6 || >=7.0 <7.3\"\r\n  }\r\n}\r\n```\r\nSee discussion https://github.com/FriendsOfPHP/PHP-CS-Fixer/issues/3323 - PHP-CS-FIXER will not support PHP 7.3 at the moment. So the nightly php travis builds fail because composer could not resolve the dependencies. LiipImagineBundle now removed PHP-CS-FIXER dependency\r\n at the moment.\r\n\r\nHow can we solve the problem in composer?\r\n\r\nOne solution will be to add support for optional requirements which can be installed or skipped.\r\nWhat do you think about this?\r\n\r\nRelated Issues (I found)\r\n- #6321 use case for conflict\r\n\r\nPossible syntax\r\n```json\r\n{\r\n  \"optional\": {\r\n    \"friendsofphp/php-cs-fixer\": \"^1.0|^2.0\"\r\n  }, \r\n  \"optional-dev\": {\r\n    \"friendsofphp/php-cs-fixer\": \"^1.0|^2.0\"\r\n  }\r\n}\r\n```\r\nor question mark before\r\n```json\r\n{\r\n  \"require-dev\": {\r\n    \"?friendsofphp/php-cs-fixer\": \"^1.0|^2.0\"\r\n  }\r\n}\r\n```\r\nor dash for skipped\r\n```json\r\n{\r\n  \"require-dev\": {\r\n    \"friendsofphp/php-cs-fixer\": \"^1.0|^2.0|-\"\r\n  }\r\n}\r\n```\r\n\r\n\r\nThank you very much\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6965/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Seldaek": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/015927d0b058eb5d31e098952f7f1ab9613cb959", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/1a6e3ee8c75579d179dd440b1a61d3c900372457", "message": "Show script description for custom commands in run-script --list, fixes #7009"}, {"url": "https://api.github.com/repos/composer/composer/commits/994bac0c153348c09d42cd77225c465c1b81e8e9", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/59fcb91912932b5f9acd2f6d9c774b72907ef31d", "message": "Merge pull request #6985 from nicolas-grekas/get-url-contents\n\nAdd RemoteFilesystem::getRemoteContents() extension point"}, {"url": "https://api.github.com/repos/composer/composer/commits/82b80a54513085e4c791e0671775341a459d197f", "message": "Merge pull request #6979 from nicolas-grekas/fix-ctrl-c\n\nFix CTRL+C handling during create-project"}, {"url": "https://api.github.com/repos/composer/composer/commits/4331b116248b70e2adac3eb6df106ef71132206a", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/188b3a35c8d2a2a32a23f18b6b628696cb0eeff6", "message": "Tweak license deprecation text to handle + more gracefully, fixes #6981"}, {"url": "https://api.github.com/repos/composer/composer/commits/9a443e6d0bf336e45951078b399c4d8cfcac4bcd", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/20699905abf2613d4d91c03e80ca2a7f9ab8f0f1", "message": "Update changelog"}, {"url": "https://api.github.com/repos/composer/composer/commits/74838790b55ef82cb557372a73321694103e402d", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/e6114b2ca7b2eb75920fd03957070045a1ac1bc1", "message": "Fix support for replacing dist refs in gitlab URLs and add support for gitlab/github enterprise too"}, {"url": "https://api.github.com/repos/composer/composer/commits/be040f8e3111b38c1e49ae5cd6b929dbf5c39045", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/ac9c7a50e927f402c4c95fe05eb4043263b6d0cb", "message": "Merge pull request #6976 from nicolas-grekas/fix-autoloader\n\nFix generated static map..."}, {"url": "https://api.github.com/repos/composer/composer/commits/4a7389f5b7070925a7fbaaaa99d2b961648ba5de", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/95d5e8dd947f4ec1402e96ddfcc8f6a7bb7bc0a6", "message": "Update changelog"}, {"url": "https://api.github.com/repos/composer/composer/commits/8c7b13e9beb7f82de9645f9d71f8c5204a0495fd", "message": "Update content hash"}, {"url": "https://api.github.com/repos/composer/composer/commits/8ff3a8bcc048b6d6d091ddbf0975b04f94fef016", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/5e223dae61b7b04ad4cf8361cb60ab76d07a63f8", "message": "Update jsonlint dep"}, {"url": "https://api.github.com/repos/composer/composer/commits/ebc3c7d0da6393b92611c2f2b3c7847faf661bb8", "message": "Merge pull request #6973 from nicolas-grekas/fix-autoloader\n\nFix BC of generated static map"}, {"url": "https://api.github.com/repos/composer/composer/commits/749b4c46b74f9702fc4f6abde6480fb6f0373ed6", "message": "Bump branch alias"}, {"url": "https://api.github.com/repos/composer/composer/commits/c962be2f4123434b4843b1d945724a633237ce00", "message": "Update changelog for 1.6.0"}, {"url": "https://api.github.com/repos/composer/composer/commits/882b82d542b45435bae1d95b33e225427950c59c", "message": "Add COMPOSER_MEMORY_LIMIT env var to force a given memory_limit, fixes #6931"}, {"url": "https://api.github.com/repos/composer/composer/commits/5cd0fef7ff75dbe32c06a8d36b4f837852a6d004", "message": "Upgrade to SPDX License 3.0 and handle deprecations more gracefully, fixes #6951"}, {"url": "https://api.github.com/repos/composer/composer/commits/ab8437ce06256109d10731f3baff3d513e93ad1f", "message": "Merge remote-tracking branch 'swumao/feature-6892'"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nicolas-grekas": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/5601f07bfadc2359c53f9fa92f96d5249120188d", "message": "Add RemoteFilesystem::getRemoteContents() extension point"}, {"url": "https://api.github.com/repos/composer/composer/commits/251a347efbae4dbedb5c45f1571265e0a8705230", "message": "Fix CTRL+C handling during create-project"}, {"url": "https://api.github.com/repos/composer/composer/commits/0c912d6eee60505333479c71e5708ce263ae65ae", "message": "Fix generated static map..."}, {"url": "https://api.github.com/repos/composer/composer/commits/ce70e0e9dd63e4f3fcdd0eb2d960873d160a3a2f", "message": "Fix BC of generated static map"}], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/3951", "title": "Concurrent git clone and downloads with React", "body": "This adds an optional event loop argument and promises as return values to the GitDownloader.\nThe Installer takes advantage of it to trigger several `git clone` and manage them concurrently.\nNo change is made to the behavior of the code when no event loop is used, so that tests still pass.\nThis could be the first step towards parallel downloads in composer: the other downloaders would need to be updated following the same principle, the GitDownloader also needs to be finished (only public repos can be managed by the loop for now).\nThe console output also would need to be handled differently.\nIf someone else likes the approach, help is welcomed for porting the other downloaders to use and return promises! (a PR on this PR anyone?).\nPHP 5.3 is not supported by React, but there is no blocker to change that.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "remicollet": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/b0fa2bd5e20b5300cdfe977678eea315e96df9a3", "message": "Fix dependency on seld/jsonlint 1.4\n\nAs deprecated flag is used."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zymsys": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/7011", "title": "Show reason for php version package mismatch due to config.platform", "body": "A couple of times I've run into a frustrating situation where a config.platform generated by the Symfony installer has specified a php 5 version and I've changed my require to php 7 without realizing the config.platform issue. That leaves me hunting for a version of php that isn't installed anywhere on my system. Using verbose or even very very verbose doesn't seem to help. \r\n\r\nI used xdebug to track it down and saw that the package knew what the problem really was in its description but it wasn't revealing this to the user. This patch exposes that information. The nested parens aren't pretty, but I think developers will be able to parse it.\r\n\r\nThe patch starts by determining the version in the same way it used to. Then it double checks that we have a package, and that it is a CompletePackage so that it has a description. If so it appends the description to the version information.\r\n\r\nI double checked it with phpcs and it complained about line lengths, but it also did this for much of the rest of the file.\r\n\r\nThe output looks like this:\r\n\r\n```\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\nYour requirements could not be resolved to an installable set of packages.\r\n\r\n  Problem 1\r\n    - This package requires php >=7.0.0 but your PHP version (5.6.0; Package overridden via config.platform (actual: 7.0.22)) does not satisfy that requirement.\r\n```", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tanarurkerem": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/7006", "title": "Update how-do-i-install-a-package-to-a-custom-path-for-my-framework.md", "body": "Title changed", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "carusogabriel": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6995", "title": "Use $strict param in functions that have it", "body": "Some functions, e.g. `in_array`, have a third param to enable strict comparison. With PHP-CS-Fixer `strict_param` rule, we can fix all of them :shipit:", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/6982", "title": "Fixes from PHPStan level 0", "body": "Some, not all, fixes found by running [`PHPStan`](https://github.com/phpstan/phpstan) at level 0:\r\n\r\nFile | Problem\r\n---- | ----\r\nsrc/Composer/DependencyResolver/Rule.php:56 | Access to an undefined property Composer\\DependencyResolver\\Rule::$job.\r\nsrc/Composer/Factory.php:549 | Class Composer\\Installer\\MetapackageInstaller does not have a constructor and must be instantiated without any parameters.\r\nsrc/Composer/Command/DiagnoseCommand.php:38 | Property Composer\\Command\\DiagnoseCommand::$rfs has unknown class Composer\\Command\\RemoteFileSystem as its type.\r\nsrc/Composer/Command/InitCommand.php:282 | Anonymous function has an unused use $self.\r\nsrc/Composer/Repository/RepositoryInterface.php:73 | Return typehint of method Composer\\Repository\\RepositoryInterface::search() has invalid type array.\r\nsrc/Composer/Package/Archiver/BaseExcludeFilter.php:78 | Parameter $lineParser of method Composer\\Package\\Archiver\\BaseExcludeFilter::parseLines() has invalid typehint type Composer\\Package\\Archiver\\callback.\r\nsrc/Composer/Installer/PluginInstaller.php: 37 | Constructor of class Composer\\Installer\\PluginInstaller has an unused parameter $type.\r\nsrc/Composer/Json/JsonManipulator.php:232 | Anonymous function has an unused use $name.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/6896", "title": "Add PHPUnit 6 support", "body": "I've added `PHPUnit 6` support to `Composer`. Changes:\r\n- Define mocks with fluent interface;\r\n- `setExpectedException` isn't available in version `6`, so I substitute to `@expectedException` and `@expectedExceptionMessage` notations. But, there are some tests that these expectations are variables, so, I created a method layer in `Composer\\TestCase` and extend those TestCases that need this method.\r\n\r\nOne question: why not extend all TestCases from `Composer\\TestCase`? I guess is easier for maintenance, isn't?", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wsandin": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6956", "title": "Fix for issue 6602 - warning when running composer as another user", "body": "Raising a warning if the current user doesn't match the initial ownership of the $home directory. \r\nNot sure how this works on let's say Windows, might have to add some extra checks for that.\r\n\r\nWould love some feedback on how I can improve this PR in order to merge into master.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "localheinz": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6942", "title": "Fix: Remove unused parameter and field", "body": "This PR\r\n\r\n* [x] removes an unused parameter and field from `Locker`\r\n\r\n\ud83d\udc81\u200d\u2642\ufe0f The instance of `RepositoryManager` passed in into its constructor is never used.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mbaynton": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6864", "title": "Proposed event on SolverProblemsException with power to trigger re-run.", "body": "So this is definitely not ready to actually merge yet, but @naderman suggested discussing PRs early, so here goes. Oh, in case there would otherwise be confusion, this is unrelated to my work on `replace`.\r\n\r\nThe problem this helps solve is enabling Drupal installations/updates for nontechie users without exceeding the resource limitations of a webserver environment; it's a huge pain point for Drupal right now that it isn't possible to do Composer-enabled installs/updates in a browser. The way it helps solve it is by allowing a plugin to initially restrict the `Pool` to a repository containing only one version of each required package, all of which are pre-selected to be compatible with each other; this should make the sat problem and number of modeled packages/decisions trivial/very fast in execution time/low in memory. For sites that only need things available from this special repository, a complete Composer run ought to work fine within the confines of a webserver environment. When the site does also have requirements from the wider world, the first solver run will fail, but it will fail fast. This PR would allow a plugin to then introduce packagist etc to the Pool and rerun the Solver. (I believe @thom8 has talked with some Composer maintainers about the possibility of running the solver on a remote \"solver as a service\" host; I've got a vague idea of also swapping out the standard solver for the remote one long-term when a full-scale dependency resolution is required.)\r\n\r\nSomething like this have a chance of going in?", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "am05mhz": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6751", "title": "adds 2 steps install script for windows users", "body": "just add a little convenience for windows users ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hboomsma": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6714", "title": "add gitlab-dist-format option", "body": "Add `gitlab-dist-format` configuration option for the `GitLabDriver`. It defaults to `zip` as is the current default. You can set it to `zip`, `tar.gz`, `tar` and `tar.bz2`.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kthbit": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6707", "title": "Teach fossil to use HTTP Basic and Fossil built-in authentication", "body": "Composer was unable to clone/pull from a Fossil repo that was protected by either HTTP Basic or Fossil  authentication. This patch attempts to fix that. Both (or either) authentications are stored in auth.json. HTTP Basic auth is specified as before, per domain. Fossil credentials are specified per remote repository, in case pulling from multiple remote repositories with different credentials for each.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "RobberPhex": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6683", "title": "fix gitlab repo config in composer.lock", "body": "1. When `attemptCloneFallback` use `generatePublicUrl` to get public_url, we cannot forget some gitlab instance doesn't support https. **So we get `scheme` from config.**\r\n2. When generate `composer.lock` file, we should use repo url *what user wrote* at `composer.json` , not we got from gitlab api.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Toflar": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6284", "title": "Improve memory usage a little by not creating new Link objects", "body": "I was able to shave off only a litte memory usage (about 2% on average) by this change.\r\nAt first I did not consider it to be worth discussing about because the improvements are not significant enough (well, a penny saved is a penny earned but still). However, I still decided to make the changes public because at the end of the day this is what open source is all about. Maybe someone can improve the impact even more based on my idea \ud83d\ude04 \r\n\r\nSo the idea behind it is that most `Rule` instances get a `$reasonData` assigned which mostly is an instance of `Link` or `CompletePackage`. While debugging a little, I noticed that even though a big amount of `Link` instances are actually of equal content, they are not the same (they do not share the same object hash). They are different objects because every `Package` creates its `Link` objects (`requires`,  `conflicts` etc.) when it is created. So the `Link` objects are not shared across memory.\r\nHence, I thought by making sure to not create them but instead reference to an already created one if it is the same should decrease memory usage. This seems to be true but I was expecting an even bigger impact. Now somebody can tell me maybe why the impact is not bigger or make it bigger based on my idea \ud83d\ude0b ", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "webflo": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6139", "title": "Test case for #6131", "body": "I think this is valid test case for #6131. Not 100% sure.\r\n\r\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "alcohol": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/5507", "title": "add a fixture for github issue #5505", "body": "not sure how to solve yet, or if it requires solving at all\n", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "stratdes": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/5360", "title": "ISSUE 3568 Show downloading package speed", "body": "- Added new class Download to represent the download progress\n- Added the util class DownloadUnitsFormatter to format Download class speed and ETA values\n- Some refactor on RemoteFileSystem\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hirak": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/5293", "title": "Parallel downloader", "body": "## Parallel Prefetcher\n\nporting from https://github.com/hirak/prestissimo\n- Fetching packages in parallel at `Composer\\Installer::doInstall()`\n- This is NOT replacement of `Composer\\Util\\RemoteFilesystem`.\n  - `repository.json` download in serial\n- If `!extension_loaded('curl')`, then fallback to RemoteFilesystem\n- If it fails to download, then fallback to RemoteFilesystem. (do not retry / do not show any prompt)\n### See also\n\nhttps://github.com/composer/composer/pull/2696\nhttps://github.com/composer/composer/issues/3930#issuecomment-193750145\n### Question\n\n`github-token`, `gitlab-token` options are still alive?\nhttps://github.com/composer/composer/blob/36665d791d8ec6520e31880dfe462bd2bf799132/src/Composer/Util/RemoteFilesystem.php#L235\nhttps://github.com/composer/composer/blob/36665d791d8ec6520e31880dfe462bd2bf799132/src/Composer/Util/RemoteFilesystem.php#L240\n\nI can't find any documentation about that options. In this P-R, I didn't implement it yet.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "curry684": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/4998", "title": "Removed inefficiency in the autoloader generation", "body": "This line was originally added for PHP 5.2 compatibility but that was dropped long ago, so no longer need to incur the handful of extra function calls on every autoloader init.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "aripringle": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/4210", "title": "add support for config inheritance", "body": "Refs #183. This is a refactoring of #1013, with attempts to address the comments in that thread.\n\nAll credit goes to @1stvamp for the original code.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "naderman": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/4163", "title": "[WIP] RepositorySet / Pool Split & Load only explicitly referenced package data", "body": "This is a fixed version of https://github.com/composer/composer/pull/3994\n\nTodo:\n- [ ] RepositorySetTest\n- [ ] don't use object state to construct pool in RepositorySet\n- [x] move request name collection logic into request - solver should take repo set\n- [ ] evaluate if RepositorySet and CompositeRepository should be merged\n- [ ] refactor policy to work with repositoryset in addition to pool\n- [ ] remove uses of small pools from installer\n- [ ] this should be empty: `grep -ri \"pool\" src/ | grep -v \"src/Composer/DependencyResolver\"`\n", "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/2898", "title": "[WIP] Extension installer", "body": "Supports PHP & HHVM.\n\nTodo:\n- [ ] Need to come up with a solution for ext-\\* packages actually being installable now, so extensions can be compiled automatically to satisfy dependencies on extensions.\n- [ ] Documentation\n- [ ] Use a different downloader to download binary builds from github releases for windows (or pecl for PHP)\n- [ ] Output information on configuring the server to include extension.so\n\nReplaces the earlier PR #498\n", "author_association": "OWNER"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/125833", "body": "I tend to agree with that\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/125833/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "fcastilloes": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/4036", "title": "Add support to interactive scripts defined in composer.json", "body": "This change should allow for interactive scripts defined in composer.json as requested in issue #3299 without breaking non-interactive scripts.\n\nAs far as I know, the Process component accepts both a stream or a string as input argument. I see no reason to pass a string, but the stdin is useful. Any reasons not to do it or something I didn't consider?\n\nI've run the test suite and introduces no errors.\n\nThanks.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pierrejoye": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/3897", "title": "draft support for Pickle in Composer", "body": "Draft support for Pickle (https://github.com/FriendsOfPHP/pickle) in Composer.\n\nSpent more time to dig composer code than actually implement that but at least it works to install exts from within a project.\n\nExample project and extension composer.json:\nhttps://gist.github.com/pierrejoye/1bbc2bdcec5887e60490\n\nIf you like to test with more extensions:\ngit  clone myext\ncd myext\npickle convert\n\nAdd the dep to your project. If you do not want to fork an ext, you can create a dep vs a zip file and use the artifact repository, it should work.\n\nStill many things to solve but at least there is something to play with now\n\nUpdate:\n\nAccording to our discussions, it is now a two steps process to install extensions, to make sure users understand that installing extensions may affect many projects:\n\nFirst, the usual command:\ncomposer install\n\ncomposer will tell you to run\ncomposer install --install-extensions\n\nif the project has extensions dependencies\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "frederikbosch": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/3608", "title": "Remove authentication credentials from git config file", "body": "When using private repositories, composer leaves authentication credentials in .git/config. This is undesired behaviour because credentials are potentially leaked. This PR removes credentials after fetching. It contains tests for download and update.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "padraic": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/2814", "title": "[WIP] Developer Package Signing", "body": "This PR is a work in progress. Expect changes and check the TODO list. Review/testing is welcome.\n\nThis pull request is intended to add support for developer-level package signing to Composer using openssl. It includes a \"create-keys\" command to generate an RSA private and public keys (the private key should be encrypted using a passphrase), an \"add-dev-key\" command which imports a private key and extracts the public key for distribution in a package within keys.json, and a \"sign\" command which assembles a manifest of files, their checksums, and lengths, and signs the manifest using a private key within manifest.json. This PR does not address any form of package or metadata signing by Packagist which is also required for repository-level security. This PR does not depend on SSL/TLS support.\n\nTODO:\n1. ADD support for Composer to cache keys.json data since it should only be populated on first encounter so that attacks to alter keys.json have a chance to be detected.\n2. ADD support for Composer to verify package signatures as part of its install/update routines.\n3. ADD verification status to install/update output.\n4. ADD composer command options to reject unverified packages (I'll make it optional but it's strongly suggested that this become enabled by default in time).\n\nYou can currently test sign packages using the following commands (the first three are only required to setup keys):\n\n```\nphp composer.phar create-keys --prefix=myUniquePrefix\n\nphp composer.phar add-dev-key ./path/to/myUniquePrefix-private.pem\n\nphp composer.phar sign-dev-keys ./path/to/myUniquePrefix-private.pem\n```\n\n```\nphp composer.phar sign ./path/to/myUniquePrefix-private.pem\n```\n\nThis should result in two new files: keys.json (used to distribute authorised public keys) and manifest.json (a signed listing of all package files, their SHA256 checksums and lengths).\n\nThe theory is to sign packages and commit keys/manifest changes as the FINAL step before tagging a release. If you make any other changes, or altered the tag after signing, then the signatures could never be verified by users.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "peteraba": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/2696", "title": "Curl transfer", "body": "Added curl fallback for data transfer. Moved hard coded stream context calls into separate transfer class. Created interface for transfer classes. Added tests.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ghost": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/composer/composer/issues/comments/3517632", "body": "I am having this issue while trying to install the Composer (commit 098ba8e5) dependencies. I think it can provide more background to understand the issue (seems related with the last @Seldaek [comment](https://github.com/composer/composer/issues/162#issuecomment-3201363))\n\n```\nvagrant@lucid64:/tmp/composer$ composer.phar --version\nComposer version 098ba8e\nvagrant@lucid64:/tmp/composer$ composer.phar install\nInstalling dependencies.\nSegmentation fault\nvagrant@lucid64:/tmp/composer$ composer.phar install\nInstalling dependencies.\nPHP Warning:  assert(): Assertion failed in phar:///usr/local/bin/composer.phar/src/Composer/DependencyResolver/Solver.php on line 2\nSegmentation fault\nvagrant@lucid64:/tmp/composer$ ls\nbin  composer.json  doc  LICENSE  phpunit.xml.dist  PORTING_INFO  README.md  src  tests  un.php  vendor\nvagrant@lucid64:/tmp/composer$ rm -rf vendor/\nvagrant@lucid64:/tmp/composer$ composer.phar install\nInstalling dependencies.\nPHP Warning:  assert(): Assertion failed in phar:///usr/local/bin/composer.phar/src/Composer/DependencyResolver/Solver.php on line 2\nSegmentation fault\n```\n\nNote the `require` key of `composer.json`:\n\n```\n\"require\": {\n    \"php\": \">=5.3.0\",\n    \"symfony/console\": \">2.0,<2.2-dev\",\n    \"symfony/finder\": \">2.0,<2.2-dev\",\n    \"symfony/process\": \">2.0,<2.2-dev\"\n},\n```\n\nThen I saw in Packagist that the Symfony components are available since the 2.0.4 release, and just changed one of the dependencies to be greater than 2.0.4:\n\n```\n\"require\": {\n    \"php\": \">=5.3.0\",\n    \"symfony/console\": \">2.0.4,<2.2-dev\",\n    \"symfony/finder\": \">2.0,<2.2-dev\",\n    \"symfony/process\": \">2.0,<2.2-dev\"\n},\n```\n\nIt partialy worked (it did not created the autoload files)!\n\n```\nvagrant@lucid64:/tmp/composer$ rm -rf composer.lock vendor/\nvagrant@lucid64:/tmp/composer$ composer.phar install\nInstalling dependencies.\nDownloading http://github.com/symfony/Process/zipball/96512471ac1481eef59051a26239e825105ddd1d to /tmp/composer/vendor/symfony/process/Symfony/Component/Process/aa301e02ac3e7461c1afa753ec3c1e60\nUnpacking archive\nCleaning up\nDownloading http://github.com/symfony/Finder/zipball/dd56fc9f1f0baa006d7491d5c17eb3e2dd8a066c to /tmp/composer/vendor/symfony/finder/Symfony/Component/Finder/e0a2d80a077d2d0f471b10f29be1f9b2\nUnpacking archive\nCleaning up\nDownloading http://github.com/symfony/Console/zipball/63af6eb3f342ac79f0ebbc3bfc59721e247cbb4c to /tmp/composer/vendor/symfony/console/Symfony/Component/Console/b40d67c9ca6f11df924d9c943b05b67f\nUnpacking archive\nCleaning up\nWriting lock file\nGenerating autoload files\nSegmentation fault\nvagrant@lucid64:/tmp/composer$ ls -a vendor/.composer/\n.  ..  installed.json\n```\n\nThen, I updated `composer.json` again:\n\n```\n\"require\": {\n    \"php\": \">=5.3.0\",\n    \"symfony/console\": \">2.0.4,<2.2-dev\",\n    \"symfony/finder\": \">2.0.4,<2.2-dev\",\n    \"symfony/process\": \">2.0.4,<2.2-dev\"\n},\n```\n\nAnd it finally worked, without segfaults:\n\n```\nvagrant@lucid64:/tmp/composer$ rm -rf composer.lock vendor/\nvagrant@lucid64:/tmp/composer$ composer.phar install\nInstalling dependencies.\nDownloading http://github.com/symfony/Process/zipball/96512471ac1481eef59051a26239e825105ddd1d to /tmp/composer/vendor/symfony/process/Symfony/Component/Process/ed4e7277155fbd8bae1f020ed0a183e3\nUnpacking archive\nCleaning up\nDownloading http://github.com/symfony/Finder/zipball/dd56fc9f1f0baa006d7491d5c17eb3e2dd8a066c to /tmp/composer/vendor/symfony/finder/Symfony/Component/Finder/dfa893b97922079460f7fd8163dddc98\nUnpacking archive\nCleaning up\nDownloading http://github.com/symfony/Console/zipball/63af6eb3f342ac79f0ebbc3bfc59721e247cbb4c to /tmp/composer/vendor/symfony/console/Symfony/Component/Console/2d5351c867fdf130ea823d63aeec5a4f\nUnpacking archive\nCleaning up\nWriting lock file\nGenerating autoload files\n```\n\nNote that I set the Symfony components to be greater than `>2.0.4`. Greater equal (`>=2.0.4`) segfaults also.\n\nBTW, PHP 5.3.2.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/3517632/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/3540567", "body": "@mpdude Yes, and seems irony Suhosin giving contribution to segfaults :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/3540567/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/6840068", "body": "how to fix it in a environnement where php.ini is not on dev's control ? \n\ni've tried php_flag apc.enable_cli 1 in .htaccess, same result. \n\nFatal error: include(): Cannot redeclare class composer\\command\\showcommand in phar:///data_path/composer.phar/vendor/composer/ClassLoader.php on line 150\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/6840068/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/5022153", "body": "I have a very slow connection and it would be wonderful to know the progress of git clones.  Git itself shows progress, but when composer clones a repo that is hidden.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/5022153/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/5022348", "body": "@stof, `---verbose` only shows that it's cloning, not the progress achieved so there is no way of knowing how fast or slow the clone is actually taking.\n\ne.g.\n\n```\nInstalling sensio/generator-bundle (dev-master)\n  - Package sensio/generator-bundle (dev-master)\n    Cloning 06d07e0514d310be8d5630bfd93637136991c30c\nCloning into 'C:\\xampp\\htdocs\\core2\\vendor/sensio/generator-bundle/Sensio/Bundle/GeneratorBundle'...\n```\n\nThat's it, no x%, no git clone output etc.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/5022348/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/6298953", "body": "I'm getting a similar error:\n\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 78 bytes) in phar:///<path to site>/composer.phar/src/Composer/DependencyResolver/Solver.php on line 169\n\nNote: have the latest update file.\n\nAny ideas?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/6298953/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/6327064", "body": "Thanks, it's working now.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/6327064/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4592997", "body": "Same here with\n\n```\n\"require\": {\n    \"php\": \">=5.3.2\",\n    \"symfony/framework-bundle\": \"2.*\",\n    \"symfony/twig-bundle\": \"2.*\",\n    \"twig/twig\": \"*\"\n},\n```\n\nworks fine after removing twig\n\n```\n\"require\": {\n    \"php\": \">=5.3.2\",\n    \"symfony/framework-bundle\": \"2.*\",\n    \"symfony/twig-bundle\": \"2.*\"\n},\n```\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4592997/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4605254", "body": "According to the docs, you are doing it wrong.\n\n\"Package\" type is used when repository does NOT have its own `composer.json` config file. In your case you should go with VCS type. For more information see VCS and Package chapters at http://getcomposer.org/doc/05-repositories.md\n\nHowever, from my experience you can still have some problems with private repos (see #482). If you get this working, you should help in #482 ;>\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4605254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4606676", "body": "After re-reading the docs at http://getcomposer.org/doc/05-repositories.md ... as I understand, the repo defined with VCS type should be picked up automatically. There is also such example in the docs.\n\nHowever the sentence \"When hosting your own package repository it is recommended to use a composer one.\" from \"Hosting your own\" chapter is confusing me. Is having own packages.json file _required_ or _recommended_ ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4606676/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4607166", "body": "> If you want to create a \"composer\" type repository, you must have a packages.json file.\n\nOf course. This is not what I meant.... Do I **have to** create composer repository (with \"packages.json\" file) in order to correctly define private repos as dependencies? Using VCS-type repository doesn't seem to work for me.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4607166/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4614428", "body": "@brikou `symfony/finder` is not a private repository.\n1. You need to use slash instead of colon between symfony and finder.\n2. Defining VCS repository for `symfony/finder` is not necessary as it is published in Packagist: http://packagist.org/packages/symfony/finder \n3. **The problem here is related to private repositories which are not (cannot be) published in Packagist.**\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4614428/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4624494", "body": "@Seldaek After your suggestion I changed 'vcs' to 'git' and used the following form:\n\n```\n\"repositories\": [\n    {\n        \"type\": \"git\",\n        \"url\": \"git@bitbucket.org:vendor/abcdeprivatebundle.git\"\n    }\n]\n```\n\nwhich gives the same error message. I have tried to debug the issue... Looks like the repository is downloaded (as autorization occurs and repository is saved in temporary dir - thanks @brikou for this info).\n\nBut, the error still occurs. Dumping the `$this->reasons` variable before https://github.com/composer/composer/blob/master/src/Composer/DependencyResolver/Problem.php#L84 line is not more helpful:\n\n```\nArray\n(\n    [a:4:{s:8:\"packages\";a:0:{}s:3:\"cmd\";s:7:\"install\";s:11:\"packageName\";s:27:\"vendor/abcde-private-bundle\";s:10:\"constraint\";O:47:\"Composer\\Package\\LinkConstraint\\MultiConstraint\":1:{s:14:\" * constraints\";a:0:{}}}] => Array\n        (\n            [rule] => \n            [job] => Array\n                (\n                    [packages] => Array\n                        (\n                        )\n\n                    [cmd] => install\n                    [packageName] => vendor/abcde-private-bundle\n                    [constraint] => Composer\\Package\\LinkConstraint\\MultiConstraint Object\n                        (\n                            [constraints:protected] => Array\n                                (\n                                )\n\n                        )\n\n                )\n\n        )\n\n)\n```\n\nAnyone willing to help?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4624494/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4629360", "body": "Ok, I found the issue. Will send a patch soon.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4629360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4629889", "body": "See #487\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4629889/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4636210", "body": "The following form work fine now (handled by `GitDriver`):\n\n```\n\"repositories\": [\n    {\n        \"type\": \"vcs\",\n        \"url\": \"git@bitbucket.org:vendor/repo.git\"\n    }\n]\n```\n\nPrivate repos specified as `https://bitbucket.org/vendor/repo.git` or `https://vendor@bitbucket.org/vendor/repo.git` does not work.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4636210/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/8442831", "body": "@Seldaek Given the information in #1092 about security of git protocol - can we increase the priority of this issue?\n\nSide note: when implementing HTTPS support to bitbucket recently added `github-protocols` config option could be reused.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/8442831/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/8443130", "body": "Wait... after reading the code of GitHubDriver & some docs about BitBucket API... `git@bitbucket.org:vendor/repo.git` is SSH not GIT protocol?\n\nOk, my bad - so this issue seems to deserve low priority :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/8443130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4871142", "body": "I found similar issue. After updating/recreating `packages.json` with Satis for 30+ private repos, some of my repos were missing.\n\nAs I found out this was because of local copy of repository which was not properly initialized (?). The repository in a temp directory had only `.git` directory (with objects and refs subdirectories) - nothing else.\n\nI am not sure what caused this. There was no error message. Maybe some internet connection problems or temporary http error like 503? If the cause of this can not be fixed - can we at least throw an exception ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4871142/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4896973", "body": "I can not reproduce the issue - it occured randomly. \n\nSatis is a separate issue which is fixed in a waiting PR. We also need to throw exception in Satis when required package was not found - either because of badly cloned git repo or because the package was defined without details about repository.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4896973/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/5240247", "body": "@Seldaek - since the major BC break has now occurred (where the `autoload.php` is located), maybe you could consider adding a non-hidden subdirectory for the 4 `autoload.php` dependencies?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/5240247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/5240485", "body": "@stof - \"is likely\" is probably a bit too strong, but one could just make \"composer-autoloader\" a protected key in the \"require\" schema. I'm only suggesting a non-hidden folder because this ticket is about the disadvantages of hidden folders? Unless it was only about the fact that the autoload.php was hidden - if that is the case, keep the `.composer` folder for the autoloader deps.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/5240485/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/5240807", "body": "@jalliot - see https://groups.google.com/forum/?fromgroups#!topic/composer-dev/fWIs3KocwoA\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/5240807/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/5240910", "body": "How about `-composer`, `~composer`, `composer_` or `composer_deps` and make it a protected key that cant be specified in composer.json\n\nBut why is a hidden dir for the dependencies of composer objectionable (i.e all except the autoload.php)?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/5240910/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/5013734", "body": "@stanlemon I don't think you can get the package repos to specify the vendor dir, but in the `require` statements, it would be good to be able to override the default `vendor-dir` settings.  I already discussed this with @Seldaek \n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/5013734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/5013812", "body": "@mvriel or what about a type called 'require-extra' which is defined by `vendor => array(version, path)`\n\ne.g.\n\n```\n    \"require-extra\": {\n        \"foo/bar\": [\"1.2.3\", \"vendor-dir\"],\n    }, \n```\n\nThis way it can truly work for anything.  There are other usecases for example system modules e.g. in Zikula or Drupal where modules sort of need to go in a special folder.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/5013812/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4949211", "body": "Also, in this case there is no error message & no validation if requirements could be solved.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4949211/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4949780", "body": "fixed description of the issue\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4949780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4950521", "body": "I cant as these are **private repos**. Description with steps to reproduce should be enough.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4950521/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/5405513", "body": "This bug still exists (tested today with composer in version d60188903d) but the steps to reproduce can be simplified:\n- main repo's composer.json has dependencies which are installed via php composer.phar install\n- new dependency XYZ is added to composer.json (XYZ dependency also contains subdependencies)\n- php composer.phar update\n\nend result:\n\nXYZ dependency is installed but required subdependencies of XYZ dependency are **NOT** installed\n\n@naderman @Seldaek ping - could you give this issue a higher priority? thanks.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/5405513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "stof": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/80944", "body": "you should remove this file\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/80944/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/124668", "body": "you should remove the extra empty line\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/124668/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/124670", "body": "you should add the help for the command too\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/124670/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/124671", "body": "it should be protected IMO\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/124671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/125737", "body": "is it really necessary to use the finder here ? The command will not be added often, and they will likely be only a few ones so registering them explicitly could be more readable and maintainable (like it is done in Doctrine btw)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/125737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/127420", "body": "the `piblic` keyword should be omitted for interface as they can only define public methods anyway\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/127420/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/127422", "body": "same here\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/127422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/133157", "body": "the class name is `JsonLoader`\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/133157/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/133158", "body": "why aliasing it ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/133158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139530", "body": "@everzet the type is still there\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139531", "body": "all these use statement should probably be removed as they are the only changes in the class\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139532", "body": "what is it for ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139532/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139533", "body": "these should probably be renamed to be more explicit\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139533/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139534", "body": "the last two are probably useless as there is no change in the class to use them\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139535", "body": "this change is wrong as the commands are added explicitly, not by using the Finder to search for them\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139535/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139536", "body": "we should be consistent between the different managers. The `DownloaderManager` uses `UnexpectedValueException` for the corresponding case.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139536/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139537", "body": "the property should maybe be renamed to be clearer for someone reading the code\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139537/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139539", "body": "same here than for other managers. Choose one of the 2 exceptions.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139539/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139543", "body": "I don't see what is shorter by aliasing it to a longer name than `Application` :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139543/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139550", "body": "@chEbba because the way to update package depends of the way it was downloaded. For instance, when installing the package with a `git clone`, updating it simply means fetching the changes with git.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "xaav": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/81575", "body": "Sorry; another side affect when squashing commits.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/81575/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "weaverryan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/126563", "body": "I agree also - was a bit of copy-and-paste, but I've simplified it now.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/126563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "yethee": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/133593", "body": "Here typo\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/133593/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "everzet": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/139538", "body": "To be cleaner/shorter :-)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139538/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139540", "body": "It's for lock. It's not implemented yet ;-)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139540/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139541", "body": "Yeah, it would. I've just tried to finish this big refactoring as fast as possible. We'll clean Composer with later PRs ;-)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139541/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139544", "body": "Yeah, `UnexpectedValueException` is Seldaek legacy. I kinda don't like it, because `InvalidArgumentException` provides more contextual info :-) We'll clean those things in later PRs\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139544/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139545", "body": "Agree.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139545/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "chEbba": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/139549", "body": "Why does downloader need to have update and remove methods? It's really strange for Downloader, as we have update and uninstall methods in Intaller.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139549/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}}, "4": {"c00ler123": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7021", "title": "Composer file could not be downloaded (404 not found)", "body": "I tyring to install Laravel\r\n\r\nOutput of `composer diagnose`:\r\n\r\nd:\\web>composer diag\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking HTTP proxy: OK\r\nChecking HTTP proxy support for request_fulluri: OK\r\nChecking HTTPS proxy support for request_fulluri: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys:\r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  ****\r\n723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  ****\r\n8C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\nComposer version: 1.6.2\r\nPHP version: 7.2.1\r\nPHP binary path: D:\\php-7.2.1-nts-Win32-VC15-x86\\php.exe\r\n\r\nWhen I run this command:\r\n\r\ncomposer global require \"laravel/installer\"\r\n\r\nI get the following output:\r\n\r\n [Composer\\Downloader\\TransportException]\r\n The \"https://packagist.org/p/symfony/console%2433f24f3dbe55cff57fe06a5fa93b\r\n a0bbe3ae3b259e2c5b7d051da0238769fa0f.json\" file could not be downloaded (HT\r\n TP/1.1 404 Not Found)\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vnagara": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7020", "title": "Segment fault and out of memory on installation", "body": "Hi,\r\nI was out of programming a while (about 2 years). Now I tried to up to date my sources and got versioning conflict on _composer install_. After resolving api I got new worse bug segment fault on php5.6 and 10Gb Memory leak on php7.1.\r\nHere my data:\r\n\r\nMy `composer.json`:\r\n\r\n```json\r\n{\r\n    \"require\": {\r\n        \"libra/libra-assets-installer\":     \"2.2.0\",\r\n        \"libra/twitter-bootstrap-assets\":   \"3.3.0\"\r\n    }\r\n}\r\n```\r\n\r\nOutput of `composer diagnose` (__php5.6__):\r\n\r\n```\r\nChecking composer.json: WARNING\r\nNo license specified, it is recommended to do so. For closed-source software you may use \"proprietary\" as license.\r\nrequire.libra/libra-assets-installer : exact version constraints (2.2.0) should be avoided if the package follows semantic versioning\r\nrequire.libra/twitter-bootstrap-assets : exact version constraints (3.3.0) should be avoided if the package follows semantic versioning\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: \r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\nComposer version: 1.6.2\r\nPHP version: 5.6.33-1+0~20180105151408.9+stretch~1.gbp0deeda\r\nPHP binary path: /usr/bin/php5.6\r\n```\r\nWhen I run this command:\r\n\r\n```\r\nphp5.6 /usr/bin/composer -vvv install\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nReading ./composer.json\r\nLoading config file /home/user/composer/config.json\r\nLoading config file /home/user/.composer/auth.json\r\nLoading config file ./composer.json\r\nChecked CA file /etc/ssl/certs/ca-certificates.crt: valid\r\nExecuting command (/var/www/tmp/b): git branch --no-color --no-abbrev -v\r\nExecuting command (/var/www/tmp/b): git describe --exact-match --tags\r\nExecuting command (/var/www/tmp/b): git log --pretty=\"%H\" -n1 HEAD\r\nExecuting command (/var/www/tmp/b): hg branch\r\nExecuting command (/var/www/tmp/b): fossil branch list\r\nExecuting command (/var/www/tmp/b): fossil tag list\r\nExecuting command (/var/www/tmp/b): svn info --xml\r\nFailed to initialize global composer: Composer could not find the config file: /home/user/.composer/composer.json\r\nTo initialize a project, please create a composer.json file as described in the https://getcomposer.org/ \"Getting Started\" section\r\nReading /var/www/tmp/b/vendor/composer/installed.json\r\nRunning 1.6.2 (2018-01-05 15:28:41) with PHP 5.6.33-1+0~20180105151408.9+stretch~1.gbp0deeda on Linux / 4.9.0-5-amd64\r\nLoading composer repositories with package information\r\nDownloading https://packagist.org/packages.json\r\nWriting /home/user/.composer/cache/repo/https---packagist.org/packages.json into cache\r\nUpdating dependencies (including require-dev)\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2013.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2014.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2015.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2016.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2017.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2017-04.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2017-07.json from cache\r\nDownloading http://packagist.org/p/provider-2017-10%247fe61c2bcc3ee23f172c498bd8cf2f9a46ac2020b1bb656936850c57a091d417.json\r\nWriting /home/user/.composer/cache/repo/https---packagist.org/p-provider-2017-10.json into cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2018-01.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-archived.json from cache\r\nDownloading http://packagist.org/p/provider-latest%24a07e2c01b6005319524ed8cd28c942abb11d3a2bb7078410f77a3fc9d082b65e.json\r\nWriting /home/user/.composer/cache/repo/https---packagist.org/p-provider-latest.json into cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/provider-libra$libra-assets-installer.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/provider-libra$twitter-bootstrap-assets.json from cache\r\nResolving dependencies through SAT\r\nDependency resolution completed in 0.001 seconds\r\nAnalyzed 72 packages to resolve dependencies\r\nAnalyzed 61 rules to resolve dependencies\r\nPackage operations: 1 install, 0 updates, 0 removals\r\nInstalls: libra/twitter-bootstrap-assets:3.3.0\r\nSegmentation fault\r\n\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\nphp7.1 /usr/bin/composer install\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nReading ./composer.json\r\nLoading config file /home/user/.composer/config.json\r\nLoading config file /home/user/.composer/auth.json\r\nLoading config file ./composer.json\r\nChecked CA file /etc/ssl/certs/ca-certificates.crt: valid\r\nExecuting command (/var/www/tmp/b): git branch --no-color --no-abbrev -v\r\nExecuting command (/var/www/tmp/b): git describe --exact-match --tags\r\nExecuting command (/var/www/tmp/b): git log --pretty=\"%H\" -n1 HEAD\r\nExecuting command (/var/www/tmp/b): hg branch\r\nExecuting command (/var/www/tmp/b): fossil branch list\r\nExecuting command (/var/www/tmp/b): fossil tag list\r\nExecuting command (/var/www/tmp/b): svn info --xml\r\nFailed to initialize global composer: Composer could not find the config file: /home/user/.composer/composer.json\r\nTo initialize a project, please create a composer.json file as described in the https://getcomposer.org/ \"Getting Started\" section\r\nReading /var/www/tmp/b/vendor/composer/installed.json\r\nRunning 1.6.2 (2018-01-05 15:28:41) with PHP 7.1.13-1+0~20180105151623.14+stretch~1.gbp1086fa on Linux / 4.9.0-5-amd64\r\nLoading composer repositories with package information\r\nDownloading https://packagist.org/packages.json\r\nWriting /home/user/.composer/cache/repo/https---packagist.org/packages.json into cache\r\nUpdating dependencies (including require-dev)\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2013.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2014.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2015.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2016.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2017.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2017-04.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2017-07.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2017-10.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-2018-01.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/p-provider-archived.json from cache\r\nDownloading http://packagist.org/p/provider-latest%24b0107e8bd42cbfbf0f3dc7caf6776e71801478f60931c6d8f1aad89b4cd1e98d.json\r\nWriting /home/user/.composer/cache/repo/https---packagist.org/p-provider-latest.json into cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/provider-libra$libra-assets-installer.json from cache\r\nReading /home/user/.composer/cache/repo/https---packagist.org/provider-libra$twitter-bootstrap-assets.json from cache\r\nResolving dependencies through SAT\r\nDependency resolution completed in 0.000 seconds\r\nAnalyzed 70 packages to resolve dependencies\r\nAnalyzed 59 rules to resolve dependencies\r\nPackage operations: 1 install, 0 updates, 0 removals\r\nInstalls: libra/twitter-bootstrap-assets:3.3.0\r\n\r\nmmap() failed: [12] Cannot allocate memory\r\n\r\nmmap() failed: [12] Cannot allocate memory\r\nPHP Fatal error:  Out of memory (allocated 13529776128) (tried to allocate 262144 bytes) in phar:///usr/bin/composer/src/Composer/Installer/LibraryInstaller.php on line 173\r\n\r\nFatal error: Out of memory (allocated 13529776128) (tried to allocate 262144 bytes) in phar:///usr/bin/composer/src/Composer/Installer/LibraryInstaller.php on line 173\r\n\r\nmmap() failed: [12] Cannot allocate memory\r\n\r\nmmap() failed: [12] Cannot allocate memory\r\nPHP Fatal error:  Out of memory (allocated 13529776128) (tried to allocate 262144 bytes) in Unknown on line 0\r\n\r\nFatal error: Out of memory (allocated 13529776128) (tried to allocate 262144 bytes) in Unknown on line 0\r\n\r\n(Consumed all my memory what is more than 12Gb).\r\n```\r\n\r\nAnd I expected this to happen:\r\n\r\nTo avoid segment fault. \r\nTo stop unlimited memory allocation.\r\n\r\nComposer version __1.0.0-alpha11__ works without errors. Next one fails.\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7020/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rickselby": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7018", "title": "--no-dev installs package replaced by dev requirement, not original requirement", "body": "My `composer.json`:\r\n\r\n_This is a simplified version of the issue I'm seeing. In the real case, my `require-dev` contains `\"graham-campbell/testbench\": \"^4.0\"`; its dependencies eventually require `laravel/framework`, which causes the issue. Both setups give the same results._\r\n\r\n```json\r\n{\r\n    \"require\": {\r\n        \"illuminate/contracts\": \"~5.5.0\"\r\n    },\r\n    \"require-dev\": {\r\n        \"laravel/framework\": \"~5.5.0\"\r\n    }\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nChecking composer.json: WARNING\r\nNo license specified, it is recommended to do so. For closed-source software you may use \"proprietary\" as license.\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: \r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\nComposer version: 1.6.2\r\nPHP version: 7.0.22-0ubuntu0.16.04.1\r\nPHP binary path: /usr/bin/php7.0\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer install --no-dev\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nLoading composer repositories with package information\r\nUpdating dependencies\r\nPackage operations: 30 installs, 0 updates, 0 removals\r\n...<snip>...\r\n  - Installing laravel/framework (v5.5.31): Downloading (100%)         \r\nWriting lock file\r\nGenerating autoload files\r\n```\r\n\r\nAnd I expected this to happen:\r\n\r\n```\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\nPackage operations: 3 installs, 0 updates, 0 removals\r\n...<snip>...\r\n  - Installing illuminate/contracts (v5.5.28): Downloading (100%)         \r\nWriting lock file\r\nGenerating autoload files\r\n```\r\n\r\n`laravel/framework`'s composer.json contains the following:\r\n```\r\n\"replace\": {\r\n   ...\r\n   \"illuminate/contracts\": \"self.version\",\r\n   ...\r\n}\r\n```\r\n\r\nI've read through the numerous issues relating to updating requiring require-dev to be solvable (#5224 etc), and that require-dev is parsed even when --no-dev is specified, so I'm not sure if anything can be done here, but thought it best to raise this case.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7018/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nadar": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7017", "title": "Composer TestCase", "body": "We have built a composer based open source CMS and Admin UI (https://luya.io), therefore we have made a composer plugin to track the packages from our \"type\". In order to test (phpunit) the composer plugin, we could not found any useful documentation, so where looking how you did => https://github.com/composer/composer/blob/master/tests/Composer/TestCase.php. \r\n\r\nSo we have used the TestCase class to test our own plugin, sadly due to this comment `https://github.com/composer/composer/commit/b656973a86c9f4793f45bd5fa68410878bb5acc3#comments` the test files are no longer shipped into the vendor folder.\r\n\r\nComposer is the future, so more plugins will follow, we need tools to test those plugins.\r\n\r\nSo my question is:\r\n\r\n1. Why not adding the test files for other developers to? (re add the `tests` folder)\r\n2. Or provide a basic TestCase for developers which makes it easy to test the plugin, like a composer testsuite?", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7017/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rabin999": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7012", "title": "while installing package through composer it require too much time to install and update too, i am using in laravel project ", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n    \"name\": \"laravel/laravel\",\r\n    \"description\": \"The Laravel Framework.\",\r\n    \"keywords\": [\"framework\", \"laravel\"],\r\n    \"license\": \"MIT\",\r\n    \"type\": \"project\",\r\n    \"require\": {\r\n        \"php\": \">=7.0.0\",\r\n        \"fideloper/proxy\": \"~3.3\",\r\n        \"laravel/framework\": \"5.5.*\",\r\n        \"laravel/tinker\": \"~1.0\"\r\n    },\r\n    \"require-dev\": {\r\n        \"filp/whoops\": \"~2.0\",\r\n        \"fzaninotto/faker\": \"~1.4\",\r\n        \"mockery/mockery\": \"~1.0\",\r\n        \"phpunit/phpunit\": \"~6.0\",\r\n        \"predis/predis\": \"^1.1\"\r\n    },\r\n    \"autoload\": {\r\n        \"classmap\": [\r\n            \"database/seeds\",\r\n            \"database/factories\"\r\n        ],\r\n        \"psr-4\": {\r\n            \"App\\\\\": \"app/\"\r\n        }\r\n    },\r\n    \"autoload-dev\": {\r\n        \"psr-4\": {\r\n            \"Tests\\\\\": \"tests/\"\r\n        }\r\n    },\r\n    \"extra\": {\r\n        \"laravel\": {\r\n            \"dont-discover\": [\r\n            ]\r\n        }\r\n    },\r\n    \"scripts\": {\r\n        \"post-root-package-install\": [\r\n            \"@php -r \\\"file_exists('.env') || copy('.env.example', '.env');\\\"\"\r\n        ],\r\n        \"post-create-project-cmd\": [\r\n            \"@php artisan key:generate\"\r\n        ],\r\n        \"post-autoload-dump\": [\r\n            \"Illuminate\\\\Foundation\\\\ComposerScripts::postAutoloadDump\",\r\n            \"@php artisan package:discover\"\r\n        ]\r\n    },\r\n    \"config\": {\r\n        \"preferred-install\": \"dist\",\r\n        \"sort-packages\": true,\r\n        \"optimize-autoloader\": true\r\n    }\r\n}\r\n\r\n```\r\n\r\nWhen I run command require or update on package, at least it took 15-18 min for small changes :(\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7012/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mhujer": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7010", "title": "composer validate show report scripts-descriptions for non-existent scripts", "body": "My `composer.json` (note the _typo_ in the first item in `scripts-descriptions`):\r\n\r\n```json\r\n  \"scripts\": {\r\n    \"test\": \"phpunit\",\r\n    \"phpcs\": \"phpcs --standard=PSR2 src\"\r\n  },\r\n  \"scripts-descriptions\": {\r\n    \"phpcsxxx\": \"Checks that the application code conforms to coding standard\",\r\n    \"test\": \"Launches the preconfigured PHPUnit\"\r\n  }\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nComposer version: 1.6.2\r\nPHP version: 7.1.12\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer validate --strict\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\n./composer.json is valid\r\n```\r\n\r\nAnd I expected this to happen:\r\n```\r\nWarning: Description for non-existent script \"phpcsxxx\" found in \"scripts-descriptions\"\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7010/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/7019", "title": "Validation warns if script description for nonexistent script is present", "body": "Fixes #7010", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "logig": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7007", "title": "`composer update` not work at local repo. The 1.4.x version used to work.", "body": "My `operating System`: Windows 10\r\nMy `config.json`:\r\n\r\n```json\r\n{\r\n    \"config\": {\r\n        \"optimize-autoloader\": true,\r\n        \"preferred-install\": \"dist\"\r\n    },\r\n    \"repositories\": {\r\n        \"packagist\": {\r\n            \"type\": \"composer\",\r\n            \"url\": \"https://packagist.phpcomposer.com\"\r\n        },\r\n        \"local\": {\r\n            \"type\": \"path\",\r\n            \"url\": \"D:/logig/*\",\r\n            \"options\": {\r\n                \"symlink\": true\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\n$ composer diagnose\r\nChecking composer.json: WARNING\r\nrequire.logig/wp-notice : unbound version constraints (dev-master) should be avoided\r\nrequire.logig/wp-admin-ui : unbound version constraints (dev-master) should be avoided\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys:\r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\nComposer version: 1.6.2\r\nPHP version: 7.1.1\r\nPHP binary path: D:\\Nginx\\php\\php.exe\r\n\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer update\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\n$ composer update\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\nNothing to install or update\r\nGenerating optimized autoload files\r\n\r\n```\r\nor sometimes:\r\n\r\n```\r\n$ composer update\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\nPackage operations: 0 installs, 1 update, 0 removals\r\n  - Removing junction for logig/wp-admin-ui (dev-master)\r\n\r\n\r\n  [Symfony\\Component\\Filesystem\\Exception\\IOException]\r\n  D:\\logig\\wordpress.local\\wp-content\\plugins\\mayun-oss-support\\vendor\\logig\\wp-admin-ui is not a junction and thus c\r\n  annot be removed as one\r\n\r\n```\r\n\r\nAnd I expected this to happen:\r\nUpdate the namespace autoload data which changed in my local repo's composer.json\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7007/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "staabm": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7004", "title": "svn log command misses credentials", "body": "we are running in the situation that composer tries to run a `svn log` command, and this doesnt succeed because of missing credentials.\r\n\r\nhaving a closer look at the code\r\n\r\nhttps://github.com/composer/composer/blob/994bac0c153348c09d42cd77225c465c1b81e8e9/src/Composer/Downloader/SvnDownloader.php#L173-L184\r\n\r\nreveals that this command is not executed using the `SvnUtil` which would otherwise provide this authentication stuff.\r\n\r\nwe see errors like\r\n\r\n```\r\n[localhost] < [error]\u2002\u2002 - Updating complex/portallib dev-trunk (/trunk/@8668 => /trunk/@8769):\r\n[localhost] < [error]\u2002\u2002Checking out /trunk/@8769\r\n[localhost] < [error] At revision 8769.\r\n[localhost] < [error]\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\r\n[localhost] < [error]\u2002\u2002 [RuntimeException]\r\n[localhost] < [error]\u2002\u2002 Failed to execute svn log -r8668:8769 --incremental\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\r\n[localhost] < [error]\u2002\u2002 svn: E170013: Unable to connect to a repository at URL https://xyz.com/svn/myproject/portallib/trunk\u2002\u2002\r\n[localhost] < [error]\u2002\u2002 svn: E215004: No more credentials or we tried too many times.\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\r\n[localhost] < [error]\u2002\u2002 Authentication failed\r\n[localhost] < [error] Exception trace:\r\n[localhost] < [error]\u2002\u2002() at phar:///usr/local/bin/composer/src/Composer/Downloader/SvnDownloader.php:174\r\n[localhost] < [error]\u2002\u2002Composer\\Downloader\\SvnDownloader->getCommitLogs() at phar:///usr/local/bin/composer/src/Composer/Downloader/VcsDownloader.php:167\r\n[localhost] < [error]\u2002\u2002Composer\\Downloader\\VcsDownloader->update() at phar:///usr/local/bin/composer/src/Composer/Downloader/DownloadManager.php:268\r\n[localhost] < [error]\u2002\u2002Composer\\Downloader\\DownloadManager->update() at phar:///usr/local/bin/composer/src/Composer/Installer/LibraryInstaller.php:207\r\n[localhost] < [error]\u2002\u2002Composer\\Installer\\LibraryInstaller->updateCode() at phar:///usr/local/bin/composer/src/Composer/Installer/LibraryInstaller.php:109\r\n[localhost] < [error]\u2002\u2002Composer\\Installer\\LibraryInstaller->update() at phar:///usr/local/bin/composer/src/Composer/Installer/InstallationManager.php:193\r\n[localhost] < [error]\u2002\u2002Composer\\Installer\\InstallationManager->update() at phar:///usr/local/bin/composer/src/Composer/Installer/InstallationManager.php:160\r\n[localhost] < [error]\u2002\u2002Composer\\Installer\\InstallationManager->execute() at phar:///usr/local/bin/composer/src/Composer/Installer.php:587\r\n[localhost] < [error]\u2002\u2002Composer\\Installer->doInstall() at phar:///usr/local/bin/composer/src/Composer/Installer.php:226\r\n[localhost] < [error]\u2002\u2002Composer\\Installer->run() at phar:///usr/local/bin/composer/src/Composer/Command/InstallCommand.php:119\r\n[localhost] < [error]\u2002\u2002Composer\\Command\\InstallCommand->execute() at phar:///usr/local/bin/composer/vendor/symfony/console/Command/Command.php:266\r\n[localhost] < [error]\u2002\u2002Symfony\\Component\\Console\\Command\\Command->run() at phar:///usr/local/bin/composer/vendor/symfony/console/Application.php:861\r\n[localhost] < [error]\u2002\u2002Symfony\\Component\\Console\\Application->doRunCommand() at phar:///usr/local/bin/composer/vendor/symfony/console/Application.php:208\r\n[localhost] < [error]\u2002\u2002Symfony\\Component\\Console\\Application->doRun() at phar:///usr/local/bin/composer/src/Composer/Console/Application.php:245\r\n[localhost] < [error]\u2002\u2002Composer\\Console\\Application->doRun() at phar:///usr/local/bin/composer/vendor/symfony/console/Application.php:127\r\n[localhost] < [error]\u2002\u2002Symfony\\Component\\Console\\Application->run() at phar:///usr/local/bin/composer/src/Composer/Console/Application.php:100\r\n[localhost] < [error]\u2002\u2002Composer\\Console\\Application->run() at phar:///usr/local/bin/composer/bin/composer:54\r\n[localhost] < [error]\u2002\u2002require() at /usr/local/bin/composer:24\r\n[localhost] < [error] install [--prefer-source] [--prefer-dist] [--dry-run] [--dev] [--no-dev] [--no-custom-installers] [--no-autoloader] [--no-scripts] [--no-progress] [--no-suggest] [-v|vv|vvv|--verbose] [-o|--optimize-autoloader] [-a|--classmap-authoritative] [--apcu-autoloader] [--ignore-platform-reqs] [--] [<packages>]...\r\n```", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/7015", "title": "Mention that also a antivirus software might corrupt file contents", "body": "The \"possible man-in-the-middle attack\" examples seems a bit over aggressive/dramatic.\r\n\r\nIn my experience most of the time bad/aggresive antivirus/firewall/content-filter applications/appliances are to blame.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/7005", "title": "Pass auth credentials to svn log while retrieving commit logs", "body": "Fixes https://github.com/composer/composer/issues/7004", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ncomer": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7003", "title": "could this apporoach will be more useful to optimize with apcu ", "body": "since  i run the command  \"dump-autoload -o --apcu\" to improve the boot speed of laravel,\r\ni got a big autoload_static file which have 4k lines code.\r\nThen i found   this code block within auloload_real.php:\r\nif ($useStaticLoader) {\r\n      require_once __DIR__ . '/autoload_static.php';  \r\n call_user_func(\\Composer\\Autoload\\ComposerStaticInitb6642ee553ca64f76f58aeb2231d582d::getInitializer($loader));\r\n}\r\n,when run a xhprof, load::composer/autoload_static.php rank No 1(about 11,702 \u00b5s in my case).\r\n\r\nWhat i think is: since apcu can be used for cache,and an obj type can directly  be stored in,\r\nthen i can modify above code like this:\r\n1.autoload_static .php@getInitializer\r\nadd \r\n$loader->f = ComposerStaticInitb6642ee553ca64f76f58aeb2231d582d::$files;\r\n2.auloload_real.php\r\n$loaderApc = apcu_fetch('cloader', $hit);\r\n            if (!$hit){\r\n                require_once __DIR__ . '/autoload_static.php';\r\n\r\n                call_user_func(\\Composer\\Autoload\\ComposerStaticInitb6642ee553ca64f76f58aeb2231d582d::getInitializer($loader));\r\n                apcu_store('cloader', clone $loader);\r\n            }else{\r\n                $loader = $loaderApc;\r\n            }\r\nanother place:\r\nif ($useStaticLoader) {\r\n            $includeFiles = $loader->f;\r\n        }\r\n\r\nI do not have a overall composer source code's reading, but this seems  work,\r\nWill this ok and be achieved further or am i wrong with something..  1st post,sorry for possiable mis", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7003/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "apfelbox": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7002", "title": "Option to always remove VCS on `create-project`?", "body": "Hi \ud83d\udc4b ,\r\n\r\nI am currently in the process of researching a possible fix for https://github.com/symfony/flex/issues/285.\r\n\r\nThe desired behaviour is for the symfony skeleton installation to just always remove the VCS directory and don't ask in the CLI for it.\r\n\r\nCurrently this is implemented that Symfony Flex just completely disables interactivity in IO, so that the call to `->askConfirmation()` [here](https://github.com/composer/composer/blob/994bac0c153348c09d42cd77225c465c1b81e8e9/src/Composer/Command/CreateProjectCommand.php#L201) just [returns the default value](https://github.com/symfony/console/blob/bf56f79b8604e4dd32c236048606c507e9dbbcd3/Helper/QuestionHelper.php#L55) (`true`).\r\n\r\nUnfortunately that also kills all subsequent interactive calls.\r\n\r\nAs I read the code:\r\nhttps://github.com/composer/composer/blob/master/src/Composer/Command/CreateProjectCommand.php#L176-L202\r\n\r\nthere currently is no way to just disable interactivity for the one call to `askConfirmation()`.\r\nIt's always either all scripts + the \"delete VCS dir\" one, or nothing.\r\n\r\nSo I would like to ask whether it would be possible to:\r\n\r\n* dispatch another event between `Installer` and `->askConfirmation()` so that Flex can hook specifically in to disable interactivity in this event and re-enable again in the event `POST_CREATE_PROJECT_CMD ` (something like `POST_ROOT_PACKAGE_DEPENDENCIES_INSTALL`).\r\n* provide a way to just always remove the VCS directory in a plugin (env var, some global setting or a callback somewhere).\r\n\r\nWhat do you think?", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7002/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "chrisEspira": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7001", "title": "The \"https://getcomposer.org/versions\" file could not be downloaded: failed to open stream: HTTP request failed!", "body": "HI,\r\nSomebody can help me solve this problem\r\ni cannot install composer\r\n when i try to install composer \r\nI get this error\r\nThe \"https://getcomposer.org/versions\" file could not be downloaded: failed to open stream: HTTP request failed!\r\n\r\ni need help please..........thx\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "victorynox": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7000", "title": "Wrong return value from Composer/IO/ConsoleIO::select() method", "body": "My `composer.json`:\r\n\r\n```json\r\n\"require\": {\r\n        \"rollun-com/rollun-installer \"^4.0\",\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: \r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\nComposer version: 1.6.2\r\nPHP version: 7.1.12-2+0~20171207160618.12+stretch~1.gbp5c91f3\r\nPHP binary path: /usr/bin/php7.1\r\n```\r\n\r\n```\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: \r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: WARNING\r\nYou are not running the latest stable version, run `composer self-update` to update (1.5.2 => 1.6.2)\r\n```\r\n\r\nWhen I run this method:\r\n\r\n[Composer\\IO\\ConsoleIO::select()](https://github.com/composer/composer/blob/master/src/Composer/IO/ConsoleIO.php#L283) \r\n```\r\n$data = $console->select(\r\n\"Select value\",\r\n[\r\n            \"Choice value 0\",\r\n            \"Choice value 1\",\r\n            \"Choice value 2\",\r\n],\r\n\"0,2\",\r\nfalse,\r\n'Value \"%s\" is invalid',\r\ntrue\r\n);\r\n```\r\n\r\nI get the following output in data:\r\nArray with **values** of the `\"$choices\"` array\r\n```\r\n[\r\n \"Choice value0\",\r\n \"Choice value2\"\r\n]\r\n```\r\n\r\nAnd I expected this to happen:\r\nArray with **keys** of the `\"$choices\"` array\r\n```\r\n[\r\n0,\r\n2\r\n]\r\n```\r\n\r\nWen I'm using composer version 1.5.2 and earlier, method [Composer\\IO\\ConsoleIO::select()](https://github.com/composer/composer/blob/master/src/Composer/IO/ConsoleIO.php#L283)\r\nreturn the array with **keys** of the `\"$choices\"` array ([as in the documentation ](https://getcomposer.org/apidoc/1.6.1/Composer/IO/ConsoleIO.html#method_select)), but in composer 1.6.2 i'm getting the array with **values** of the `\"$choices\"` array. \r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7000/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cweiske": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6998", "title": "\"remove\" output and exit status do not tell about failures/non-removages", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n    \"require\": {\r\n        \"laravel/framework\": \"^5.5\"\r\n    }\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nChecking composer.json: WARNING\r\nNo license specified, it is recommended to do so. For closed-source software you may use \"proprietary\" as license.\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: \r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\nComposer version: 1.6.2\r\nPHP version: 7.1.12-3+ubuntu16.04.1+deb.sury.org+1\r\nPHP binary path: /usr/bin/php7.1\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer remove swiftmailer/swiftmailer; echo $?\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nswiftmailer/swiftmailer is not required in your composer.json and has not been removed\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\nNothing to install or update\r\nGenerating autoload files\r\n```\r\n\r\nAnd I expected this to happen:\r\n\r\n1. A message telling me that swiftmailer was not removed (maybe with a reason: 'hard requirement by laravel/framework\")\r\n2. Exit code of non-0, because 0 means success.\r\n\r\nI want to *remove* a package, and composer did not do that - and failed to tell me that. The package I wanted to remove is still installed.\r\n\r\nI do know that \"composer remove\" currently only removes the entry from `composer.json` and then runs \"update\", but thats implementation detail. The user's intent when using \"remove\" is that a package shall be removed, and composer doesn't behave in a way the user would expect.\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6998/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "IndraGunawan": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6993", "title": "Could not find package when using composer repository that provide lazy providers", "body": "How to reproduce\r\n\r\n- use composer repositry that provide lazy providers like `packagist.com` or `pakethub.com` and add the repository config to `composer.json`\r\n- add `symfony/symfony` package to the composer repository provider. so when you access `packages.json` from the composer repository hosting you will get \r\n```json\r\n{\r\n\"packages\":{\"symfony/symfony\":{...}},\r\n\"search\":\"...\",\r\n\"providers-lazy-url\":\".../p/%package%.json\",\r\n\"mirrors\":[{...}]\r\n}\r\n```\r\n- run `composer require symfony/security-bundle -vvv` at project directory.\r\n\r\nHere the response\r\n```\r\n[InvalidArgumentException]\r\n  Could not find package symfony/security-bundle.\r\n```\r\n  ", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6993/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "verbruggenalex": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6992", "title": "\"tar\" type repository does not allow extraction of empty folder in tar.gz file", "body": "Because the tar.gz file contains an un-named folder \".\" the tar type extractor is not able to extract the contents of the folder. If the folder is named there is no problem.\r\n\r\n<details><summary>File: composer.json</summary>\r\n\r\n```json\r\n    \"require\": {\r\n        \"ec-europa/platform_dev\": \"~2.4.0\"\r\n    },\r\n    \"repositories\": [\r\n        {\r\n            \"type\": \"package\",\r\n            \"package\": {\r\n                \"name\": \"ec-europa/platform_dev\",\r\n                \"version\": \"2.4.63\",\r\n                \"type\": \"drupal-core\",\r\n                \"dist\": {\r\n                    \"url\": \"https://github.com/ec-europa/platform-dev/releases/download/2.4.63/platform-dev-2.4.63.tar.gz\",\r\n                    \"type\": \"tar\"\r\n                }\r\n            }\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n</details>\r\n\r\n<details><p><summary>Run: composer install</summary>\r\n\r\n```\r\n  [PharException]\r\n  Extraction from phar \"/home/verbral/platform-composer/build/28911af645fcdc4a61e64f6ef3e444ab.gz\" failed: Cannot extract \".\", internal error\r\n```\r\n</details></p>\r\n\r\nI know this is an edge case. But would it be possible to allow for un-named folders to be extracted? I'm not really in the mood to re-upload 500 packages to our repository.\r\n\r\nPossible solution provided on PHP documentation page:\r\nhttp://php.net/manual/en/phardata.extractto.php\r\n\r\n  ", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "NomanJaved": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6980", "title": "[RuntimeException] Could not scan for classes inside \"src/\" which does not appear to be a file nor a folder", "body": "I am have installed Xampp on Windows 10.\r\n\r\nI am facing the issue that the composer install not work properly in Laravel 5.5. How can I fix this issue. the error is mentioned in the title. If you guys require further detail I can provide it.\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6980/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Salamek": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6975", "title": "Fresh composer install/update and following composer update inconsistency", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n  \"name\": \"dravencms/dravencms\",\r\n  \"type\": \"library\",\r\n  \"description\": \"DravenCMS Content Management System\",\r\n  \"keywords\": [\r\n    \"dravencms\"\r\n  ],\r\n  \"license\": [\r\n    \"LGPL-3.0\"\r\n  ],\r\n  \"authors\": [\r\n    {\r\n      \"name\": \"Adam Schubert\"\r\n    }\r\n  ],\r\n  \"require-dev\": {\r\n    \"nette/tester\": \"@dev\"\r\n  },\r\n  \"repositories\": [\r\n    {\r\n      \"type\": \"vcs\",\r\n      \"url\": \"https://github.com/Salamek/gravatar\"\r\n    }\r\n  ],\r\n  \"require\": {\r\n    \"dravencms/packager\": \"~v1.0\",\r\n    \"dravencms/admin\": \"~v1.0.0\",\r\n    \"dravencms/issue\": \"~v1.0.1\",\r\n    \"dravencms/file\": \"~v1.1\",\r\n    \"o5/grido\": \"dev-master\",\r\n    \"janmarek/webloader\": \"dev-master\",\r\n    \"kdyby/doctrine\": \"v3.3.x-dev\"\r\n  },\r\n  \"scripts\": {\r\n    \"post-install-cmd\": [\r\n      \"php vendor/dravencms/packager/bin/packager packager:sync\"\r\n    ],\r\n    \"post-update-cmd\": [\r\n      \"php vendor/dravencms/packager/bin/packager packager:sync\"\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nChecking composer.json: WARNING\r\nLicense \"LGPL-3.0\" is a deprecated SPDX license identifier, use \"LGPL-3.0-only\" or \"LGPL-3.0-or-later\" instead\r\nrequire.o5/grido : unbound version constraints (dev-master) should be avoided\r\nrequire.janmarek/webloader : unbound version constraints (dev-master) should be avoided\r\nrequire.kdyby/doctrine : exact version constraints (v3.3.x-dev) should be avoided if the package follows semantic versioning\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: FAIL\r\nMissing pubkey for tags verification\r\nMissing pubkey for dev verification\r\nRun composer self-update --update-keys to set them up\r\nChecking composer version: OK\r\nComposer version: 1.6.0\r\nPHP version: 7.2.0\r\nPHP binary path: /usr/bin/php\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\nrm composer.lock\r\nrm -rf ./vendor\r\ncomposer update or composer install\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\n...Lot of installed stuff...\r\n- Installing dravencms/user (v1.0.2): Loading from cache  #<-- OLD VERSION\r\n...Lot of installed stuff...\r\n- Installing dravencms/admin (v1.0): Loading from cache #<-- OLD VERSION\r\n...Lot of installed stuff...\r\n```\r\n\r\nWhen I run this command (after first install or update):\r\n\r\n```\r\ncomposer update\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)         \r\nPackage operations: 0 installs, 2 updates, 0 removals\r\n  - Updating dravencms/user (v1.0.2 => v1.0.3): Loading from cache\r\n  - Updating dravencms/admin (v1.0 => v1.0.3): Loading from cache\r\nPackage symnedi/event-dispatcher is abandoned, you should avoid using it. Use contributte/event-dispatcher instead.\r\nPackage zenify/doctrine-migrations is abandoned, you should avoid using it. Use nettrine/migrations instead.\r\nWriting lock file\r\nGenerating autoload files\r\nocramius/package-versions:  Generating version class...\r\nocramius/package-versions: ...done generating version class\r\n> php vendor/dravencms/packager/bin/packager packager:sync\r\nPackages synced successfully\r\n```\r\n\r\nAnd I expected this to happen:\r\n\r\nWhen i run `composer install` or `composer update` in clean project (vendor and composer.lock deleted) i should get latest versions of all deps matching composer.json, second run of `composer update` should not do anything when no new version is released\r\n\r\nPS: I tried to delete ~/.cache/composer and i get same results as above but with downloads, so it is not cache related\r\nComposer version 1.6.0 2018-01-04 12:03:22\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6975/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/6959", "title": "Your requirements could not be resolved to an installable set of packages. But nothing is wrong", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n  \"name\": \"dravencms/dravencms\",\r\n  \"type\": \"library\",\r\n  \"description\": \"DravenCMS Content Management System\",\r\n  \"keywords\": [\r\n    \"dravencms\"\r\n  ],\r\n  \"license\": [\r\n    \"LGPL-3.0\"\r\n  ],\r\n  \"authors\": [\r\n    {\r\n      \"name\": \"Adam Schubert\"\r\n    }\r\n  ],\r\n  \"require-dev\": {\r\n    \"nette/tester\": \"@dev\"\r\n  },\r\n  \"require\": {\r\n    \"dravencms/packager\": \"^v1.0\",\r\n    \"dravencms/admin\": \"^v1.0\",\r\n    \"dravencms/location\": \"^v1.0\",\r\n    \"dravencms/user\": \"^v1.0\",\r\n    \"dravencms/file\": \"^v1.0\",\r\n    \"ipub/visual-paginator\": \"^v1.0\",\r\n    \"joseki/pdf-response\": \"^v3.1\",\r\n    \"o5/grido\": \"dev-master\",\r\n    \"janmarek/webloader\": \"dev-master\"\r\n  },\r\n  \"scripts\": {\r\n    \"post-install-cmd\": [\r\n      \"php vendor/dravencms/packager/bin/packager packager:sync\"\r\n    ],\r\n    \"post-update-cmd\": [\r\n      \"php vendor/dravencms/packager/bin/packager packager:sync\"\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nChecking composer.json: WARNING\r\nrequire.o5/grido : unbound version constraints (dev-master) should be avoided\r\nrequire.janmarek/webloader : unbound version constraints (dev-master) should be avoided\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com rate limit: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: FAIL\r\nMissing pubkey for tags verification\r\nMissing pubkey for dev verification\r\nRun composer self-update --update-keys to set them up\r\nChecking composer version: OK\r\nwww-data@ceskadatabaze:~/svetst\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer update\r\ncomposer install\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\nYour requirements could not be resolved to an installable set of packages.\r\n\r\n  Problem 1\r\n    - Installation request for dravencms/file ^v1.0 -> satisfiable by dravencms/file[v1.1].\r\n    - dravencms/file v1.1 requires dravencms/locale ^v1.0 -> satisfiable by dravencms/locale[v1.0, v1.0.1].\r\n    - dravencms/locale v1.0 requires dravencms/base ^v1.0 -> satisfiable by dravencms/base[v1.0.7].\r\n    - dravencms/locale v1.0.1 requires dravencms/base ^v1.0.4 -> satisfiable by dravencms/base[v1.0.7].\r\n    - Conclusion: don't install dravencms/base v1.0.7\r\n```\r\n\r\nAnd I expected this to happen:\r\nComposer version 1.5.6 2017-12-18 12:09:18\r\nInstall depedencies, this message is useless, i'm not able to find out what is wrong", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6959/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "schmunk42": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6972", "title": "composer does not fully check versions when changing repository URL", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n    \"name\": \"tobias/issue-composer-repo-url-downgrade\",\r\n    \"require\": {\r\n        \"dektrium/yii2-rbac\": \"^0.3.0\"\r\n    },\r\n    \"repositories\": {\r\n        \"rbac\": {\r\n            \"type\": \"vcs\",\r\n            \"url\": \"https://github.com/dmstr-forks/yii2-rbac.git\"\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n(You need https://github.com/fxpio/composer-asset-plugin or https://asset-packagist.org/ to reproduce - but the plugin or additional repo is not the cause for this issue)\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\n> composer diagnose\r\nChecking composer.json: WARNING\r\nNo license specified, it is recommended to do so. For closed-source software you may use \"proprietary\" as license.\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys:\r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: WARNING\r\nYou are not running the latest stable version, run `composer self-update` to update (1.5.2 => 1.5.6)\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer update -vv\r\n<remove repositories section>\r\ncomposer update -vv\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\n[...]\r\nAnalyzed 405 packages to resolve dependencies\r\nAnalyzed 3081 rules to resolve dependencies\r\nNothing to install or update\r\nWriting lock file\r\nGenerating autoload files\r\n```\r\n\r\nAnd I expected this to happen:\r\n\r\n```\r\n[...]\r\nDependency resolution completed in 0.006 seconds\r\nAnalyzed 404 packages to resolve dependencies\r\nAnalyzed 3078 rules to resolve dependencies\r\nPackage operations: 1 install, 0 updates, 0 removals\r\nInstalls: dektrium/yii2-rbac:0.3.0\r\n  - Installing dektrium/yii2-rbac (0.3.0): Loading from cache\r\n Extracting archive    REASON: Required by the root package: Install command rule (install dektrium/yii2-rbac 0.3.0)\r\n\r\nWriting lock file\r\nGenerating autoload files\r\n```\r\n\r\nWe're using a fork of `dektrium/yii2-rbac` which has a tag `0.3.999`, if we remove the custom fork-repo, composer should check only the versions in the original URL and downgrade to `0.3.0` in this case, but it sees the installed version - which should not be available at all now - as valid and stays on `0.3.999`.\r\n\r\nRelated to https://github.com/composer/composer/issues/3876#issue-64525212\r\n\r\nIt works, when I remove `vendor/dektrium/yii2-rbac` - there should be some additional checks to https://github.com/composer/composer/pull/3985 if a URL has been changed. Actually composer should treat the package as not available and force a full check of it's versions.\r\n \r\n[addon]\r\n\r\nClearing the cache has no effect.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "alcanardanangelo": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6970", "title": "zlib_decode() data error", "body": "I can use Composer before. But now I cannot do composer update. I can't even install composer. The error shows. I didn't change any configuration on my computer.\r\n\r\n\r\n````The \"https://getcomposer.org/versions\" file could not be downloaded: failed to open stream: HTTP request failed!\r\nThe \"https://getcomposer.org/download/1.5.6/composer.phar.sig\" file could not be downloaded: failed to open stream: HTTP request failed!\r\nFailed to decode zlib stream\r\n\r\nPlease help. Thanks!", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6970/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "EduenSarceno": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6968", "title": "exec command doesn't works correctly on windows", "body": "I don't know if I'm wrong but I think the command only adds COMPOSER_BIN_PATH to the path and after runs the program\r\n\r\ncomposer.json\r\n```\r\n{\r\n\t\"name\": \"vendor/foo\",\r\n\t\"description\": \"A foo package\",\r\n\t\"scripts\": {\r\n\t\t\"test\" : \"phpunit --version\"\r\n\t},\r\n\t\"require-dev\": {\r\n\t\t\"phpunit/phpunit\": \"^6.5\"\r\n\t}\r\n}\r\n```\r\n\r\nIf I try to execute phpunit, I get a error\r\n```\r\n> composer exec phpunit\r\nScript phpunit handling the __exec_command event returned with error code 2\r\n```\r\nBut if I run the script its works\r\n```\r\n> composer run-script test\r\n> phpunit --version\r\nPHPUnit 6.5.5 by Sebastian Bergmann and contributors.\r\n```\r\n\r\nI don't like do things like  `vendor\\bin\\phpunit --help` instead of  `composer exec -- phpunit --help`.\r\n\r\n**Note**  \r\nThe arguments are not passed correctly either\r\n\r\n```\r\n>composer exec -- phpunit --help\r\nUsage:\r\n  exec [options] [--] [<binary>] [<args>]...\r\n\r\nArguments:\r\n  binary                         The binary to run, e.g. phpunit\r\n  args                           Arguments to pass to the binary. Use -- to separate from composer arguments\r\n\r\nOptions:\r\n  -l, --list\r\n  -h, --help                     Display this help message\r\n  -q, --quiet                    Do not output any message\r\n  -V, --version                  Display this application version\r\n      --ansi                     Force ANSI output\r\n      --no-ansi                  Disable ANSI output\r\n  -n, --no-interaction           Do not ask any interactive question\r\n      --profile                  Display timing and memory usage information\r\n      --no-plugins               Whether to disable plugins.\r\n  -d, --working-dir=WORKING-DIR  If specified, use the given directory as working directory.\r\n  -v|vv|vvv, --verbose           Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug\r\n\r\nHelp:\r\n  Executes a vendored binary/script.\r\n```\r\nEverything that is after -- should be treated as an argument to the program not as a part of the composer command\r\n\r\nEnvironment:\r\n```\r\n>composer --version\r\nComposer version 1.5.6 2017-12-18 12:09:18\r\n```", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6968/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wouterj": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6967", "title": "[Docs] Explicitly mention not to use `apt-get install composer`", "body": "Since `symfony/thanks` is now required by Laravel and Symfony, there are quite some people looking for help because they get \"symfony/thanks depends on composer-plugin-api ^1.1, you are using 1.0\".\r\n\r\nIn all these cases (i.e. https://github.com/symfony/symfony-docs/issues/8938), it is because they are using Composer 1.0.0 beta2 installed through `apt-get`.\r\n\r\nCan the Composer community do something to avoid people using `apt-get` and installing this very old version of Composer? Can we show some alert, just like it used to do in beta phrase? Can we maybe explicitly tell in the docs *not* to use `apt-get`? Or, maybe simpler, can we make `apt-get` install a more recent version?\r\n\r\n*EDIT: Just released I probably created this issue in a very wrong repository. Sorry! If you want, I can reopen it in another repository.*", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6967/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sebastianblum": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6965", "title": "[RFC] Optional requirements ", "body": "Hello!\r\n\r\nI want to discuss if we can add support for optional dependencies to composer.\r\n\r\nProblem explained by the LiipImagineBundle:\r\nThe LiipImagineBundle:2.0 had an dependency to PHP-CS-FIXER\r\n```json\r\n{\r\n  \"require-dev\": {\r\n    \"friendsofphp/php-cs-fixer\": \"^1.0|^2.0\"\r\n  }\r\n}\r\n```\r\nand PHP-CS-Fixer doesn't support PHP 7.3 see https://github.com/FriendsOfPHP/PHP-CS-Fixer/blob/2.9/composer.json\r\n```json\r\n{\r\n  \"require\": {\r\n        \"php\": \"^5.6 || >=7.0 <7.3\"\r\n  }\r\n}\r\n```\r\nSee discussion https://github.com/FriendsOfPHP/PHP-CS-Fixer/issues/3323 - PHP-CS-FIXER will not support PHP 7.3 at the moment. So the nightly php travis builds fail because composer could not resolve the dependencies. LiipImagineBundle now removed PHP-CS-FIXER dependency\r\n at the moment.\r\n\r\nHow can we solve the problem in composer?\r\n\r\nOne solution will be to add support for optional requirements which can be installed or skipped.\r\nWhat do you think about this?\r\n\r\nRelated Issues (I found)\r\n- #6321 use case for conflict\r\n\r\nPossible syntax\r\n```json\r\n{\r\n  \"optional\": {\r\n    \"friendsofphp/php-cs-fixer\": \"^1.0|^2.0\"\r\n  }, \r\n  \"optional-dev\": {\r\n    \"friendsofphp/php-cs-fixer\": \"^1.0|^2.0\"\r\n  }\r\n}\r\n```\r\nor question mark before\r\n```json\r\n{\r\n  \"require-dev\": {\r\n    \"?friendsofphp/php-cs-fixer\": \"^1.0|^2.0\"\r\n  }\r\n}\r\n```\r\nor dash for skipped\r\n```json\r\n{\r\n  \"require-dev\": {\r\n    \"friendsofphp/php-cs-fixer\": \"^1.0|^2.0|-\"\r\n  }\r\n}\r\n```\r\n\r\n\r\nThank you very much\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6965/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Seldaek": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/015927d0b058eb5d31e098952f7f1ab9613cb959", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/1a6e3ee8c75579d179dd440b1a61d3c900372457", "message": "Show script description for custom commands in run-script --list, fixes #7009"}, {"url": "https://api.github.com/repos/composer/composer/commits/994bac0c153348c09d42cd77225c465c1b81e8e9", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/59fcb91912932b5f9acd2f6d9c774b72907ef31d", "message": "Merge pull request #6985 from nicolas-grekas/get-url-contents\n\nAdd RemoteFilesystem::getRemoteContents() extension point"}, {"url": "https://api.github.com/repos/composer/composer/commits/82b80a54513085e4c791e0671775341a459d197f", "message": "Merge pull request #6979 from nicolas-grekas/fix-ctrl-c\n\nFix CTRL+C handling during create-project"}, {"url": "https://api.github.com/repos/composer/composer/commits/4331b116248b70e2adac3eb6df106ef71132206a", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/188b3a35c8d2a2a32a23f18b6b628696cb0eeff6", "message": "Tweak license deprecation text to handle + more gracefully, fixes #6981"}, {"url": "https://api.github.com/repos/composer/composer/commits/9a443e6d0bf336e45951078b399c4d8cfcac4bcd", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/20699905abf2613d4d91c03e80ca2a7f9ab8f0f1", "message": "Update changelog"}, {"url": "https://api.github.com/repos/composer/composer/commits/74838790b55ef82cb557372a73321694103e402d", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/e6114b2ca7b2eb75920fd03957070045a1ac1bc1", "message": "Fix support for replacing dist refs in gitlab URLs and add support for gitlab/github enterprise too"}, {"url": "https://api.github.com/repos/composer/composer/commits/be040f8e3111b38c1e49ae5cd6b929dbf5c39045", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/ac9c7a50e927f402c4c95fe05eb4043263b6d0cb", "message": "Merge pull request #6976 from nicolas-grekas/fix-autoloader\n\nFix generated static map..."}, {"url": "https://api.github.com/repos/composer/composer/commits/4a7389f5b7070925a7fbaaaa99d2b961648ba5de", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/95d5e8dd947f4ec1402e96ddfcc8f6a7bb7bc0a6", "message": "Update changelog"}, {"url": "https://api.github.com/repos/composer/composer/commits/8c7b13e9beb7f82de9645f9d71f8c5204a0495fd", "message": "Update content hash"}, {"url": "https://api.github.com/repos/composer/composer/commits/8ff3a8bcc048b6d6d091ddbf0975b04f94fef016", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/5e223dae61b7b04ad4cf8361cb60ab76d07a63f8", "message": "Update jsonlint dep"}, {"url": "https://api.github.com/repos/composer/composer/commits/ebc3c7d0da6393b92611c2f2b3c7847faf661bb8", "message": "Merge pull request #6973 from nicolas-grekas/fix-autoloader\n\nFix BC of generated static map"}, {"url": "https://api.github.com/repos/composer/composer/commits/749b4c46b74f9702fc4f6abde6480fb6f0373ed6", "message": "Bump branch alias"}, {"url": "https://api.github.com/repos/composer/composer/commits/c962be2f4123434b4843b1d945724a633237ce00", "message": "Update changelog for 1.6.0"}, {"url": "https://api.github.com/repos/composer/composer/commits/882b82d542b45435bae1d95b33e225427950c59c", "message": "Add COMPOSER_MEMORY_LIMIT env var to force a given memory_limit, fixes #6931"}, {"url": "https://api.github.com/repos/composer/composer/commits/5cd0fef7ff75dbe32c06a8d36b4f837852a6d004", "message": "Upgrade to SPDX License 3.0 and handle deprecations more gracefully, fixes #6951"}, {"url": "https://api.github.com/repos/composer/composer/commits/ab8437ce06256109d10731f3baff3d513e93ad1f", "message": "Merge remote-tracking branch 'swumao/feature-6892'"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/511765", "body": "dumb http != http://. http still works, and afaik it's still better/faster than git protocol which is really old.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/511765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/511768", "body": "As for old version of git.. how old is that? I think very very old, if github thought it didn't matter anymore.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/511768/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/511784", "body": "Because some people, including me and my shitty cygwin git, have problems with https. Some had problems with git protocol too I believe. That's why symfony-standard ended up with http://. Interop hell.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/511784/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/511804", "body": "Ok, this is fixing it actually http://stackoverflow.com/questions/3777075/https-github-access/4454754#4454754 - just for the record. But let's keep it as is until someone complains..\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/511804/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/512425", "body": "Yes, it doesn't suffer from the cygwin issues, but I use cygwin all the time for many other reasons so it's easier to grab git from there. Anyway it's solved now.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/512425/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/515655", "body": "Yeah this is temporary just as a way to make sure that @naderman fixes the problem I am having.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/515655/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/589730", "body": "Yeah, copy paste ftw. Why mbstring? Well I just wanted to be sure that we don't blow up on non-ascii package names. Not that I think this should happen, but better safe than sorry, no?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/589730/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/590502", "body": "This isn't entirely true, the following outputs \u00f6 and then garbage (if saved/served as UTF8).\n\n```\necho utf8_encode(strtolower(utf8_decode('\u00d6')));\necho strtolower('\u00d6');\n```\n\nAll I want to make sure of is that the package names are case insensitive. I lowercase them when they're output in packagist, and I thought lowercasing the user input in composer would complete the loop. Now if we say we only support [a-z0-9_-] in package names, fine by me, but we need to make this explicit and not allow stuff to be mangled if it contains accented chars.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/590502/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/590670", "body": "Sorry to insist, but I'm not seeing the same here:\n\n```\necho ord(utf8_encode(strtolower(utf8_decode('\u00d6'))));\necho ord(strtolower('\u00d6'));\necho ord(utf8_encode(mb_strtolower(utf8_decode('\u00d6'), 'ISO-8859-1')));\necho ord(mb_strtolower('\u00d6', 'UTF-8'));\n```\n\nPrints 195 227 195 195\nPrinting the second byte of each gets you: 182 150 182 182\n\nIt seems to me that strtolower() with UTF8 input is touching things that go beyond the scope of ASCII chars, and therefore should not be relied upon since we do have UTF8.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/590670/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/590678", "body": "According to PHP docs, strtolower follows the locale, if I do `setlocale(LC_ALL, 'C')` before the other calls, then it works as you said, since with the C locale it doesn't try to be smart.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/590678/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/590690", "body": "Yeah but then we need to do that in Composer, or rely on mbstring, which works just fine with UTF8. I'm not sure why so much hate :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/590690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/590709", "body": "In my experience it has worked just fine for years, but anyway, I hope [this settles the case](https://github.com/composer/composer/commit/07e181c6ebde32ec49fd829e6aba4154f1a6f51d)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/590709/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/619289", "body": "Copy paste mistake I guess, I will fix it.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/619289/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": []}, "nicolas-grekas": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/5601f07bfadc2359c53f9fa92f96d5249120188d", "message": "Add RemoteFilesystem::getRemoteContents() extension point"}, {"url": "https://api.github.com/repos/composer/composer/commits/251a347efbae4dbedb5c45f1571265e0a8705230", "message": "Fix CTRL+C handling during create-project"}, {"url": "https://api.github.com/repos/composer/composer/commits/0c912d6eee60505333479c71e5708ce263ae65ae", "message": "Fix generated static map..."}, {"url": "https://api.github.com/repos/composer/composer/commits/ce70e0e9dd63e4f3fcdd0eb2d960873d160a3a2f", "message": "Fix BC of generated static map"}], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/3951", "title": "Concurrent git clone and downloads with React", "body": "This adds an optional event loop argument and promises as return values to the GitDownloader.\nThe Installer takes advantage of it to trigger several `git clone` and manage them concurrently.\nNo change is made to the behavior of the code when no event loop is used, so that tests still pass.\nThis could be the first step towards parallel downloads in composer: the other downloaders would need to be updated following the same principle, the GitDownloader also needs to be finished (only public repos can be managed by the loop for now).\nThe console output also would need to be handled differently.\nIf someone else likes the approach, help is welcomed for porting the other downloaders to use and return promises! (a PR on this PR anyone?).\nPHP 5.3 is not supported by React, but there is no blocker to change that.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "remicollet": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/b0fa2bd5e20b5300cdfe977678eea315e96df9a3", "message": "Fix dependency on seld/jsonlint 1.4\n\nAs deprecated flag is used."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zymsys": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/7011", "title": "Show reason for php version package mismatch due to config.platform", "body": "A couple of times I've run into a frustrating situation where a config.platform generated by the Symfony installer has specified a php 5 version and I've changed my require to php 7 without realizing the config.platform issue. That leaves me hunting for a version of php that isn't installed anywhere on my system. Using verbose or even very very verbose doesn't seem to help. \r\n\r\nI used xdebug to track it down and saw that the package knew what the problem really was in its description but it wasn't revealing this to the user. This patch exposes that information. The nested parens aren't pretty, but I think developers will be able to parse it.\r\n\r\nThe patch starts by determining the version in the same way it used to. Then it double checks that we have a package, and that it is a CompletePackage so that it has a description. If so it appends the description to the version information.\r\n\r\nI double checked it with phpcs and it complained about line lengths, but it also did this for much of the rest of the file.\r\n\r\nThe output looks like this:\r\n\r\n```\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\nYour requirements could not be resolved to an installable set of packages.\r\n\r\n  Problem 1\r\n    - This package requires php >=7.0.0 but your PHP version (5.6.0; Package overridden via config.platform (actual: 7.0.22)) does not satisfy that requirement.\r\n```", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tanarurkerem": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/7006", "title": "Update how-do-i-install-a-package-to-a-custom-path-for-my-framework.md", "body": "Title changed", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "carusogabriel": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6995", "title": "Use $strict param in functions that have it", "body": "Some functions, e.g. `in_array`, have a third param to enable strict comparison. With PHP-CS-Fixer `strict_param` rule, we can fix all of them :shipit:", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/6982", "title": "Fixes from PHPStan level 0", "body": "Some, not all, fixes found by running [`PHPStan`](https://github.com/phpstan/phpstan) at level 0:\r\n\r\nFile | Problem\r\n---- | ----\r\nsrc/Composer/DependencyResolver/Rule.php:56 | Access to an undefined property Composer\\DependencyResolver\\Rule::$job.\r\nsrc/Composer/Factory.php:549 | Class Composer\\Installer\\MetapackageInstaller does not have a constructor and must be instantiated without any parameters.\r\nsrc/Composer/Command/DiagnoseCommand.php:38 | Property Composer\\Command\\DiagnoseCommand::$rfs has unknown class Composer\\Command\\RemoteFileSystem as its type.\r\nsrc/Composer/Command/InitCommand.php:282 | Anonymous function has an unused use $self.\r\nsrc/Composer/Repository/RepositoryInterface.php:73 | Return typehint of method Composer\\Repository\\RepositoryInterface::search() has invalid type array.\r\nsrc/Composer/Package/Archiver/BaseExcludeFilter.php:78 | Parameter $lineParser of method Composer\\Package\\Archiver\\BaseExcludeFilter::parseLines() has invalid typehint type Composer\\Package\\Archiver\\callback.\r\nsrc/Composer/Installer/PluginInstaller.php: 37 | Constructor of class Composer\\Installer\\PluginInstaller has an unused parameter $type.\r\nsrc/Composer/Json/JsonManipulator.php:232 | Anonymous function has an unused use $name.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/6896", "title": "Add PHPUnit 6 support", "body": "I've added `PHPUnit 6` support to `Composer`. Changes:\r\n- Define mocks with fluent interface;\r\n- `setExpectedException` isn't available in version `6`, so I substitute to `@expectedException` and `@expectedExceptionMessage` notations. But, there are some tests that these expectations are variables, so, I created a method layer in `Composer\\TestCase` and extend those TestCases that need this method.\r\n\r\nOne question: why not extend all TestCases from `Composer\\TestCase`? I guess is easier for maintenance, isn't?", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wsandin": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6956", "title": "Fix for issue 6602 - warning when running composer as another user", "body": "Raising a warning if the current user doesn't match the initial ownership of the $home directory. \r\nNot sure how this works on let's say Windows, might have to add some extra checks for that.\r\n\r\nWould love some feedback on how I can improve this PR in order to merge into master.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "localheinz": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6942", "title": "Fix: Remove unused parameter and field", "body": "This PR\r\n\r\n* [x] removes an unused parameter and field from `Locker`\r\n\r\n\ud83d\udc81\u200d\u2642\ufe0f The instance of `RepositoryManager` passed in into its constructor is never used.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mbaynton": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6864", "title": "Proposed event on SolverProblemsException with power to trigger re-run.", "body": "So this is definitely not ready to actually merge yet, but @naderman suggested discussing PRs early, so here goes. Oh, in case there would otherwise be confusion, this is unrelated to my work on `replace`.\r\n\r\nThe problem this helps solve is enabling Drupal installations/updates for nontechie users without exceeding the resource limitations of a webserver environment; it's a huge pain point for Drupal right now that it isn't possible to do Composer-enabled installs/updates in a browser. The way it helps solve it is by allowing a plugin to initially restrict the `Pool` to a repository containing only one version of each required package, all of which are pre-selected to be compatible with each other; this should make the sat problem and number of modeled packages/decisions trivial/very fast in execution time/low in memory. For sites that only need things available from this special repository, a complete Composer run ought to work fine within the confines of a webserver environment. When the site does also have requirements from the wider world, the first solver run will fail, but it will fail fast. This PR would allow a plugin to then introduce packagist etc to the Pool and rerun the Solver. (I believe @thom8 has talked with some Composer maintainers about the possibility of running the solver on a remote \"solver as a service\" host; I've got a vague idea of also swapping out the standard solver for the remote one long-term when a full-scale dependency resolution is required.)\r\n\r\nSomething like this have a chance of going in?", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "am05mhz": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6751", "title": "adds 2 steps install script for windows users", "body": "just add a little convenience for windows users ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hboomsma": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6714", "title": "add gitlab-dist-format option", "body": "Add `gitlab-dist-format` configuration option for the `GitLabDriver`. It defaults to `zip` as is the current default. You can set it to `zip`, `tar.gz`, `tar` and `tar.bz2`.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kthbit": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6707", "title": "Teach fossil to use HTTP Basic and Fossil built-in authentication", "body": "Composer was unable to clone/pull from a Fossil repo that was protected by either HTTP Basic or Fossil  authentication. This patch attempts to fix that. Both (or either) authentications are stored in auth.json. HTTP Basic auth is specified as before, per domain. Fossil credentials are specified per remote repository, in case pulling from multiple remote repositories with different credentials for each.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "RobberPhex": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6683", "title": "fix gitlab repo config in composer.lock", "body": "1. When `attemptCloneFallback` use `generatePublicUrl` to get public_url, we cannot forget some gitlab instance doesn't support https. **So we get `scheme` from config.**\r\n2. When generate `composer.lock` file, we should use repo url *what user wrote* at `composer.json` , not we got from gitlab api.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Toflar": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6284", "title": "Improve memory usage a little by not creating new Link objects", "body": "I was able to shave off only a litte memory usage (about 2% on average) by this change.\r\nAt first I did not consider it to be worth discussing about because the improvements are not significant enough (well, a penny saved is a penny earned but still). However, I still decided to make the changes public because at the end of the day this is what open source is all about. Maybe someone can improve the impact even more based on my idea \ud83d\ude04 \r\n\r\nSo the idea behind it is that most `Rule` instances get a `$reasonData` assigned which mostly is an instance of `Link` or `CompletePackage`. While debugging a little, I noticed that even though a big amount of `Link` instances are actually of equal content, they are not the same (they do not share the same object hash). They are different objects because every `Package` creates its `Link` objects (`requires`,  `conflicts` etc.) when it is created. So the `Link` objects are not shared across memory.\r\nHence, I thought by making sure to not create them but instead reference to an already created one if it is the same should decrease memory usage. This seems to be true but I was expecting an even bigger impact. Now somebody can tell me maybe why the impact is not bigger or make it bigger based on my idea \ud83d\ude0b ", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "webflo": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6139", "title": "Test case for #6131", "body": "I think this is valid test case for #6131. Not 100% sure.\r\n\r\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "alcohol": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/5507", "title": "add a fixture for github issue #5505", "body": "not sure how to solve yet, or if it requires solving at all\n", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "stratdes": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/5360", "title": "ISSUE 3568 Show downloading package speed", "body": "- Added new class Download to represent the download progress\n- Added the util class DownloadUnitsFormatter to format Download class speed and ETA values\n- Some refactor on RemoteFileSystem\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hirak": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/5293", "title": "Parallel downloader", "body": "## Parallel Prefetcher\n\nporting from https://github.com/hirak/prestissimo\n- Fetching packages in parallel at `Composer\\Installer::doInstall()`\n- This is NOT replacement of `Composer\\Util\\RemoteFilesystem`.\n  - `repository.json` download in serial\n- If `!extension_loaded('curl')`, then fallback to RemoteFilesystem\n- If it fails to download, then fallback to RemoteFilesystem. (do not retry / do not show any prompt)\n### See also\n\nhttps://github.com/composer/composer/pull/2696\nhttps://github.com/composer/composer/issues/3930#issuecomment-193750145\n### Question\n\n`github-token`, `gitlab-token` options are still alive?\nhttps://github.com/composer/composer/blob/36665d791d8ec6520e31880dfe462bd2bf799132/src/Composer/Util/RemoteFilesystem.php#L235\nhttps://github.com/composer/composer/blob/36665d791d8ec6520e31880dfe462bd2bf799132/src/Composer/Util/RemoteFilesystem.php#L240\n\nI can't find any documentation about that options. In this P-R, I didn't implement it yet.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "curry684": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/4998", "title": "Removed inefficiency in the autoloader generation", "body": "This line was originally added for PHP 5.2 compatibility but that was dropped long ago, so no longer need to incur the handful of extra function calls on every autoloader init.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "aripringle": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/4210", "title": "add support for config inheritance", "body": "Refs #183. This is a refactoring of #1013, with attempts to address the comments in that thread.\n\nAll credit goes to @1stvamp for the original code.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "naderman": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/4163", "title": "[WIP] RepositorySet / Pool Split & Load only explicitly referenced package data", "body": "This is a fixed version of https://github.com/composer/composer/pull/3994\n\nTodo:\n- [ ] RepositorySetTest\n- [ ] don't use object state to construct pool in RepositorySet\n- [x] move request name collection logic into request - solver should take repo set\n- [ ] evaluate if RepositorySet and CompositeRepository should be merged\n- [ ] refactor policy to work with repositoryset in addition to pool\n- [ ] remove uses of small pools from installer\n- [ ] this should be empty: `grep -ri \"pool\" src/ | grep -v \"src/Composer/DependencyResolver\"`\n", "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/2898", "title": "[WIP] Extension installer", "body": "Supports PHP & HHVM.\n\nTodo:\n- [ ] Need to come up with a solution for ext-\\* packages actually being installable now, so extensions can be compiled automatically to satisfy dependencies on extensions.\n- [ ] Documentation\n- [ ] Use a different downloader to download binary builds from github releases for windows (or pecl for PHP)\n- [ ] Output information on configuring the server to include extension.so\n\nReplaces the earlier PR #498\n", "author_association": "OWNER"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/449810", "body": "Indeed.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/449810/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/588527", "body": "Why would you use mbstring here? Just strtolower should be fine. And indeed only one argument.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/588527/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/589953", "body": "honestly mb_strtolower is more likely to blow up than strtolower. strtolower touches only ASCII and leaves the rest alone. strtolower is an operation that doesn't even make sense on a variety of unicode characters. In addition this makes the behaviour of the solver dependent on whether mbstring is installed. So please let's avoid the use of any mbstring functions.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/589953/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/590645", "body": "For a start we should handle UTF-8 only. Anything (in patricular our json files) in any other encoding or character set should be outright rejected. Apart from that your example actually works fine. The result of both lines is precisely the same. However it's entirely irrelevant because utf8_decode turns it into ISO-8859-1 which we would have rejected anyway. UTF-8 on the other hand stores only ASCII characters as single bytes, and strtolower only operates on those characters.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/590645/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/590654", "body": "Only case where I could see your example mangle anything, is if you happen to let mbstring overload your string functions. That feature is an absolute catastrophe and all the more reason to stay as far away from mbstring as possible.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/590654/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/590684", "body": "Indeed, I should have pointed that out. But setting the locale to C is a good idea in general to avoid strangeness ;-)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/590684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/590693", "body": "Many many hours of trying to locate bugs which turned out to be caused by mbstring :P And yes I'd suggest we use a C locale in composer and avoid mbstring.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/590693/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/590785", "body": "Thank you ;-)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/590785/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/125833", "body": "I tend to agree with that\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/125833/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "fcastilloes": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/4036", "title": "Add support to interactive scripts defined in composer.json", "body": "This change should allow for interactive scripts defined in composer.json as requested in issue #3299 without breaking non-interactive scripts.\n\nAs far as I know, the Process component accepts both a stream or a string as input argument. I see no reason to pass a string, but the stdin is useful. Any reasons not to do it or something I didn't consider?\n\nI've run the test suite and introduces no errors.\n\nThanks.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pierrejoye": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/3897", "title": "draft support for Pickle in Composer", "body": "Draft support for Pickle (https://github.com/FriendsOfPHP/pickle) in Composer.\n\nSpent more time to dig composer code than actually implement that but at least it works to install exts from within a project.\n\nExample project and extension composer.json:\nhttps://gist.github.com/pierrejoye/1bbc2bdcec5887e60490\n\nIf you like to test with more extensions:\ngit  clone myext\ncd myext\npickle convert\n\nAdd the dep to your project. If you do not want to fork an ext, you can create a dep vs a zip file and use the artifact repository, it should work.\n\nStill many things to solve but at least there is something to play with now\n\nUpdate:\n\nAccording to our discussions, it is now a two steps process to install extensions, to make sure users understand that installing extensions may affect many projects:\n\nFirst, the usual command:\ncomposer install\n\ncomposer will tell you to run\ncomposer install --install-extensions\n\nif the project has extensions dependencies\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "frederikbosch": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/3608", "title": "Remove authentication credentials from git config file", "body": "When using private repositories, composer leaves authentication credentials in .git/config. This is undesired behaviour because credentials are potentially leaked. This PR removes credentials after fetching. It contains tests for download and update.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "padraic": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/2814", "title": "[WIP] Developer Package Signing", "body": "This PR is a work in progress. Expect changes and check the TODO list. Review/testing is welcome.\n\nThis pull request is intended to add support for developer-level package signing to Composer using openssl. It includes a \"create-keys\" command to generate an RSA private and public keys (the private key should be encrypted using a passphrase), an \"add-dev-key\" command which imports a private key and extracts the public key for distribution in a package within keys.json, and a \"sign\" command which assembles a manifest of files, their checksums, and lengths, and signs the manifest using a private key within manifest.json. This PR does not address any form of package or metadata signing by Packagist which is also required for repository-level security. This PR does not depend on SSL/TLS support.\n\nTODO:\n1. ADD support for Composer to cache keys.json data since it should only be populated on first encounter so that attacks to alter keys.json have a chance to be detected.\n2. ADD support for Composer to verify package signatures as part of its install/update routines.\n3. ADD verification status to install/update output.\n4. ADD composer command options to reject unverified packages (I'll make it optional but it's strongly suggested that this become enabled by default in time).\n\nYou can currently test sign packages using the following commands (the first three are only required to setup keys):\n\n```\nphp composer.phar create-keys --prefix=myUniquePrefix\n\nphp composer.phar add-dev-key ./path/to/myUniquePrefix-private.pem\n\nphp composer.phar sign-dev-keys ./path/to/myUniquePrefix-private.pem\n```\n\n```\nphp composer.phar sign ./path/to/myUniquePrefix-private.pem\n```\n\nThis should result in two new files: keys.json (used to distribute authorised public keys) and manifest.json (a signed listing of all package files, their SHA256 checksums and lengths).\n\nThe theory is to sign packages and commit keys/manifest changes as the FINAL step before tagging a release. If you make any other changes, or altered the tag after signing, then the signatures could never be verified by users.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "peteraba": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/2696", "title": "Curl transfer", "body": "Added curl fallback for data transfer. Moved hard coded stream context calls into separate transfer class. Created interface for transfer classes. Added tests.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ghost": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/composer/composer/issues/comments/3517632", "body": "I am having this issue while trying to install the Composer (commit 098ba8e5) dependencies. I think it can provide more background to understand the issue (seems related with the last @Seldaek [comment](https://github.com/composer/composer/issues/162#issuecomment-3201363))\n\n```\nvagrant@lucid64:/tmp/composer$ composer.phar --version\nComposer version 098ba8e\nvagrant@lucid64:/tmp/composer$ composer.phar install\nInstalling dependencies.\nSegmentation fault\nvagrant@lucid64:/tmp/composer$ composer.phar install\nInstalling dependencies.\nPHP Warning:  assert(): Assertion failed in phar:///usr/local/bin/composer.phar/src/Composer/DependencyResolver/Solver.php on line 2\nSegmentation fault\nvagrant@lucid64:/tmp/composer$ ls\nbin  composer.json  doc  LICENSE  phpunit.xml.dist  PORTING_INFO  README.md  src  tests  un.php  vendor\nvagrant@lucid64:/tmp/composer$ rm -rf vendor/\nvagrant@lucid64:/tmp/composer$ composer.phar install\nInstalling dependencies.\nPHP Warning:  assert(): Assertion failed in phar:///usr/local/bin/composer.phar/src/Composer/DependencyResolver/Solver.php on line 2\nSegmentation fault\n```\n\nNote the `require` key of `composer.json`:\n\n```\n\"require\": {\n    \"php\": \">=5.3.0\",\n    \"symfony/console\": \">2.0,<2.2-dev\",\n    \"symfony/finder\": \">2.0,<2.2-dev\",\n    \"symfony/process\": \">2.0,<2.2-dev\"\n},\n```\n\nThen I saw in Packagist that the Symfony components are available since the 2.0.4 release, and just changed one of the dependencies to be greater than 2.0.4:\n\n```\n\"require\": {\n    \"php\": \">=5.3.0\",\n    \"symfony/console\": \">2.0.4,<2.2-dev\",\n    \"symfony/finder\": \">2.0,<2.2-dev\",\n    \"symfony/process\": \">2.0,<2.2-dev\"\n},\n```\n\nIt partialy worked (it did not created the autoload files)!\n\n```\nvagrant@lucid64:/tmp/composer$ rm -rf composer.lock vendor/\nvagrant@lucid64:/tmp/composer$ composer.phar install\nInstalling dependencies.\nDownloading http://github.com/symfony/Process/zipball/96512471ac1481eef59051a26239e825105ddd1d to /tmp/composer/vendor/symfony/process/Symfony/Component/Process/aa301e02ac3e7461c1afa753ec3c1e60\nUnpacking archive\nCleaning up\nDownloading http://github.com/symfony/Finder/zipball/dd56fc9f1f0baa006d7491d5c17eb3e2dd8a066c to /tmp/composer/vendor/symfony/finder/Symfony/Component/Finder/e0a2d80a077d2d0f471b10f29be1f9b2\nUnpacking archive\nCleaning up\nDownloading http://github.com/symfony/Console/zipball/63af6eb3f342ac79f0ebbc3bfc59721e247cbb4c to /tmp/composer/vendor/symfony/console/Symfony/Component/Console/b40d67c9ca6f11df924d9c943b05b67f\nUnpacking archive\nCleaning up\nWriting lock file\nGenerating autoload files\nSegmentation fault\nvagrant@lucid64:/tmp/composer$ ls -a vendor/.composer/\n.  ..  installed.json\n```\n\nThen, I updated `composer.json` again:\n\n```\n\"require\": {\n    \"php\": \">=5.3.0\",\n    \"symfony/console\": \">2.0.4,<2.2-dev\",\n    \"symfony/finder\": \">2.0.4,<2.2-dev\",\n    \"symfony/process\": \">2.0.4,<2.2-dev\"\n},\n```\n\nAnd it finally worked, without segfaults:\n\n```\nvagrant@lucid64:/tmp/composer$ rm -rf composer.lock vendor/\nvagrant@lucid64:/tmp/composer$ composer.phar install\nInstalling dependencies.\nDownloading http://github.com/symfony/Process/zipball/96512471ac1481eef59051a26239e825105ddd1d to /tmp/composer/vendor/symfony/process/Symfony/Component/Process/ed4e7277155fbd8bae1f020ed0a183e3\nUnpacking archive\nCleaning up\nDownloading http://github.com/symfony/Finder/zipball/dd56fc9f1f0baa006d7491d5c17eb3e2dd8a066c to /tmp/composer/vendor/symfony/finder/Symfony/Component/Finder/dfa893b97922079460f7fd8163dddc98\nUnpacking archive\nCleaning up\nDownloading http://github.com/symfony/Console/zipball/63af6eb3f342ac79f0ebbc3bfc59721e247cbb4c to /tmp/composer/vendor/symfony/console/Symfony/Component/Console/2d5351c867fdf130ea823d63aeec5a4f\nUnpacking archive\nCleaning up\nWriting lock file\nGenerating autoload files\n```\n\nNote that I set the Symfony components to be greater than `>2.0.4`. Greater equal (`>=2.0.4`) segfaults also.\n\nBTW, PHP 5.3.2.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/3517632/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/3540567", "body": "@mpdude Yes, and seems irony Suhosin giving contribution to segfaults :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/3540567/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/6840068", "body": "how to fix it in a environnement where php.ini is not on dev's control ? \n\ni've tried php_flag apc.enable_cli 1 in .htaccess, same result. \n\nFatal error: include(): Cannot redeclare class composer\\command\\showcommand in phar:///data_path/composer.phar/vendor/composer/ClassLoader.php on line 150\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/6840068/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/5022153", "body": "I have a very slow connection and it would be wonderful to know the progress of git clones.  Git itself shows progress, but when composer clones a repo that is hidden.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/5022153/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/5022348", "body": "@stof, `---verbose` only shows that it's cloning, not the progress achieved so there is no way of knowing how fast or slow the clone is actually taking.\n\ne.g.\n\n```\nInstalling sensio/generator-bundle (dev-master)\n  - Package sensio/generator-bundle (dev-master)\n    Cloning 06d07e0514d310be8d5630bfd93637136991c30c\nCloning into 'C:\\xampp\\htdocs\\core2\\vendor/sensio/generator-bundle/Sensio/Bundle/GeneratorBundle'...\n```\n\nThat's it, no x%, no git clone output etc.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/5022348/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/6298953", "body": "I'm getting a similar error:\n\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 78 bytes) in phar:///<path to site>/composer.phar/src/Composer/DependencyResolver/Solver.php on line 169\n\nNote: have the latest update file.\n\nAny ideas?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/6298953/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/6327064", "body": "Thanks, it's working now.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/6327064/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4592997", "body": "Same here with\n\n```\n\"require\": {\n    \"php\": \">=5.3.2\",\n    \"symfony/framework-bundle\": \"2.*\",\n    \"symfony/twig-bundle\": \"2.*\",\n    \"twig/twig\": \"*\"\n},\n```\n\nworks fine after removing twig\n\n```\n\"require\": {\n    \"php\": \">=5.3.2\",\n    \"symfony/framework-bundle\": \"2.*\",\n    \"symfony/twig-bundle\": \"2.*\"\n},\n```\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4592997/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4605254", "body": "According to the docs, you are doing it wrong.\n\n\"Package\" type is used when repository does NOT have its own `composer.json` config file. In your case you should go with VCS type. For more information see VCS and Package chapters at http://getcomposer.org/doc/05-repositories.md\n\nHowever, from my experience you can still have some problems with private repos (see #482). If you get this working, you should help in #482 ;>\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4605254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4606676", "body": "After re-reading the docs at http://getcomposer.org/doc/05-repositories.md ... as I understand, the repo defined with VCS type should be picked up automatically. There is also such example in the docs.\n\nHowever the sentence \"When hosting your own package repository it is recommended to use a composer one.\" from \"Hosting your own\" chapter is confusing me. Is having own packages.json file _required_ or _recommended_ ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4606676/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4607166", "body": "> If you want to create a \"composer\" type repository, you must have a packages.json file.\n\nOf course. This is not what I meant.... Do I **have to** create composer repository (with \"packages.json\" file) in order to correctly define private repos as dependencies? Using VCS-type repository doesn't seem to work for me.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4607166/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4614428", "body": "@brikou `symfony/finder` is not a private repository.\n1. You need to use slash instead of colon between symfony and finder.\n2. Defining VCS repository for `symfony/finder` is not necessary as it is published in Packagist: http://packagist.org/packages/symfony/finder \n3. **The problem here is related to private repositories which are not (cannot be) published in Packagist.**\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4614428/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4624494", "body": "@Seldaek After your suggestion I changed 'vcs' to 'git' and used the following form:\n\n```\n\"repositories\": [\n    {\n        \"type\": \"git\",\n        \"url\": \"git@bitbucket.org:vendor/abcdeprivatebundle.git\"\n    }\n]\n```\n\nwhich gives the same error message. I have tried to debug the issue... Looks like the repository is downloaded (as autorization occurs and repository is saved in temporary dir - thanks @brikou for this info).\n\nBut, the error still occurs. Dumping the `$this->reasons` variable before https://github.com/composer/composer/blob/master/src/Composer/DependencyResolver/Problem.php#L84 line is not more helpful:\n\n```\nArray\n(\n    [a:4:{s:8:\"packages\";a:0:{}s:3:\"cmd\";s:7:\"install\";s:11:\"packageName\";s:27:\"vendor/abcde-private-bundle\";s:10:\"constraint\";O:47:\"Composer\\Package\\LinkConstraint\\MultiConstraint\":1:{s:14:\" * constraints\";a:0:{}}}] => Array\n        (\n            [rule] => \n            [job] => Array\n                (\n                    [packages] => Array\n                        (\n                        )\n\n                    [cmd] => install\n                    [packageName] => vendor/abcde-private-bundle\n                    [constraint] => Composer\\Package\\LinkConstraint\\MultiConstraint Object\n                        (\n                            [constraints:protected] => Array\n                                (\n                                )\n\n                        )\n\n                )\n\n        )\n\n)\n```\n\nAnyone willing to help?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4624494/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4629360", "body": "Ok, I found the issue. Will send a patch soon.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4629360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4629889", "body": "See #487\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4629889/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4636210", "body": "The following form work fine now (handled by `GitDriver`):\n\n```\n\"repositories\": [\n    {\n        \"type\": \"vcs\",\n        \"url\": \"git@bitbucket.org:vendor/repo.git\"\n    }\n]\n```\n\nPrivate repos specified as `https://bitbucket.org/vendor/repo.git` or `https://vendor@bitbucket.org/vendor/repo.git` does not work.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4636210/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/8442831", "body": "@Seldaek Given the information in #1092 about security of git protocol - can we increase the priority of this issue?\n\nSide note: when implementing HTTPS support to bitbucket recently added `github-protocols` config option could be reused.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/8442831/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/8443130", "body": "Wait... after reading the code of GitHubDriver & some docs about BitBucket API... `git@bitbucket.org:vendor/repo.git` is SSH not GIT protocol?\n\nOk, my bad - so this issue seems to deserve low priority :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/8443130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4871142", "body": "I found similar issue. After updating/recreating `packages.json` with Satis for 30+ private repos, some of my repos were missing.\n\nAs I found out this was because of local copy of repository which was not properly initialized (?). The repository in a temp directory had only `.git` directory (with objects and refs subdirectories) - nothing else.\n\nI am not sure what caused this. There was no error message. Maybe some internet connection problems or temporary http error like 503? If the cause of this can not be fixed - can we at least throw an exception ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4871142/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4896973", "body": "I can not reproduce the issue - it occured randomly. \n\nSatis is a separate issue which is fixed in a waiting PR. We also need to throw exception in Satis when required package was not found - either because of badly cloned git repo or because the package was defined without details about repository.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4896973/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/5240247", "body": "@Seldaek - since the major BC break has now occurred (where the `autoload.php` is located), maybe you could consider adding a non-hidden subdirectory for the 4 `autoload.php` dependencies?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/5240247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/5240485", "body": "@stof - \"is likely\" is probably a bit too strong, but one could just make \"composer-autoloader\" a protected key in the \"require\" schema. I'm only suggesting a non-hidden folder because this ticket is about the disadvantages of hidden folders? Unless it was only about the fact that the autoload.php was hidden - if that is the case, keep the `.composer` folder for the autoloader deps.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/5240485/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/5240807", "body": "@jalliot - see https://groups.google.com/forum/?fromgroups#!topic/composer-dev/fWIs3KocwoA\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/5240807/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/5240910", "body": "How about `-composer`, `~composer`, `composer_` or `composer_deps` and make it a protected key that cant be specified in composer.json\n\nBut why is a hidden dir for the dependencies of composer objectionable (i.e all except the autoload.php)?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/5240910/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/5013734", "body": "@stanlemon I don't think you can get the package repos to specify the vendor dir, but in the `require` statements, it would be good to be able to override the default `vendor-dir` settings.  I already discussed this with @Seldaek \n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/5013734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/5013812", "body": "@mvriel or what about a type called 'require-extra' which is defined by `vendor => array(version, path)`\n\ne.g.\n\n```\n    \"require-extra\": {\n        \"foo/bar\": [\"1.2.3\", \"vendor-dir\"],\n    }, \n```\n\nThis way it can truly work for anything.  There are other usecases for example system modules e.g. in Zikula or Drupal where modules sort of need to go in a special folder.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/5013812/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4949211", "body": "Also, in this case there is no error message & no validation if requirements could be solved.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4949211/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4949780", "body": "fixed description of the issue\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4949780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/4950521", "body": "I cant as these are **private repos**. Description with steps to reproduce should be enough.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/4950521/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/5405513", "body": "This bug still exists (tested today with composer in version d60188903d) but the steps to reproduce can be simplified:\n- main repo's composer.json has dependencies which are installed via php composer.phar install\n- new dependency XYZ is added to composer.json (XYZ dependency also contains subdependencies)\n- php composer.phar update\n\nend result:\n\nXYZ dependency is installed but required subdependencies of XYZ dependency are **NOT** installed\n\n@naderman @Seldaek ping - could you give this issue a higher priority? thanks.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/5405513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "stof": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/449133", "body": "This class should probably implement the `IteratorAgregate` method to make it easier to use. There is no special code as the method is already implemented here :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/449133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/511757", "body": "you should probably use the git protocol here as the http protocol does not work for people using an old version of git (github dropped the support of dumb http a month ago) and has some issues by returning 403 responses in some cases\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/511757/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/511777", "body": "git < 1.6.6 does not support smart http.\n\nBut well, there is a way to change the url of submodule if needed by using `git submodule init` first and changing the url so it can stay as is.\n\nBtw, why changing https to http ? github gives the https url on the repo page, not the http one\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/511777/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/511782", "body": "and github documented that old version can simply use the git protocol :) They did it to allow optimizing the way they store the files.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/511782/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/514925", "body": "you should use mocks to test the solver. Currently, your test is not a unit test but a functional test relying on Packagist being up and containing  only one package: Monolog\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/514925/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/619243", "body": "why is it public instead of protected ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/619243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/80944", "body": "you should remove this file\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/80944/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/124668", "body": "you should remove the extra empty line\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/124668/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/124670", "body": "you should add the help for the command too\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/124670/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/124671", "body": "it should be protected IMO\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/124671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/125737", "body": "is it really necessary to use the finder here ? The command will not be added often, and they will likely be only a few ones so registering them explicitly could be more readable and maintainable (like it is done in Doctrine btw)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/125737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/127420", "body": "the `piblic` keyword should be omitted for interface as they can only define public methods anyway\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/127420/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/127422", "body": "same here\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/127422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/133157", "body": "the class name is `JsonLoader`\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/133157/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/133158", "body": "why aliasing it ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/133158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139530", "body": "@everzet the type is still there\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139531", "body": "all these use statement should probably be removed as they are the only changes in the class\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139532", "body": "what is it for ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139532/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139533", "body": "these should probably be renamed to be more explicit\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139533/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139534", "body": "the last two are probably useless as there is no change in the class to use them\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139535", "body": "this change is wrong as the commands are added explicitly, not by using the Finder to search for them\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139535/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139536", "body": "we should be consistent between the different managers. The `DownloaderManager` uses `UnexpectedValueException` for the corresponding case.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139536/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139537", "body": "the property should maybe be renamed to be clearer for someone reading the code\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139537/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139539", "body": "same here than for other managers. Choose one of the 2 exceptions.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139539/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139543", "body": "I don't see what is shorter by aliasing it to a longer name than `Application` :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139543/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139550", "body": "@chEbba because the way to update package depends of the way it was downloaded. For instance, when installing the package with a `git clone`, updating it simply means fetching the changes with git.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "xaav": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/511956", "body": "I'm using mysysgit, and don't have any problems.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/511956/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/81575", "body": "Sorry; another side affect when squashing commits.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/81575/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "damianb": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/512003", "body": "Echoing @xaav.  I've been using msysgit for a while, and haven't had problems with https github URLs.\n\nThough, I will say that when behind my college's extensive firewall setup, I have to use the git:// URLs (instead of the https URLs) in order to push/pull.  But, that's another story.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/512003/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "beberlei": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/588490", "body": "strtolower has no second parameter.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/588490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "weaverryan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/126563", "body": "I agree also - was a bit of copy-and-paste, but I've simplified it now.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/126563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "yethee": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/133593", "body": "Here typo\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/133593/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "everzet": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/139538", "body": "To be cleaner/shorter :-)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139538/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139540", "body": "It's for lock. It's not implemented yet ;-)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139540/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139541", "body": "Yeah, it would. I've just tried to finish this big refactoring as fast as possible. We'll clean Composer with later PRs ;-)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139541/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139544", "body": "Yeah, `UnexpectedValueException` is Seldaek legacy. I kinda don't like it, because `InvalidArgumentException` provides more contextual info :-) We'll clean those things in later PRs\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139544/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139545", "body": "Agree.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139545/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "chEbba": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/139549", "body": "Why does downloader need to have update and remove methods? It's really strange for Downloader, as we have update and uninstall methods in Intaller.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139549/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}}}}