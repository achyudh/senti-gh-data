{"_default": {"1": {"Oletus": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/angle/commits/2c9cc8b6e81017b4b6f1655645191bc6a4e5eaeb", "message": "Don't duplicate symbol type information in AST nodes\n\nFunction prototype nodes and symbol nodes already refer to symbols\nthat have type information, so the type doesn't need to be copied to\nthe TInterm* AST node classes. Now type is only stored in those AST\nnode classes that represent other types of expressions. They use\na new TIntermExpression base class for this.\n\nSince now we may use the TType from builtin symbols directly instead\nof copying it, building the mangled names of types in the correct\nmemory pool is also required. The code now realizes the types of\nbuilt-in variables when they get added to the symbol table.\n\nBUG=angleproject:2267\nTEST=angle_unittests\n\nChange-Id: Ic8d7fc912937cb8abb1e306e58c63bb9c146aae9\nReviewed-on: https://chromium-review.googlesource.com/857005\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/28efd82c9119d8371154455b57d13dd14884e184", "message": "Fix dxgi support table generation script\n\nThe previous patch edited the generated file manually. Fix the script\nto generate the file so that angle_white_box_tests pass.\n\nBUG=angleproject:2300\nTEST=angle_white_box_tests\n\nChange-Id: Ie8f182b515721a56d6a2da2dac316aa4e296f005\nReviewed-on: https://chromium-review.googlesource.com/870113\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/ceffd20ce2d6ce3d5e92c7c3792af97bfa23fdf2", "message": "Set colorspace of D3D pbuffers according to DXGI format\n\nWhen a EGL pbuffer is created based on a D3D SRGB texture using\nEGL_ANGLE_d3d_texture_client_buffer, SRGB conversions are performed as\nif it was an SRGB surface. The value of EGL_GL_COLORSPACE now\nreflects that correctly. If the pbuffer is bound to a texture and used\nas a framebuffer attachment, querying GL_FRAMEBUFFER_COLOR_ATTACHMENT\nalso reflects that correctly.\n\nThe behavior is the same on both the D3D backend, where there is no\nnative interop involved, and on the GL backend using\nWGL_NV_DX_interop(2).\n\nThere are a few limitations on the GL backend that relies on native\ninterop:\n\n1. SRGB conversion for textures created this way can't be disabled\nusing the GL_FRAMEBUFFER_SRGB_EXT toggle that's exposed in ANGLE\nthrough EXT_sRGB_write_control. This is now documented in the\nEGL_ANGLE_d3d_texture_client_buffer spec. On the D3D backend this is\nnot a problem since EXT_sRGB_write_control is not supported either\nway.\n\n2. Creating a pbuffer out of a D3D11 texture with the format\nDXGI_FORMAT_B8G8R8A8_UNORM_SRGB does not work, even though it was\nlisted as one of the supported formats in the\nEGL_ANGLE_d3d_texture_client_buffer spec. It's now mentioned that\nsupport for this format is optional.\n\nBUG=angleproject:2300\nTEST=angle_white_box_tests\n\nChange-Id: I70ee0646680805e4469291a5b2ce59e92fda009e\nReviewed-on: https://chromium-review.googlesource.com/866743\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/cf180fccb24adbe48080876074b7a9cbd3435ab5", "message": "Keep TIntermSymbol data consistent in DeferGlobalInitializers\n\nBUG=angleproject:2267\nTEST=angle_unittests\n\nChange-Id: I25bd8baded9c13e75555578e4b61b99a56e0c702\nReviewed-on: https://chromium-review.googlesource.com/850974\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/ea22b7a58bfde015d146c292a2ef65837d6e4aca", "message": "Constant fold array indexing and comparison\n\nA virtual function to get the constant value of an AST node is added\nto TIntermTyped. This way a constant value can be retrieved\nconveniently from multiple different types of nodes. TIntermSymbol\nnodes pointing to a const variable can return the value associated\nwith the variable, constructor nodes can build a constant value from\ntheir arguments, and indexing nodes can index into a constant array.\n\nThis enables constant folding operations on constant arrays, while\nmaking sure that large amounts of data are not duplicated in the\noutput shader. When folding an operation makes sense, the values of\nthe arguments can be retrieved by using the new\nTIntermTyped::getConstantValue(). When folding an operation would\nresult in duplicating data, the AST can just be left to be written out\nas is.\n\nFor example, if the code contains a constant array of arrays, indexing\ninto individual elements of the inner arrays can be folded, but\nindexing the top level array is left in place and not replaced with\nduplicated array literals.\n\nConstant folding is supported for indexing and comparisons of arrays.\n\nIn case constant arrays are only referenced through foldable\noperations, the variable declarations will be pruned from the AST by\nthe RemoveUnreferencedVariables step.\n\nBUG=angleproject:2298\nTEST=angle_unittests\n\nChange-Id: I5b3be237b7e9fdba56aa9bf0a41b691f4d8f01eb\nReviewed-on: https://chromium-review.googlesource.com/850973\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/ea78d2bb7a07660301ed407d4618f008b9f4395f", "message": "Prune unreferenced variables with a constructor initializer\n\nTreat aggregate constructors as having no side effects, which enables\npruning declarators that have a constructor initializer.\n\nSome logic in RemoveUnreferencedVariables is fixed to make this work\ncorrectly for structs. The bugs were previously not exposed since\nconstructors were treated as having side effects, but now that those\ncan be pruned the logic needs to be correct.\n\nBUG=angleproject:2298\nTEST=angle_unittests\n\nChange-Id: I6fbe61a9e82065196baa29c200bf556fc21d8962\nReviewed-on: https://chromium-review.googlesource.com/856499\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/c74ec1a5bbbd12541d19075b0d91a02f7e30bb14", "message": "Record gl_in array size in a symbol in ParseContext\n\nInstead of referring to the gl_in symbol in the symbol table, create\na gl_in symbol with the right array size once the array size is known.\nThis makes the type of TIntermSymbol nodes pointing to gl_in\nconsistent with the variable type.\n\nBUG=angleproject:2267\nTEST=angle_unittests\n\nChange-Id: I31673d33526a91f8d069ee8d7d2f181a49665fd0\nReviewed-on: https://chromium-review.googlesource.com/857004\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/0690e1aa31d4e0c9f1ab641e5c0dab75a79c026e", "message": "Add a workaround to clamp gl_FragDepth\n\nNVIDIA OpenGL drivers at least up to version 388.59 don't clamp\ngl_FragDepth when it is written to a floating point depth buffer.\nThis bug is now worked around by clamping gl_FragDepth in the shader\nif it is statically used.\n\nBUG=angleproject:2299\nTEST=angle_end2end_tests on NVIDIA\n\nChange-Id: I61589b2b0dd2813c4901a157c8d37e470063773c\nReviewed-on: https://chromium-review.googlesource.com/840842\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/b38dfde0a7237c32b9d6341e834276f486dc7948", "message": "Keep TIntermSymbol nodes consistent in PruneNoOps\n\nCreate new TVariables to change struct declaration qualifiers in\nPruneNoOps so that the node doesn't end up with an inconsistent\nqualifier from the variable.\n\nBUG=angleproject:2267\nTEST=angle_unittests\n\nChange-Id: I7f6cd557eb3e46f4ead4ffbe37d8960ff7776d10\nReviewed-on: https://chromium-review.googlesource.com/850673\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "xhcao": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/angle/commits/b745f172dd6870736e3d2e2112a9e908fdc7a74b", "message": "Add more test cases for bindImageTexture\n\nAdd cases that bindImageTexture binds a single layer of a\ntwo-dimensional array, three-dimensional, or cube map texture.\n\nBUG=angleproject:1987\nTEST=angle_end2end_tests.ComputeShaderTest.*\n\nChange-Id: I75883ef05c509100e5164a5add69167a41203101\nReviewed-on: https://chromium-review.googlesource.com/856320\nCommit-Queue: Geoff Lang <geofflang@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vonture": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/angle/commits/2aaa7b4e1040d90d5ef2dbd2ba53761d88528b79", "message": "Add GLES1 targets and stub entry points.\n\n * Create a new libGLESv1_CM target.\n * Merge all autogenerated extension entry points into one file.\n * Allow creation of ES1 contexts.\n\nBUG=angleproject:2306\n\nChange-Id: I446258363a96a3c37d657089dd7c1cff0fa3cf78\nReviewed-on: https://chromium-review.googlesource.com/865718\nCommit-Queue: Geoff Lang <geofflang@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/e1aa9219314249dcb79515b3bea6595b76c2a446", "message": "Create a new DeviceImpl each time one is requested from a DisplayImpl.\n\nThis makes sure that the Device to DeviceImpl ratio is always 1:1 and\navoids any potential double-deletion or unexpected deletion of\nDeviceImpl objects.\n\nBUG=742034\n\nChange-Id: I778068ccd09b7478d3683123456062b94be242a1\nReviewed-on: https://chromium-review.googlesource.com/854627\nCommit-Queue: Geoff Lang <geofflang@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nReviewed-by: Yuly Novikov <ynovikov@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/540a1dfe131e9b8fe32ed2ff27d41d88d4cf0af4", "message": "Refactor DeviceImpl creation.\n\nAdd an initialize function to match other impl objects and simplify the\ncreation of DeviceImpls.\n\nBUG=742034\n\nChange-Id: I569c8252d5d23c8af98835f6c08e7a3b640fc3f3\nReviewed-on: https://chromium-review.googlesource.com/854626\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Yuly Novikov <ynovikov@chromium.org>\nCommit-Queue: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/28334a410255628ead97b959e2b4b6adf14a99e6", "message": "Remove the externallyForced method of DeviceImpl.\n\nIt can be inferred from the presence of an owning display.\n\nBUG=742034\n\nChange-Id: I6a33378f4256733da6d9658d47763153e431ad70\nReviewed-on: https://chromium-review.googlesource.com/854625\nReviewed-by: Yuly Novikov <ynovikov@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nCommit-Queue: Geoff Lang <geofflang@chromium.org>"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/google/angle/issues/comments/249559048", "body": "Hey, sorry I didn't notice this but the ANGLE project only accepts patches on our code review site.  Please follow the directions here: https://chromium.googlesource.com/angle/angle/+/master/doc/ContributingCode.md\n", "reactions": {"url": "https://api.github.com/repos/google/angle/issues/comments/249559048/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/angle/issues/comments/264998500", "body": "Hey, we don't do pull requests though GitHub for ANGLE.  see https://chromium.googlesource.com/angle/angle/+/master/doc/ContributingCode.md#Life-of-a-Change-List for the documentation on how to upload to our code review tool if you're interested.", "reactions": {"url": "https://api.github.com/repos/google/angle/issues/comments/264998500/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/angle/issues/comments/306806345", "body": "Hey, we don't accept merge requests through github.  You can read about how to upload a CL to gerrit here: https://github.com/google/angle/blob/master/doc/ContributingCode.md#getting-started-with-gerrit-for-angle .  Thanks for signing the CLA, it will skip a step later.", "reactions": {"url": "https://api.github.com/repos/google/angle/issues/comments/306806345/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/angle/issues/comments/307594650", "body": "Hey, we don't accept merge requests through github. You can read about how to upload a CL to gerrit here: https://github.com/google/angle/blob/master/doc/ContributingCode.md#getting-started-with-gerrit-for-angle ", "reactions": {"url": "https://api.github.com/repos/google/angle/issues/comments/307594650/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/angle/issues/comments/343981204", "body": "Hey, the ANGLE project only accepts patches on our code review site. Please follow the directions here: https://github.com/google/angle/blob/master/doc/ContributingCode.md", "reactions": {"url": "https://api.github.com/repos/google/angle/issues/comments/343981204/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/angle/issues/comments/343981282", "body": "Hey, the ANGLE project only accepts patches on our code review site. Please follow the directions here: https://github.com/google/angle/blob/master/doc/ContributingCode.md", "reactions": {"url": "https://api.github.com/repos/google/angle/issues/comments/343981282/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/angle/issues/comments/343981650", "body": "Hey, the ANGLE project only accepts patches on our code review site. Please follow the directions here: https://github.com/google/angle/blob/master/doc/ContributingCode.md", "reactions": {"url": "https://api.github.com/repos/google/angle/issues/comments/343981650/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "fjhenigman": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/angle/commits/f661686c1ace66e22925d82d770fa00078f84ddd", "message": "Fix gyp/gcc build.\n\nGcc complains about an unused variable.\nAdjust a #include to work with the gyp build.\n\nBUG=none\n\nChange-Id: Ia94abf70f3a9bb7952eb53d1f0a3cfcca5df0836\nReviewed-on: https://chromium-review.googlesource.com/867655\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nCommit-Queue: Frank Henigman <fjhenigman@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/dda048cdc9a63089ce4590012ae44e8e4af2cddd", "message": "Make scripts executable by python2.\n\nAdd #!/usr/bin/python2 and the executable permission bit to all scripts\nwhere missing.\n\nBUG=angleproject:2209\n\nChange-Id: Ib33017c17e579c371b89bbfbdb7136b870027dc5\nReviewed-on: https://chromium-review.googlesource.com/862987\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Frank Henigman <fjhenigman@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/1ea85a1316cf4a783bf1887b1ae67e7beff41e15", "message": "Add #! line to scripts/bootstrap.py.\n\nIndicate scripts/bootstrap.py should be run by python2.\n\nTBR=jmadill@chromium.org\nBUG=angleproject:2209\n\nChange-Id: I2ccfee1407cd4ce457aa28a374ac202b8281d40b\nReviewed-on: https://chromium-review.googlesource.com/862618\nReviewed-by: Frank Henigman <fjhenigman@chromium.org>\nCommit-Queue: Frank Henigman <fjhenigman@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/ed1390f808b0f72b684a9a9fa896512525bc703f", "message": "Doc fix and improvement.\n\nOnly exact version of Windows SDK works.\nClarify how to do a release build.\n\nBUG=angleproject:2297\n\nChange-Id: I2566b7e807a84c4edc3b457299036e67a64b5a36\nReviewed-on: https://chromium-review.googlesource.com/852553\nCommit-Queue: Frank Henigman <fjhenigman@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/66e2f8f25f95a720d57c48950d1472d4a786b148", "message": "Fix doc typo.\n\nAdded missing quotes.\n\nBUG=angleproject:2297\n\nChange-Id: Ieb6ca4ae37786f48ad3c6f5dccefef25afce23a2\nReviewed-on: https://chromium-review.googlesource.com/852636\nReviewed-by: Yuly Novikov <ynovikov@chromium.org>\nCommit-Queue: Frank Henigman <fjhenigman@chromium.org>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "qjia7": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/angle/commits/4747414edae74cb1f8221527275b857c628a130d", "message": "Use dirty bit for element array buffer\n\nBUG=angleproject:2188\n\nChange-Id: I2b2aced542032c7c263f911ef1516af1d42190cc\nReviewed-on: https://chromium-review.googlesource.com/846346\nCommit-Queue: Geoff Lang <geofflang@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/cd3acf67d1dcdd0446f01fd9fe484608b6792c87", "message": "ES31: Update block members static use\n\nBUG=angleproject:1920\nTEST=angle_end2end_tests\n\nChange-Id: I90bcd3bf5a078623b3a739615fbc7b157b6fb94c\nReviewed-on: https://chromium-review.googlesource.com/808144\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Corentin Wallez <cwallez@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/5b6b9c638d4642fd76895883b24102e123c53b6d", "message": "Use dirty bit for draw indirect buffer\n\nBug: angleproject:1595\n\nChange-Id: I031beab818daca8a20726d7bff564649feefc1f3\nReviewed-on: https://chromium-review.googlesource.com/844214\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kvark": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/angle/commits/57f4b73ebe08bef3697086746d0e7a16ec7c94f0", "message": "Fix the format check in TextureD3D_2DArray::redefineImage\n\nNote: by the time the old code used to call `getBaseLevelInternalFormat`, the base level image has already been updated with `redefine()` call above, thus the check `internalformat != storageFormat` wasn't correct.\n\nChange-Id: I3da6df54490d6e72e5094388ed7e39a4c7d920d2\nReviewed-on: https://chromium-review.googlesource.com/862256\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nReviewed-by: Dzmitry Malyshau <dmalyshau@mozilla.com>\nCommit-Queue: Geoff Lang <geofflang@chromium.org>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "null77": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/angle/commits/f2f6d3799cf2f74706110bf73fbd90a659502fd3", "message": "Vulkan: Add PipelineDesc.\n\nThe PipelineDesc class is a 512-byte packed description of the entire\nVulkan pipeline state. It uses the alignas keyword and some static\nasserts to verify that the structures are packed. This ensures that\nwhen ANGLE uses MurmurHash to hash the entire struct, and memcmp to\ncheck for identity, that there are no garbage padding bits.\n\nThis CL does not implement the Pipeline cache, but it will help, since\nnow we have a packed type that can be used as the key to a hash map.\n\nBug: angleproject:2163\nChange-Id: I16efa927f08d30d89a9c4c8943edd211c6878ac8\nReviewed-on: https://chromium-review.googlesource.com/829893\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Frank Henigman <fjhenigman@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/2cc2a7273e4015a0cca93ac4c2b56557bd3bfa2a", "message": "common: Add aligned memory allocator.\n\nThis will be useful for the Vulkan pipeline state cache. This cache\nwants to pack the pipeline description very carefully into a specific\nnumber of bits, using the \"alignas\" keyword. Using this keyword\nrequires an aligned allocator, which we can lift from Chromium's\nbase/memory submodule.\n\nAlso includes a unittest copied from Chrome.\n\nBug: angleproject:2163\nChange-Id: I25976be4610636db3f43552bba23d823f5a49a24\nReviewed-on: https://chromium-review.googlesource.com/837944\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Frank Henigman <fjhenigman@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/949b4f07fd1ef5b208136fe38327c28c95f18928", "message": "Vulkan: Allow for no .git directory in build.\n\nThe SPIRV-Tools 'external revision generate' script is coded such that\nit assumes a .git folder is present. This causes a problem for the\ntarball build. We can fix this by using the same tooling we use for\nANGLE's commit id script to check if the .git directory is present\nbefore running the generator. If it is missing, we insert a hard-coded\ndummy header. Also use the 'DEPS' file as a placeholder for .git/HEAD\nto check if the current revision needs updating.\n\nBug: chromium:799620\nBug: angleproject:2237\nChange-Id: Icea8e9c66f1600df7dca2aaa45fe449f687f5b55\nReviewed-on: https://chromium-review.googlesource.com/854255\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/eeda03b624b9faa369d085dd3fe73bdf94fdc2c5", "message": "EGL: Remove internal enum for NULL driver.\n\nThis is now updated in Chrome, so we can remove the last uses.\n\nBug: angleproject:2159\nChange-Id: Ia31e42b8a685756ee70450be19a52248e3efa92f\nReviewed-on: https://chromium-review.googlesource.com/853119\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "y-novikov": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/angle/commits/b0accd45a92dd70932baf4eb6954114359caf9da", "message": "Flatten \"#pragma STDGL invariant(all)\" also for ESSL to ESSL translation\n\nAdreno's driver in Android Oreo follows the spec to the letter,\nand applies \"#pragma STDGL invariant(all)\" only to the outputs of\na fragment shader, causing InvariantAllBoth test to fail.\n\nSince the wording of the spec doesn't match the intended usage of this\npragma, ANGLE should flatten it to workaround spec conformant drivers.\n\nBUG=angleproject:1293\n\nChange-Id: I9f8ad44adc3b958204b88805dba8c5b7964b3d9f\nReviewed-on: https://chromium-review.googlesource.com/860920\nReviewed-by: Kenneth Russell <kbr@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Yuly Novikov <ynovikov@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/47c9888c35cac5b2a3741d0ddcdac4234a857058", "message": "Skip SimpleOperationTest.DrawQuadAndSwap on Linux Intel Vulkan\n\nWas flaky.\n\nBUG=angleproject:2301\n\nChange-Id: Id71cf6c43e133810c64535bbde494d12546b0adc\nReviewed-on: https://chromium-review.googlesource.com/854978\nReviewed-by: Yuly Novikov <ynovikov@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Yuly Novikov <ynovikov@chromium.org>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "JiangYizhou": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/angle/commits/0e1224c82c67aa9a85b571aa41af20ec16dc3911", "message": "fix bug for querying sample positions on D3D\n\nBUG=angleproject:2290\nTEST=dEQP-GLES31.functional.texture.multisample.samples_*.sample_position\nTEST=TextureMultisampleTestES31.CheckSamplePositions*\n\nChange-Id: If8b74c16d5c104215456e35b8922279be972cee3\nReviewed-on: https://chromium-review.googlesource.com/844062\nCommit-Queue: Geoff Lang <geofflang@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "googlebot": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/google/angle/issues/comments/246376198", "body": "Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit https://cla.developers.google.com/ to sign.**\n\nOnce you've signed, please reply here (e.g. `I signed it!`) and we'll verify.  Thanks.\n\n---\n- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n- If you signed the CLA as a corporation, please let us know the company's name.\n\n<!-- need_sender_cla -->\n", "reactions": {"url": "https://api.github.com/repos/google/angle/issues/comments/246376198/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/angle/issues/comments/246377120", "body": "CLAs look good, thanks!\n\n<!-- ok -->\n", "reactions": {"url": "https://api.github.com/repos/google/angle/issues/comments/246377120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/angle/issues/comments/264680603", "body": "Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed, please reply here (e.g. `I signed it!`) and we'll verify.  Thanks.\n\n---\n\n- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n- If you signed the CLA as a corporation, please let us know the company's name.\n\n<!-- need_sender_cla -->", "reactions": {"url": "https://api.github.com/repos/google/angle/issues/comments/264680603/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/angle/issues/comments/306695841", "body": "Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed, please reply here (e.g. `I signed it!`) and we'll verify.  Thanks.\n\n---\n\n- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n- If your company signed a CLA, they designated a Point of Contact who decides which employees are authorized to participate. You may need to contact the Point of Contact for your company and ask to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the project maintainer to go/cla#troubleshoot.\n- In order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again.\n\n<!-- need_sender_cla -->", "reactions": {"url": "https://api.github.com/repos/google/angle/issues/comments/306695841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/angle/issues/comments/306699405", "body": "CLAs look good, thanks!\n\n<!-- ok -->", "reactions": {"url": "https://api.github.com/repos/google/angle/issues/comments/306699405/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/angle/issues/comments/307584276", "body": "Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed, please reply here (e.g. `I signed it!`) and we'll verify.  Thanks.\n\n---\n\n- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n- If your company signed a CLA, they designated a Point of Contact who decides which employees are authorized to participate. You may need to contact the Point of Contact for your company and ask to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the project maintainer to go/cla#troubleshoot.\n- In order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again.\n\n<!-- need_sender_cla -->", "reactions": {"url": "https://api.github.com/repos/google/angle/issues/comments/307584276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/angle/issues/comments/320682509", "body": "Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed, please reply here (e.g. `I signed it!`) and we'll verify.  Thanks.\n\n---\n\n- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n- If your company signed a CLA, they designated a Point of Contact who decides which employees are authorized to participate. You may need to contact the Point of Contact for your company and ask to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the project maintainer to go/cla#troubleshoot.\n- In order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again.\n\n<!-- need_sender_cla -->", "reactions": {"url": "https://api.github.com/repos/google/angle/issues/comments/320682509/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/angle/issues/comments/343966759", "body": "Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed, please reply here (e.g. `I signed it!`) and we'll verify.  Thanks.\n\n---\n\n- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n- If your company signed a CLA, they designated a Point of Contact who decides which employees are authorized to participate. You may need to contact the Point of Contact for your company and ask to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the project maintainer to go/cla#troubleshoot.\n- In order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again.\n\n<!-- need_sender_cla -->", "reactions": {"url": "https://api.github.com/repos/google/angle/issues/comments/343966759/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/angle/issues/comments/343968118", "body": "We found a Contributor License Agreement for you (the sender of this pull request), but were unable to find agreements for the commit author(s).  If you authored these, maybe you used a different email address in the git commits than was used to sign the CLA ([login here](https://cla.developers.google.com/) to double check)?  If these were authored by someone else, then they will need to sign a CLA as well, and confirm that they're okay with these being contributed to Google.\nIn order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again.\n\n<!-- need_author_cla -->", "reactions": {"url": "https://api.github.com/repos/google/angle/issues/comments/343968118/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/angle/issues/comments/343968932", "body": "CLAs look good, thanks!\n\n<!-- ok -->", "reactions": {"url": "https://api.github.com/repos/google/angle/issues/comments/343968932/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "abpostelnicu": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/google/angle/issues/comments/246377114", "body": "I signed it!\n", "reactions": {"url": "https://api.github.com/repos/google/angle/issues/comments/246377114/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "daoshengmu": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/google/angle/issues/comments/306699395", "body": "I signed it!\n\nBest regards,\nDaosheng Mu\ndaoshengmu@gmail.com\n\nOn Wed, Jun 7, 2017 at 2:05 PM, googlebot <notifications@github.com> wrote:\n\n> Thanks for your pull request. It looks like this may be your first\n> contribution to a Google open source project. Before we can look at your\n> pull request, you'll need to sign a Contributor License Agreement (CLA).\n>\n> \ud83d\udcdd *Please visit https://cla.developers.google.com/\n> <https://cla.developers.google.com/> to sign.*\n>\n> Once you've signed, please reply here (e.g. I signed it!) and we'll\n> verify. Thanks.\n> ------------------------------\n>\n>    - If you've already signed a CLA, it's possible we don't have your\n>    GitHub username or you're using a different email address. Check your\n>    existing CLA data <https://cla.developers.google.com/clas> and verify\n>    that your email is set on your git commits\n>    <https://help.github.com/articles/setting-your-email-in-git/>.\n>    - If your company signed a CLA, they designated a Point of Contact who\n>    decides which employees are authorized to participate. You may need to\n>    contact the Point of Contact for your company and ask to be added to the\n>    group of authorized contributors. If you don't know who your Point of\n>    Contact is, direct the project maintainer to go/cla#troubleshoot.\n>    - In order to pass this check, please resolve this problem and have\n>    the pull request author add another comment and the bot will run again.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/google/angle/pull/6#issuecomment-306695841>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ABNGSVvOy3V_B0okFGzQ-Q1_kcuuBYfzks5sBj21gaJpZM4NyPqF>\n> .\n>\n", "reactions": {"url": "https://api.github.com/repos/google/angle/issues/comments/306699395/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "MortimerGoro": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/google/angle/issues/comments/322289517", "body": "Ups, will follow the contribution guide https://chromium.googlesource.com/angle/angle/+/master/doc/ContributingCode.md", "reactions": {"url": "https://api.github.com/repos/google/angle/issues/comments/322289517/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "shaforostoff": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/google/angle/issues/comments/343968104", "body": "I signed it!", "reactions": {"url": "https://api.github.com/repos/google/angle/issues/comments/343968104/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}}}}