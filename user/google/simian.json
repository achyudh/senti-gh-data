{"_default": {"1": {"kevthanewversi": {"issues": [{"url": "https://api.github.com/repos/google/simian/issues/75", "title": "High Sierra update fails", "body": "Pushing the High Sierra update to my client Macs fails even after setting a force install by date in Simian admin . I get the below log when I attempt to fetch updates. This is only started happening recently as I've been able to do prior Sierra updates. Just FYI, I have disabled automatic updates on the client Macs if it matters.\r\n\r\nCommand run on client Mac is > sudo `managedsoftwareupdate --applesuspkgsonly -vvv `                                                                                                    \r\n\r\n```\r\n: managedsoftwareupdate is configured to process Apple Software Updates only.\r\n\r\nChecking Apple Software Update catalog...\r\n\r\n    Caching CatalogURL https://cxxxxx.appspot.com/applesus/eyJoZWFkZXIiOiAib3NfdmVyc2lvbj0xMC4xMi42fHRyYWNrPXN0YWJsZSIsICJjb29raWVzIjogIkF1dGgxVG9rZW49TVRRMk1UY3pOVFEwTmpVNU5UQTFPRFk1TURnM056TXlOVGsyTlRFME5UazROalk0TlRVMDsgc2VjdXJlOyBodHRwb25seTsifQ==\r\n\r\n    Options: {'logging_function': <function display_debug2 at 0x10bbc4d70>, 'ignore_system_proxy': None, 'additional_headers': {'User-Agent': u'managedsoftwareupdate/2.8.2.2855 Darwin/16.7.0 (x86_64) (MacBookPro12,1)'}, 'file': '/tmp/munki_swupd_cache/mirror/apple.sucatalog.download', 'cache_data': {\r\n\r\n    \"last-modified\" = \"Wed, 01 Nov 2017 07:21:18 GMT\";\r\n\r\n}, 'url': u'https://cxxxxx.appspot.com/applesus/eyJoZWFkZXIiOiAib3NfdmVyc2lvbj0xMC4xMi42fHRyYWNrPXN0YWJsZSIsICJjb29raWVzIjogIkF1dGgxVG9rZW49TVRRMk1UY3pOVFEwTmpVNU5UQTFPRFk1TURnM056TXlOVGsyTlRFME5UazROalk0TlRVMDsgc2VjdXJlOyBodHRwb25seTsifQ==', 'follow_redirects': True, 'download_only_if_changed': True, 'can_resume': True}\r\n\r\n    URLSession_task_didReceiveChallenge_completionHandler_\r\n\r\n    Authentication challenge for Host: csquared-staging.appspot.com Realm: None AuthMethod: NSURLAuthenticationMethodServerTrust\r\n\r\n    Allowing OS to handle authentication request\r\n\r\n    Status: 304\r\n\r\n    Headers: {u'Cache-Control': u'no-cache', u'Server': u'Google Frontend', u'x-cloud-trace-context': u'49a03e3e67afbced7d428b59b24242ef', u'Date': u'Mon, 27 Nov 2017 09:09:39 GMT', u'alt-svc': u'hq=\":443\"; ma=2592000; quic=51303431; quic=51303339; quic=51303338; quic=51303337; quic=51303335,quic=\":443\"; ma=2592000; v=\"41,39,38,37,35\"', u'Content-Type': u'text/html; charset=utf-8'}\r\n\r\n    Item is unchanged on the server.\r\n\r\n    /tmp/munki_swupd_cache/mirror/apple.sucatalog already exists and is up-to-date.\r\n\r\nDownloading available Apple Software Updates...\r\n\r\n    softwareupdate cmd: ['/usr/local/munki/ptyexec', '/usr/sbin/softwareupdate', '--verbose', '-d', '-a']\r\n\r\n    Finding available software...\r\n\r\nERROR: softwareupdate error: 100\r\n\r\nERROR: Could not download all available Apple updates.\r\n\r\n    CheckForSoftwareUpdates result: False\r\n\r\nFinishing...\r\n\r\n    Getting info on currently installed applications...\r\n\r\n    Performing postflight tasks...\r\n\r\n    postflight stderr: WARNING:root:facter hostname empty; fetching from sys_config\r\n\r\nWARNING:root:Root CA Cert Chain was EMPTY!\r\n\r\nWARNING:root:facter hostname empty; fetching from sys_config\r\n\r\nDone.\r\n```", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/75/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "arubdesu": {"issues": [{"url": "https://api.github.com/repos/google/simian/issues/66", "title": "UpdateAppleSUSCatalog-related failures", "body": "This error is cropping up on a good number of machines running a relatively recent simian version:\r\n```py\r\nWARNING:root:Root CA Cert Chain was EMPTY!\r\nERROR:root:Failed to harvest Puppet SSL cert facter specified.\r\nWARNING:root:Root CA Cert Chain was EMPTY!\r\nTraceback (most recent call last):\r\n  File \"/usr/local/munki/simian_client.py\", line 87, in <module>\r\n    sys.exit(main(sys.argv[1:]))\r\n  File \"/usr/local/munki/simian_client.py\", line 73, in main\r\n    preflight.RunPreflight(runtype, server_url=server_url)\r\n  File \"/usr/local/munki/simian/lib/python2.7/site-packages/simian-2.5-py2.7.egg/simian/mac/client/preflight.py\", line 429, in RunPreflight\r\n    flight_common.UpdateAppleSUSCatalog(client)\r\n  File \"/usr/local/munki/simian/lib/python2.7/site-packages/simian-2.5-py2.7.egg/simian/mac/client/flight_common.py\", line 560, in UpdateAppleSUSCatalog\r\n    raise base_client.HTTPError\r\nsimian.client.client.HTTPError\r\n```\r\nAny hints as to why this http response is only failing for a handful of clients? I'm trying to correlate OS versions or other discrepancies, since it seems to be in a routine that is supposed to fetch the applicable SUS catalog. ", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/66/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/google/simian/pulls/comments/101343494", "body": "pardon, it's confusing because you're highlighting the code that handles the _previous_ version of facter, which is the same... I took another look just now, and any custom facts (as site and all of the ones Simian cares about are flat, un='structured' facts,) are resolved on facter3/puppet4 with the dictionary lookup on what `json.loads()` returns...", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/101343494/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/103030169", "body": "old facter's `--json` doesn't include the site custom fact in our env. Updating now to loosely validate it's at least a string.  ", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/103030169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "groob": {"issues": [{"url": "https://api.github.com/repos/google/simian/issues/65", "title": "simian client does not support SNI ", "body": "I have a SNI certificate bundle on the appengine side. This requires connecting with the -servername param. \r\n\r\nI tried to see if I could make a change with M2Crypto in the client.py code, but it looks like SNI is not a supported M2Crypto option, at least not in the version of the bundled library. \r\n\r\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/65/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/63", "title": "Install documentation/makefile out of date", "body": "I completed a simian install to AppEngine today and ran into several issues that require updates or fixes: \r\n\r\n- The AppEngine instructions are not matching the documentation for installing python apps with `gcloud`. \r\nThe steps described [here](https://github.com/google/simian/wiki/Admin-Setup) require downloading a legacy launcher. AppEngine now is part of the `gcloud app` subcommand.\r\n\r\n- custom domains\r\nIf you're using a custom domain with app-engine, the project ID is _not_ the subdomain. \r\nI had to modify `src/simian/util/appid_generator.py` because it was combining the project ID with a domain part, but the app.yml should match the following:\r\n```\r\napplication: your-gcp-project-id\r\n```\r\n\r\nFor reference, I use `acme-corp` as the Project ID, but my simian install is served from `munki.corp.acme.co`.", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/63/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nathanperkins": {"issues": [{"url": "https://api.github.com/repos/google/simian/issues/54", "title": "\"make test\" results in error \"ValueError: jpeg is required unless explicitly disabled using --disable-jpeg, aborting\"", "body": "I had this problem and saw it in a [thread on Simian-discuss](https://groups.google.com/forum/#!searchin/simian-discuss/jpeg/simian-discuss/C6rv0DYgQGI/BTFeZjhjAgAJ).\n\n**Issue**\nPillow added a dependency on a \"jpeg\" package that has to be installed with brew. This dependency should be integrated into the install or appropriate instructions should be added to the setup instructions.\n\n**How to replicate**\n1. Follow the install instructions on a fresh copy of El Capitan up to the `make test` portion.\n2. Attempt to run `make test`, it will fail with error `ValueError: jpeg is required unless explicitly disabled using --disable-jpeg, aborting`\n3. Install the `jpeg` package using brew.\n4. Rerun `make test`, it will work.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/54/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/53", "title": "Internal Server Error (500) when accessing a manifest with no packages", "body": "**Issue**\nWhen an admin accesses a manifest with no packages, they get an internal server error (500), instead of a page.\n\n**How to replicate**\nAttempt to access the \"view stable\" page on an instance that does not have packages yet. You will receive an internal server error.\n\nI wouldn't consider this a high-priority because the problem goes away once you have packages :)\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/53/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/52", "title": "ACL groups are case-sensitive", "body": "**Issue**\n\nGoogle users are allowed to specify capitalization of the email login for their accounts (e.g, Nathan.Perkins@gmail.com). The usernames for Simian's ACL groups are case-sensitive. This can be a confusing bug if an admin enters users in lowercase, but Google expects capitalization.\n\n**How to replicate**\n1. Log in to Simian as admin and open the ACL groups config page.\n2. If you have a user whose email login is stored on Google as `First.Last@gmail.com`, enter it as `first.last@gmail.com`.\n3. Log out and log back in as First.Last@gmail.com\n4. You will not have access.\n5. Change the ACL entry to `First.Last@gmail.com` and log back in.\n6. You will have access.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/52/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/51", "title": "Add option to logout", "body": "**Issue**\nI don't see an option to log out of Simian Admin. I have to clear my browser history to logout or change users.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/51/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/50", "title": "Better handling for access issues", "body": "**Issue**\nWhen logged in as a restricted user, trying to open some restricted pages will give a generic error or Internal Server Error (500). Messaging could be improved by returning a page that states the current user is in a group that does not have access to the resource.\n\n**How to replicate**\n1. Attempt to login as a user that has no access.\nor\n1. Create a support user in the ACLs and login as that user.\n2. Attempt to access the ACL page.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/50/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "selfcommit": {"issues": [{"url": "https://api.github.com/repos/google/simian/issues/47", "title": "CA authority as part of Simian", "body": "This issue is being presented as an opportunity for the Github community to make any further suggestions about implementation before an attempt is made to implement a solution.  \n\n**Work will start on or about July 13**\n\nDetails from the [Simian feature request doc](https://docs.google.com/document/d/1NgxxvQ6yY53ns-tuPAj-9qAAkpUrINpGu8qYoxO6hY4/edit#heading=h.h870jkmhvsw7) are below:\n\nProblem:\nA major hurtle to small shops using Simian is establishment of a common CA to sign client certificates.   While many shops simply use puppet, it would be better to include a CA option on the simian server. \n\nSolution:\nCreate a solution to perform X509 signing requests.\n\nConstraints:\n- Must run entirely in python (No local openssl lib available on appengine)\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/47/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/46", "title": "Apple Updates URL cannot be local file", "body": "This issue is being presented as an opportunity for the Github community to make any further suggestions about implementation before an attempt is made to implement a solution.  \n\n**Work will start on or about July 13**\n\nDetails from the [Simian feature request doc](https://docs.google.com/document/d/1NgxxvQ6yY53ns-tuPAj-9qAAkpUrINpGu8qYoxO6hY4/edit#heading=h.h870jkmhvsw7) are below:\n\nProblem:\nApple SoftwareUpdateServerURL can not be a local file, as of OSX 10.11\nThis leaves only a public, or otherwise unauthenticated URL as the only working option. \nIt is [NOT recommended](https://github.com/munki/munki/wiki/Apple-Software-Updates-With-Munki) to use a public URL, as this provides an attack surface.\n\nSolution:\nUse Simian's token system to generate a client specific, and short lived url for apple updates.  \n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/46/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/45", "title": "Key Management for package encryption", "body": "This issue is being presented as an opportunity for the Github community to make any further suggestions about implementation before an attempt is made to implement a solution.  \n\n**Work will start on or about July 13**\n\nDetails from the [Simian feature request doc](https://docs.google.com/document/d/1NgxxvQ6yY53ns-tuPAj-9qAAkpUrINpGu8qYoxO6hY4/edit#heading=h.h870jkmhvsw7) are below:\n\nProblem:\nCrypto signing manifests, catalogs and packages is a desirable but not currently implemented feature.\n\nOn a static munki server,  the admin has access to their own server and likely trusts the hardware, and it likely may be on customer premises.\n\nSimian is auto generating manifests, auto concat'ing catalogs, etc, there becomes a question of not only where to store both public and private keys, but also how to design the {client,cloud,admin} workflow such that an org running Simian can earn _real_ increased certainty that their fleet only runs legit pkgs.\n\nSolution:\nDevelop a method of key management that is effective in a  cloud computing environment (such as Appengine)\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/45/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/44", "title": "Filter Packages Admin by Catalog and/or Manifest", "body": "This issue is being presented as an opportunity for the Github community to make any further suggestions about implementation before an attempt is made to implement a solution.  \n\n**Work will start on or about July 13**\n\nDetails from the [Simian feature request doc](https://docs.google.com/document/d/1NgxxvQ6yY53ns-tuPAj-9qAAkpUrINpGu8qYoxO6hY4/edit#heading=h.h870jkmhvsw7) are below:\n\nProblem:\nFor instances where many (>100) packages are present, identifying packages targeted at a particular track of devices requires a lot of scrolling.\n\nSolution:\nAdd filtering functionality to the UI to only display packages which are targeted to a set of catalogs and/or manifest.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/44/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/43", "title": "Orphan File Checker", "body": "This issue is being presented as an opportunity for the Github community to make any further suggestions about implementation before an attempt is made to implement a solution.  \n\n**Work will start on or about July 13**\n\nDetails from the [Simian feature request doc](https://docs.google.com/document/d/1NgxxvQ6yY53ns-tuPAj-9qAAkpUrINpGu8qYoxO6hY4/edit#heading=h.h870jkmhvsw7) are below:\n\nProblem:\nNo clear indication if changes in the XML of of Munki Package will also clear a previously uploaded file. \n\nSolution:\nCreate an \u201corphan file check\u201d That compares expected package files to existing bucket files and removes any orphans.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/43/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/42", "title": "Support Payload-less Packages", "body": "This issue is being presented as an opportunity for the Github community to make any further suggestions about implementation before an attempt is made to implement a solution.  \n\n**Work will start on or about July 13**\n\nDetails from the [Simian feature request doc](https://docs.google.com/document/d/1NgxxvQ6yY53ns-tuPAj-9qAAkpUrINpGu8qYoxO6hY4/edit#heading=h.h870jkmhvsw7) are below:\n\nProblem:\nhttps://groups.google.com/forum/?fromgroups#!topic/simian-discuss/hT8IJjGtUmk\nNot only does plist.PackageInfo enforce installer_item_(location|hash), but the admin UI also doesn't allow packages without associated DMGs to be placed into catalogs/manifests, etc.  \n\nWorkaround:\nUpload a dummy DMG.\n\nSolution:\nFirst, we need to make installer_item_\\* optional, and next we need to create a way for admins to opt to not upload a package DMG and still make the package deployable.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/42/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/41", "title": "Report package download failures, supervisor kills, re-installs & low disk space", "body": "This issue is being presented as an opportunity for the Github community to make any further suggestions about implementation before an attempt is made to implement a solution.  \n\n**Work will start on or about July 13**\n\nDetails from the [Simian feature request doc](https://docs.google.com/document/d/1NgxxvQ6yY53ns-tuPAj-9qAAkpUrINpGu8qYoxO6hY4/edit#heading=h.h870jkmhvsw7) are below:\n\nProblem:\nCurrently, when there is insufficient space to download or install a package, it\u2019s not very noticable by the end user.\n\nThe munki client can fail to download a package for a wide number of reasons.  Some of these are intermittent, but sometimes particular packages, computers, or networks are problematic.  \n\nPackages may be misconfigured (i.e. missing pkginfo installs key) or unexpected machine state may cause packages to repeatedly and perpetually redownload and reinstall, regardless of success.\n\nThe simian client does not report all installed .plists in an easy to search way. \n\nSolution:\nupdate the simian client to collect more data about installs / state of a client. \nThat data should also be made easily available in the web UI\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/41/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/40", "title": "Tag organization & tagging constraints", "body": "This issue is being presented as an opportunity for the Github community to make any further suggestions about implementation before an attempt is made to implement a solution.  \n\n**Work will start on or about July 13**\n\nDetails from the [Simian feature request doc](https://docs.google.com/document/d/1NgxxvQ6yY53ns-tuPAj-9qAAkpUrINpGu8qYoxO6hY4/edit#heading=h.h870jkmhvsw7) are below:\n\nProblem:\nTags are currently a bit difficult to manage.\n\nTagging currently does not respect database constraints (Generating a tagged computer can happen multiple times in a single tag)\n\nSolution:\nCreate a better hierarchy for tag management.  \nRevise the tagging data model\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/40/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/google/simian/pulls/55", "title": "Add example on_corp_cmp script with comments", "body": "I missed creating an issue for this from the [Simian requests document](https://docs.google.com/document/d/1NgxxvQ6yY53ns-tuPAj-9qAAkpUrINpGu8qYoxO6hY4/edit#heading=h.qrolf4z3urpd)\n\nThis was quick and easy, more PR's coming this week for other issues.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Rumbles": {"issues": [{"url": "https://api.github.com/repos/google/simian/issues/36", "title": "Loading Apple Updates > Catalogue Admin stalls and returns an error", "body": "I installed Simian last week to test it, today I was writing up documentation on how I set it up and the Apple Updates page wouldn't load. In the browser I get:\n\n```\nTraceback (most recent call last):\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/1/google/appengine/runtime/wsgi.py\", line 267, in Handle\n    result = handler(dict(self._environ), self._StartResponse)\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/third_party/webapp2-2.5.2/webapp2.py\", line 1529, in __call__\n    rv = self.router.dispatch(request, response)\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/third_party/webapp2-2.5.2/webapp2.py\", line 1278, in default_dispatcher\n    return route.handler_adapter(request, response)\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/third_party/webapp2-2.5.2/webapp2.py\", line 1102, in __call__\n    return handler.dispatch()\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/third_party/webapp2-2.5.2/webapp2.py\", line 570, in dispatch\n    return method(*args, **kwargs)\n  File \"/base/data/home/apps/e~thefloow-simian/f8bfa254267e.393014033104675667/simian/mac/admin/applesus.py\", line 186, in get\n    self._DisplayMain()\n  File \"/base/data/home/apps/e~thefloow-simian/f8bfa254267e.393014033104675667/simian/mac/admin/applesus.py\", line 204, in _DisplayMain\n    p.testing_promote_date = applesus.GetAutoPromoteDate(common.TESTING, p)\n  File \"/base/data/home/apps/e~thefloow-simian/f8bfa254267e.393014033104675667/simian/mac/common/applesus.py\", line 306, in GetAutoPromoteDate\n    if not settings.APPLE_AUTO_PROMOTE_ENABLED:\n  File \"/base/data/home/apps/e~thefloow-simian/f8bfa254267e.393014033104675667/simian/settings.py\", line 382, in __getattr__\n    return self._Get(str(k).lower())\n  File \"/base/data/home/apps/e~thefloow-simian/f8bfa254267e.393014033104675667/simian/settings.py\", line 805, in _Get\n    item, unused_mtime = self._module.models.Settings.GetItem(k)\n  File \"/base/data/home/apps/e~thefloow-simian/f8bfa254267e.393014033104675667/simian/mac/models/settings.py\", line 274, in GetItem\n    value, mtime = cls.GetSerializedItem(name)\n  File \"/base/data/home/apps/e~thefloow-simian/f8bfa254267e.393014033104675667/simian/mac/models/base.py\", line 734, in GetSerializedItem\n    entity = cls.MemcacheWrappedGet(key)\n  File \"/base/data/home/apps/e~thefloow-simian/f8bfa254267e.393014033104675667/simian/mac/models/base.py\", line 141, in MemcacheWrappedGet\n    cached = memcache.get(memcache_key)\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/1/google/appengine/api/memcache/__init__.py\", line 560, in get\n    results = rpc.get_result()\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/1/google/appengine/api/apiproxy_stub_map.py\", line 613, in get_result\n    return self.__get_result_hook(self)\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/1/google/appengine/api/memcache/__init__.py\", line 616, in __get_hook\n    rpc.check_success()\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/1/google/appengine/api/apiproxy_stub_map.py\", line 584, in check_success\n    self.__stubmap.GetPostCallHooks().Call(self.__service, self.__method,\nDeadlineExceededError: The overall deadline for responding to the HTTP request was exceeded.\n```\n\nLooking at this in the AppEngine console, I get the following:\n\n```\nTraceback (most recent call last):\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/1/google/appengine/runtime/wsgi.py\", line 267, in Handle\n    result = handler(dict(self._environ), self._StartResponse)\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/third_party/webapp2-2.5.2/webapp2.py\", line 1529, in __call__\n    rv = self.router.dispatch(request, response)\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/third_party/webapp2-2.5.2/webapp2.py\", line 1278, in default_dispatcher\n    return route.handler_adapter(request, response)\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/third_party/webapp2-2.5.2/webapp2.py\", line 1102, in __call__\n    return handler.dispatch()\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/third_party/webapp2-2.5.2/webapp2.py\", line 570, in dispatch\n    return method(*args, **kwargs)\n  File \"/base/data/home/apps/e~thefloow-simian/f8bfa254267e.393014033104675667/simian/mac/admin/applesus.py\", line 186, in get\n    self._DisplayMain()\n  File \"/base/data/home/apps/e~thefloow-simian/f8bfa254267e.393014033104675667/simian/mac/admin/applesus.py\", line 204, in _DisplayMain\n    p.testing_promote_date = applesus.GetAutoPromoteDate(common.TESTING, p)\n  File \"/base/data/home/apps/e~thefloow-simian/f8bfa254267e.393014033104675667/simian/mac/common/applesus.py\", line 306, in GetAutoPromoteDate\n    if not settings.APPLE_AUTO_PROMOTE_ENABLED:\n  File \"/base/data/home/apps/e~thefloow-simian/f8bfa254267e.393014033104675667/simian/settings.py\", line 382, in __getattr__\n    return self._Get(str(k).lower())\n  File \"/base/data/home/apps/e~thefloow-simian/f8bfa254267e.393014033104675667/simian/settings.py\", line 805, in _Get\n    item, unused_mtime = self._module.models.Settings.GetItem(k)\n  File \"/base/data/home/apps/e~thefloow-simian/f8bfa254267e.393014033104675667/simian/mac/models/settings.py\", line 274, in GetItem\n    value, mtime = cls.GetSerializedItem(name)\n  File \"/base/data/home/apps/e~thefloow-simian/f8bfa254267e.393014033104675667/simian/mac/models/base.py\", line 734, in GetSerializedItem\n    entity = cls.MemcacheWrappedGet(key)\n  File \"/base/data/home/apps/e~thefloow-simian/f8bfa254267e.393014033104675667/simian/mac/models/base.py\", line 141, in MemcacheWrappedGet\n    cached = memcache.get(memcache_key)\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/1/google/appengine/api/memcache/__init__.py\", line 560, in get\n    results = rpc.get_result()\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/1/google/appengine/api/apiproxy_stub_map.py\", line 613, in get_result\n    return self.__get_result_hook(self)\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/1/google/appengine/api/memcache/__init__.py\", line 616, in __get_hook\n    rpc.check_success()\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/1/google/appengine/api/apiproxy_stub_map.py\", line 577, in check_success\n    self.wait()\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/1/google/appengine/api/apiproxy_stub_map.py\", line 556, in wait\n    assert self.__rpc.state == apiproxy_rpc.RPC.FINISHING, repr(self.state)\nDeadlineExceededError: The overall deadline for responding to the HTTP request was exceeded.\n```\n\nOn one of the errors I've managed to generate in AppEngine I got the following (none of the others I have seen reported this):\n\n```\nThis request caused a new process to be started for your application, and thus caused your application code to be loaded for the first time. This request may thus take longer and use more CPU than a typical request for your application.\n```\n\nI've waited over an hour for this code to finish running, but it still loads the same/similar error.\n\nWhen I first ran in to this issue, I did try running `make release` again just in case something was wrong with my deployment, but I get the same issue. I checked I was on the latest branch at the time.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/36/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/35", "title": "preflight barfs if hostname has '", "body": "As per:\n\nhttps://groups.google.com/d/msg/simian-discuss/cm6SDsBM3dA/HRLpAjyeFgAJ\n\nIf the client hostname contains a ' symbol (which is Mac default), preflight barfs:\n\nadmin$ sudo /usr/local/munki/preflight --debug\nWARNING:root:facter hostname empty; fetching from sys_config\nTraceback (most recent call last):\nFile \"/usr/local/munki/simian_client.py\", line 87, in\nsys.exit(main(sys.argv[1:]))\nFile \"/usr/local/munki/simian_client.py\", line 73, in main\npreflight.RunPreflight(runtype, server_url=server_url)\nFile \"/usr/local/munki/simian/lib/python2.7/site-packages/simian-2.4-py2.7.egg/simian/mac/client/preflight.py\", line 371, in RunPreflight\nsecure_config, client_id, user_settings, client_exit)\nFile \"/usr/local/munki/simian/lib/python2.7/site-packages/simian-2.4-py2.7.egg/simian/mac/client/preflight.py\", line 114, in LoginToServer\nclient_id_str = flight_common.DictToStr(client_id)\nFile \"/usr/local/munki/simian/lib/python2.7/site-packages/simian-2.4-py2.7.egg/simian/mac/client/flight_common.py\", line 530, in DictToStr\nvalue = value.decode('utf-8')\nFile \"/usr/local/munki/simian/lib/python2.7/encodings/utf_8.py\", line 16, in decode\nreturn codecs.utf_8_decode(input, errors, True)\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\u2019' in position 5: ordinal not in range(128)\n\nRunning current clone, on OS X 10.11\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/35/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "YehudaBialik": {"issues": [{"url": "https://api.github.com/repos/google/simian/issues/32", "title": "Document or script steps for uninstalling Simian", "body": "How does one who had munki installed and running, and then added simian, go back to just munki?\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/32/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mholttech": {"issues": [{"url": "https://api.github.com/repos/google/simian/issues/31", "title": "Unicode characters in pkginfo description may cause package modification notification emails to fail", "body": "I'm getting an error 500 when I copy/paste a pkginfo file.  Uploading the file works perfectly\n\nHere is the log:\n\n```\n2015-10-15 20:34:48.592 /admin/package 500 261ms 0kb instance=0 Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.71 Safari/537.36 module=default version=a56a3dc98d87\n100.43.220.122 - mholt [15/Oct/2015:20:34:48 -0700] \"POST /admin/package HTTP/1.1\" 500 225 - \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.71 Safari/537.36\" \"rlc-simian.appspot.com\" ms=261 cpu_ms=53 cpm_usd=0.000025 instance=0 app_engine_release=1.9.27 \nW 2015-10-15 20:34:48.418\nNo admins defined! Configure admins in Admin Tools -> ACL Groups.\nW 2015-10-15 20:34:48.446\nNo admins defined! Configure admins in Admin Tools -> ACL Groups.\nE 2015-10-15 20:34:48.590\n'ascii' codec can't encode character u'\\xae' in position 726: ordinal not in range(128)\nTraceback (most recent call last):\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/third_party/webapp2-2.5.2/webapp2.py\", line 1535, in __call__\n    rv = self.handle_exception(request, response, e)\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/third_party/webapp2-2.5.2/webapp2.py\", line 1529, in __call__\n    rv = self.router.dispatch(request, response)\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/third_party/webapp2-2.5.2/webapp2.py\", line 1278, in default_dispatcher\n    return route.handler_adapter(request, response)\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/third_party/webapp2-2.5.2/webapp2.py\", line 1102, in __call__\n    return handler.dispatch()\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/third_party/webapp2-2.5.2/webapp2.py\", line 572, in dispatch\n    return self.handle_exception(e, self.app.debug)\n  File \"/base/data/home/apps/s~rlc-simian/a56a3dc98d87.387476931731189739/simian/mac/admin/__init__.py\", line 153, in handle_exception\n    super(AdminHandler, self).handle_exception(exception, debug_mode)\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/third_party/webapp2-2.5.2/webapp2.py\", line 570, in dispatch\n    return method(*args, **kwargs)\n  File \"/base/data/home/apps/s~rlc-simian/a56a3dc98d87.387476931731189739/simian/mac/admin/package.py\", line 170, in post\n    self.UpdatePackageInfoFromPlist(create_new=True)\n  File \"/base/data/home/apps/s~rlc-simian/a56a3dc98d87.387476931731189739/simian/mac/admin/package.py\", line 380, in UpdatePackageInfoFromPlist\n    self.NotifyAdminsOfPackageChangeFromPlist(plist_xml)\n  File \"/base/data/home/apps/s~rlc-simian/a56a3dc98d87.387476931731189739/simian/mac/admin/package.py\", line 283, in NotifyAdminsOfPackageChangeFromPlist\n    main_body = str(plist.GetXml(indent_num=2))\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\xae' in position 726: ordinal not in range(128)\n```\n\nHere is the plist:\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n<dict>\n    <key>_metadata</key>\n    <dict>\n        <key>created_by</key>\n        <string>admin</string>\n        <key>creation_date</key>\n        <date>2015-10-16T02:58:46Z</date>\n        <key>munki_version</key>\n        <string>2.3.1.2535</string>\n        <key>os_version</key>\n        <string>10.10.3</string>\n    </dict>\n    <key>autoremove</key>\n    <false/>\n    <key>catalogs</key>\n    <array>\n        <string>unstable</string>\n    </array>\n    <key>description</key>\n    <string>Adobe\u00ae Flash\u00ae Player is a cross-platform browser-based application runtime that delivers uncompromised viewing of expressive applications, content, and videos across screens and browsers.</string>\n    <key>display_name</key>\n    <string>Adobe Flash Player</string>\n    <key>installed_size</key>\n    <integer>17140</integer>\n    <key>installer_item_hash</key>\n    <string>b5eca33f72b1b419a7f9754b53cc8780b03e351520f189a43986a9e1f2aa22fa</string>\n    <key>installer_item_location</key>\n    <string>AdobeFlashPlayer-19.0.0.207.dmg</string>\n    <key>installer_item_size</key>\n    <integer>16364</integer>\n    <key>minimum_os_version</key>\n    <string>10.5.0</string>\n    <key>name</key>\n    <string>AdobeFlashPlayer</string>\n    <key>package_path</key>\n    <string>Install Adobe Flash Player.app/Contents/Resources/Adobe Flash Player.pkg</string>\n    <key>receipts</key>\n    <array>\n        <dict>\n            <key>installed_size</key>\n            <integer>17140</integer>\n            <key>packageid</key>\n            <string>com.adobe.pkg.FlashPlayer</string>\n            <key>version</key>\n            <string>19.0.0.207</string>\n        </dict>\n    </array>\n    <key>unattended_install</key>\n    <true/>\n    <key>uninstall_method</key>\n    <string>removepackages</string>\n    <key>uninstallable</key>\n    <true/>\n    <key>version</key>\n    <string>19.0.0.207</string>\n</dict>\n</plist>\n```\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/31/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/21", "title": "Facter Issue", "body": "RE: https://groups.google.com/forum/#!topic/simian-discuss/MPgc47amP2o\n\nI figured I should move this conversation over to here since it seems to be a problem in the code.\n\nI've narrowed it down to CacheFacterContents not liking the output of /usr/local/bin/simianfacter\n\nI changed Line 331/332 to:\n\n```\n  return_code, stdout, unused_stderr = Exec(\n      ['facter', '-p'], timeout=300, waitfor=0.5)\n```\n\nand we are now pulling in facter facts, however I realize that this bypasses the failsafe of pulling in unspecified settings from simina/settings.cfg\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/21/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "thedavidmeister": {"issues": [{"url": "https://api.github.com/repos/google/simian/issues/16", "title": "Ability to see a list of all clients in the Simian web UI without needing to provide search parameters", "body": "The summary page should list all clients (paginated of course) in the same way that clients are listed after using the search functionality (but not filtered).\n\nCurrently, it's a pain to browse through all clients - which might be less useful for large organisations but would be very useful for small-medium businesses and also new users finding their way around the UI for the first time.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/16/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "juofmgoblue": {"issues": [{"url": "https://api.github.com/repos/google/simian/issues/3", "title": "Validate MD5 of Munki downloads from munkibuilds.org", "body": "From Google Code:\n\nReported by tim@synthist.net, Feb 24, 2014\nJust a couple security-related notices for fetching from munkibuilds.org:\n\nhttps://code.google.com/p/simian/source/browse/trunk/Makefile#116\n\nmunkibuilds.org now has a valid SSL cert and can be accessed over HTTPS.\n\nAlso, the MD5's of all download DMGs are published at the 'MD5' URL for each build, so you could verify them, for example using 'md5 -q'.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/3/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/google/simian/issues/comments/59738775", "body": "Is there anything relevant in /var/log/install.log ?\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/59738775/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/59741923", "body": "In that case, there should also be a log named something like /tmp/_postflight_ (apologies, I forget the exact name scheme).  If it's not an obvious and quick fix, I'll re-enable the Google Code SVN repo for you.  But I can't see any postflight changes recently that could be a culprit...\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/59741923/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/59742939", "body": "Ah, yes, we haven't build an M2Crypto egg for 10.10 yet.  I'll do that in\n30 min or so.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/59742939/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/59751705", "body": "Bah!  10.10's openssl is lacking headers, so building M2Crypto-0.22.3 fails:\n\n```\n$ python2.6 setup.py bdist_egg\nrunning bdist_egg\nrunning egg_info\nwriting M2Crypto.egg-info/PKG-INFO\nwriting top-level names to M2Crypto.egg-info/top_level.txt\nwriting dependency_links to M2Crypto.egg-info/dependency_links.txt\nreading manifest file 'M2Crypto.egg-info/SOURCES.txt'\nreading manifest template 'MANIFEST.in'\nwriting manifest file 'M2Crypto.egg-info/SOURCES.txt'\ninstalling library code to build/bdist.macosx-10.10-intel/egg\nrunning install_lib\nrunning build_py\nrunning build_ext\nbuilding 'M2Crypto.__m2crypto' extension\nswigging SWIG/_m2crypto.i to SWIG/_m2crypto_wrap.c\nswig -python -I/System/Library/Frameworks/Python.framework/Versions/2.6/include/python2.6 -I/usr/include -I/usr/include/openssl -includeall -modern -o SWIG/_m2crypto_wrap.c SWIG/_m2crypto.i\nSWIG/_m2crypto.i:30: Error: Unable to find 'openssl/opensslv.h'\nSWIG/_m2crypto.i:33: Error: Unable to find 'openssl/safestack.h'\nSWIG/_evp.i:12: Error: Unable to find 'openssl/opensslconf.h'\nSWIG/_ec.i:7: Error: Unable to find 'openssl/opensslconf.h'\nerror: command 'swig' failed with exit status 1\n```\n\nI can probably still get this done today, but I have to head into the office now.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/59751705/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/59770790", "body": "Here's what I get when disabling obfuscation during JS compilation:\n\n```\ngoog.require could not find: simian.menu simian.js:9\nUncaught Error: goog.require could not find: simian.menu simian.js:10\nGET https://simiandemohr.appspot.com/deps.js  simian.js:19\nUncaught TypeError: Cannot read property 'updateMenu' of undefined admin:14\nUncaught TypeError: undefined is not a function \n```\n\nSo it's related to simian.menu not being provided for some reason (menu.js)\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/59770790/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/59783084", "body": "You'll need to rebuild the client dmg/pkg, but this revision should fix support for installations on 10.10: https://github.com/google/simian/commit/92b59c0f1f2ab6f7dc5e7b1e026fa547d9dbf369\n\nPlease let me know :)\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/59783084/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/59787822", "body": "Great!  Thanks for the quick confirmation.   Working on the JavaScript issue now...\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/59787822/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/59794177", "body": "Can you try this again please?  I made some small (and I think unrelated) changes in https://github.com/google/simian/commit/f613661be38caa178d095f4a78e4d7fa67cef95a and this appears to be working for me.  I have one other change in my Git client, but reverting that doesn't resurface the issue. These files haven't changed in ages, but the Google Code URL to fetch the raw files still seems to work. \n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/59794177/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/59929575", "body": "Great! \n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/59929575/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/59932159", "body": "SSL validation was added on Feb 26th.  MD5 validation is still pending.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/59932159/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/60604778", "body": "We have this functionality in our internal build and hope to release it soon.  It's a little rough around the edges, so we want to ensure it's finalized first.\n\nIn the interim, you can hand-edit the plists (\"Edit Pkginfo XML\" button), and add something like this:\n\n```\n    <key>category</key>\n    <string>Productivity</string>\n```\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/60604778/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/68883179", "body": "Added support here: b19f15bc2996c9878802d26ca02722176b3cb029\n\nThanks for the report!\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/68883179/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/69929578", "body": "Yes.  There used to be common.cfg, client.cfg and server.cfg, but we combined them into settings.cfg: https://github.com/google/simian/blob/master/etc/simian/settings.cfg\n\nFixed: https://github.com/google/simian/wiki/SimianAndCertificates\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/69929578/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/69933668", "body": "For the required_issuer field, instead of:\n   /C=AU/ST=Some-State/O=Internet Widgits Pty Ltd\nYou'd need:\n  C=AU,ST=Some-State,O=Internet Widgits Pty Ltd\n\nSimply omit any leading slash, and swap the rest of them for commas.  Does that help? \n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/69933668/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/69935574", "body": "Yes, that's right!\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/69935574/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/69935592", "body": "Yep, that's right.\n\nOn Wed, Jan 14, 2015 at 10:42 AM, maryniewskij notifications@github.com\nwrote:\n\n> The full DN of the CA that Simian certificates are signed by.\n> \n> required_issuer = CN=ca-server.tapestryschool.org\n> \n> Thats what I had in the settings.cfg file. Do I change \"CN=\n> ca-server.tapestryschool.org\" to C=AU,ST=SOME STATE...ETC.....?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/simian/issues/8#issuecomment-69935261.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/69935592/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/70104023", "body": "Things to look at:\n1) ensure the updates are enabled for the track(s) matching the clients.\n2) regenerate the associated Software Update catalogs, or wait for that to happen automatically (based on any auto-promote schedule noted in the UI).\n3) ensure that Munki is running regularly, and you've waited over 70 minutes since the change on the server.\n\nClient logs should be telling.  And you should be able to inspect catalogs within /System/Library/Managed Installs/  (both the Software Update catalog and apple_update_metadata) to see if the updates and force install instructions are making their way to the client.   Let us know what you find...\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/70104023/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/70292795", "body": "https://github.com/google/simian/blob/master/src/simian/settings.py#L39\n\nI think (for now at least) you want to toggle ALLOW_ALL_DOMAIN_USERS_READ_ACCESS to False, then add members you wish to grant access to groups in the admin UI, Admin Tools -> ACL Groups page.  This is, of course, assuming you've already restricted the app to your domain: https://github.com/google/simian/wiki/AdminSetup#obtain-an-app-engine-instance\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/70292795/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/google/simian/pulls/comments/34636709", "body": "Add warnings here.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/34636709/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/34636719", "body": "Add warnings here.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/34636719/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "maximermilov": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/simian/commits/8675db57c78abf7cbbd254e3ff0aa47a1d8134ea", "message": "specify fs type for hdiutil. Fixes #74"}, {"url": "https://api.github.com/repos/google/simian/commits/3c766f6f620bdf21297e27728b202e93f372fe01", "message": "munki 3.0.3 compatibility. Fixes #69"}, {"url": "https://api.github.com/repos/google/simian/commits/d9a009770084cce2a688c86691a4f70ac75a2fc7", "message": "Update to latest stable Munki release"}, {"url": "https://api.github.com/repos/google/simian/commits/4c39c775d4b0ba5f6d54ef6faec95ded12db9a31", "message": "OSX 10.13 support"}, {"url": "https://api.github.com/repos/google/simian/commits/f7b18a73bd3d4c011c053b1048dbc923c404b757", "message": "POST request without body causes errors on 10.9\n\nhttps://groups.google.com/forum/#!topic/simian-discuss/VGDhRFjv0k8"}, {"url": "https://api.github.com/repos/google/simian/commits/51de6726e0660caca5ad6fe6358c6b788715ec2c", "message": "don't bundle pyyaml with client"}, {"url": "https://api.github.com/repos/google/simian/commits/e7aeda0a40155a1aa2bff2b525c4911668c5a72f", "message": "pin python-requests version.\n\nNewer version no longer bundle urllib3."}, {"url": "https://api.github.com/repos/google/simian/commits/7c4b91a6b1a283402cbb44cbc9a279178979e057", "message": "fix regression"}, {"url": "https://api.github.com/repos/google/simian/commits/2a72fb84468e4d4addbc5918fd6f2f447e5474ee", "message": "create gae_server.zip during test"}, {"url": "https://api.github.com/repos/google/simian/commits/59678d1740a3256e2cc81cc1f5b61962df404a65", "message": "fix test"}, {"url": "https://api.github.com/repos/google/simian/commits/1ea7c2b2587ab063a0e146f9ad5bc144cbb0565d", "message": "extra required field for config #64"}, {"url": "https://api.github.com/repos/google/simian/commits/370a5153e77f00c7036a6ad9bade264690419cee", "message": "Merge commit for internal changes"}, {"url": "https://api.github.com/repos/google/simian/commits/27ff0fde1ab4eccff7e6283bc6998d25ff05fca3", "message": "fix tests"}, {"url": "https://api.github.com/repos/google/simian/commits/ce05164fcb4b9f11a7e3b886ab4db6a6892f2d2e", "message": "change default instance type and remove 10.7, 10.8 from applesus"}, {"url": "https://api.github.com/repos/google/simian/commits/c97bde76aac24981204f81df3cf41d0480662fbf", "message": "Merge commit for internal changes"}, {"url": "https://api.github.com/repos/google/simian/commits/3517a00030ea3bd081d32b075850e02bbbc13483", "message": "2.5"}, {"url": "https://api.github.com/repos/google/simian/commits/badd495cd57f3074b6680b23c71521f814ec122d", "message": "remove packagemaker support"}, {"url": "https://api.github.com/repos/google/simian/commits/107798482d400dd05d37ab9c25a23694d781f6c0", "message": "always use system python"}, {"url": "https://api.github.com/repos/google/simian/commits/02001486af51cc5917a2ee2ba1def1d58e297d1d", "message": "remove tests django dependency"}, {"url": "https://api.github.com/repos/google/simian/commits/2a3f021f9c17b8cf11c29b8d32324a76be37dac1", "message": "Merge commit for internal changes"}, {"url": "https://api.github.com/repos/google/simian/commits/05dfd6e86555eb2892889bdb3d41911b6fc7b755", "message": "OSX 10.12 support"}, {"url": "https://api.github.com/repos/google/simian/commits/73f28e0d8bfae0ea56b3cdce85f275093433095d", "message": "2.5.0 Beta 4"}, {"url": "https://api.github.com/repos/google/simian/commits/90f2534da661ffe376c4237584f4ac324e823fbf", "message": "Merge pull request #48 from sillywilly42/groups\n\nAdd missing groups.js to closure compiler list."}, {"url": "https://api.github.com/repos/google/simian/commits/69df23e48d3325bd0155a14f7d061a348d63c558", "message": "port panic_test from mox"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/google/simian/comments/17496003", "body": "Fixed.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/comments/17496003/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/google/simian/pulls/comments/66627635", "body": "Please write tests for new feature.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/66627635/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/66627665", "body": "tests ;)\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/66627665/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/66627919", "body": "Please revert unrelated changes.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/66627919/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/66628806", "body": "> otherwise the logs are filled with this warning.\n\nwhich logs?\n\nI think, it will be easier to have unrelated small changes as separate pull request.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/66628806/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/66629184", "body": "why?\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/66629184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/66629326", "body": "tests ;)\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/66629326/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/67194574", "body": "mox is deprecated and should not be used in new tests.\n\nNew tests should use testbed and mock.\ngood example acl_groups_test.py\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/67194574/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/67194873", "body": "hmm, ok\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/67194873/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/67448003", "body": "vulnerable to xsrf attack.\nSeems, this class duplicate functionality from admin/groups.py\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/67448003/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/67516814", "body": "Why there is auth check for all other methods but not this one?\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/67516814/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/100928879", "body": "New format is hierarchical.\r\ni.e. instead of facts[\"a.b\"]=\"something\", there is facts[\"a\"] = {b:\"something\"}.\r\n\r\nCode does not handle that.", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/100928879/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/101382372", "body": "> all of the ones Simian cares about are flat\r\n\r\nI took another look into existing code, it handle non-flat facts incorrectly.\r\nSimian does not use non-flat facts right not, but to eliminate future problems\r\nit's better to handle them in same way for different puppet versions.\r\n\r\nold facter support --json parameter.\r\nPlease, filter out non-string values.", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/101382372/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/141956610", "body": "seems unrelated.", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/141956610/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "wholtz": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/simian/commits/46fec3c1946efe77df67385c7f4eeb3fc25660ea", "message": "Use https to access closure compiler\n\nThe closure compiler now responds with status 302 when unencrypted\naccess is attempted. This results in an error when running `make release`.\nhttps://github.com/google/closure-compiler/issues/2693"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "frlen": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/simian/commits/9bb47955b7141027d96d35541c05c4f00a57d169", "message": "Add support for 10.13 High Sierra Apple updates"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/google/simian/pulls/comments/142088734", "body": "I get this error without it during catalog generation:\r\nFile \"/base/data/home/apps/.../.../simian/mac/munki/plist.py\", line 1590, in GetXmlStr \r\nraise PlistError('Value type %s not supported: %s', value_type, value) \r\nPlistError: ('Value type %s not supported: %s', <type 'long'>, 4668317536L)", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/142088734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "hardlydavis": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/simian/commits/189a044a8230e0a9e80ecd973f48b9d74802540f", "message": "Update create_gae_bundle.sh to fix broken symlink (#67)\n\nSymlink for client_resources was being created with .. before the full path from / causing it to look for a root level directory starting one folder up.  Removing the ../ makes $SIMIAN_ROOT an accurate path"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sillywilly42": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/simian/commits/9ad65dec6062700b11799306bb8a18c8f0b750d3", "message": "Fix executable check in postinstall (#58)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/google/simian/pulls/comments/66830020", "body": "With this conditional in place, the dev_appserver doesn't seem to serve up CSS etc. If I remove the conditional everything is fine.\nI'm not the only one: https://groups.google.com/d/msg/simian-discuss/hRE2ieA_a14/9YoPqy6qeXAJ\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/66830020/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/66830044", "body": "Done!\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/66830044/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/66830307", "body": "There aren't existing tests for this module, perhaps we could forgo this one?\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/66830307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/66830350", "body": "Done!\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/66830350/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/66830516", "body": "Reverted.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/66830516/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/66830618", "body": "In the AppEngine console logs - I like to monitor at warning level...\nReverted for now.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/66830618/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/67340176", "body": "I've rewritten tests not to use mox.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/67340176/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/67484862", "body": "This class is for the stateless API - which is the motivation behind this PR. I added the web interface bits exposing the groups feature as a courtesy to other Simian users.\n\nI can't add a CSRF token because then this wouldn't be stateless. Instead I pass the existing API_INFO_KEY as a header (X-Simian-API-Info-Key) for all HTTP methods.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/67484862/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/67525942", "body": "I originally thought the get handler would work the same way it does for the packages API.\nI have now added the oauth check to bring it inline with the others.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/67525942/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "popsikle": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/google/simian/pulls/34", "title": "add a gitignore and settings sample, to make for easier forking", "body": "Im not sure if you are interested, but this .gitignore and renaming of the settings file makes it easier to submit pulls ;)\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/google/simian/comments/17495245", "body": "This is missing a \" after the SERVER_HOSTNAME. kills deployment of the packages.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/comments/17495245/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "seryl": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/google/simian/pulls/12", "title": "Add extra link module search paths", "body": "- Adds .eggs\n- Adds recursive pathing for all user paths\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Luzifer": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/google/simian/issues/comments/59737014", "body": "Also tried the `make pkg`:\n\n```\nluzifer@knut-workstation01 ~/g/simian (master \u2022\u2022)>\nsudo installer -pkg tmppkgs/simian-2.3-and-munkitools-2.0.1.2253.pkg -target / -verboseR\nPassword:\ninstaller: Package name is contents\ninstaller: Upgrading at base path /\ninstaller:PHASE:Preparing for installation\u2026\ninstaller:PHASE:Preparing the disk\u2026\ninstaller:PHASE:Preparing contents\u2026\ninstaller:PHASE:Waiting for other installations to complete\u2026\ninstaller:PHASE:Configuring the installation\u2026\ninstaller:STATUS:\ninstaller:%85.027547\ninstaller:PHASE:Running package scripts\u2026\ninstaller:%85.886943\ninstaller:PHASE:Running package scripts\u2026\ninstaller:PHASE:Running package scripts\u2026\ninstaller:PHASE:Running package scripts\u2026\ninstaller:PHASE:Running package scripts\u2026\ninstaller:PHASE:Running package scripts\u2026\ninstaller:PHASE:Running package scripts\u2026\ninstaller:PHASE:Running package scripts\u2026\ninstaller:PHASE:Validating packages\u2026\ninstaller:PHASE:Validating packages\u2026\ninstaller:%97.750000\ninstaller: The upgrade failed (The Installer encountered an error that caused the installation to fail. Contact the software manufacturer for assistance.)\nluzifer@knut-workstation01 ~/g/simian (master \u2022\u2022) [1]>\n```\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/59737014/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/59741339", "body": "Looks like it fails in postflight but I don't see the reason now\u2026\n\nIf you want to you can take a look too: http://pastebin.com/EYvpyGVx (Line 54 is the error line)\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/59741339/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/59742320", "body": "The tmp-file is a really good catch! \n\n```\nInstalled /usr/local/munki/simian/lib/python2.6/site-packages/tlslite-0.3.8-py2.6.egg\n+ set '/Users/luzifer/git/simian/tmppkgs/simian-2.3-and-munkitools-2.0.1.2253.pkg/Contents/Resources/simian_M2Crypto-*-py2.6-macosx-10.10-*.egg'\n+ egg='/Users/luzifer/git/simian/tmppkgs/simian-2.3-and-munkitools-2.0.1.2253.pkg/Contents/Resources/simian_M2Crypto-*-py2.6-macosx-10.10-*.egg'\n+ [[ -z /Users/luzifer/git/simian/tmppkgs/simian-2.3-and-munkitools-2.0.1.2253.pkg/Contents/Resources/simian_M2Crypto-*-py2.6-macosx-10.10-*.egg ]]\n+ [[ *.egg = \\*\\.\\e\\g\\g ]]\n+ die 'Cannot find M2Crypto egg for 2.6'\n+ echo ERROR 'Cannot find M2Crypto egg for 2.6'\nERROR Cannot find M2Crypto egg for 2.6\n+ exit 1\n+ rm -rf //tmp//postflightnH8jMR\n(END)\n```\n\n(Btw: No need for the SVN repo, I have the source and did not do a full roll-out\u2026 Currently two testing devices are affected, nothing to worry about\u2026)\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/59742320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/59784438", "body": "```\nluzifer@knut-workstation01 ~/g/simian (master \u2022\u2022)> sudo installer -pkg tmppkgs/simian-2.3-and-munkitools-2.0.1.2253.pkg -target / -verboseR\ninstaller: Package name is contents\ninstaller: Upgrading at base path /\ninstaller:PHASE:Preparing for installation\u2026\ninstaller:PHASE:Preparing the disk\u2026\ninstaller:PHASE:Preparing contents\u2026\ninstaller:PHASE:Waiting for other installations to complete\u2026\ninstaller:PHASE:Configuring the installation\u2026\ninstaller:STATUS:\ninstaller:%84.923924\ninstaller:PHASE:Running package scripts\u2026\ninstaller:%85.886943\ninstaller:PHASE:Running package scripts\u2026\ninstaller:PHASE:Running package scripts\u2026\ninstaller:PHASE:Running package scripts\u2026\ninstaller:PHASE:Running package scripts\u2026\ninstaller:PHASE:Running package scripts\u2026\ninstaller:PHASE:Running package scripts\u2026\ninstaller:PHASE:Running package scripts\u2026\ninstaller:PHASE:Running package scripts\u2026\ninstaller:PHASE:Running package scripts\u2026\ninstaller:PHASE:Running package scripts\u2026\ninstaller:PHASE:Running package scripts\u2026\ninstaller:PHASE:Validating packages\u2026\ninstaller:%97.750000\ninstaller:STATUS:\ninstaller:PHASE:Finishing the Installation\u2026\ninstaller:STATUS:\ninstaller:%100.000000\ninstaller:PHASE:The software was successfully installed.\ninstaller: The upgrade was successful.\nluzifer@knut-workstation01 ~/g/simian (master \u2022\u2022)>\n```\n\nOn my computer it worked really fine! I'll let a coworker do the same and report the result to you\u2026\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/59784438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/59786612", "body": "On his Mac it worked fine too. :)\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/59786612/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/59928223", "body": "Looks like its working now with f613661be38c.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/59928223/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/68864457", "body": "My patch to work around this issue temporarily:\n\n``` diff\ndiff --git a/Makefile b/Makefile\nindex 8828d9f..5603adc 100644\n--- a/Makefile\n+++ b/Makefile\n@@ -266,5 +266,5 @@ pkg: ${SIMIAN}-and-${MUNKI}.pkg\n dmg: ${SIMIAN}-and-${MUNKI}.dmg\n\n release: server_config\n-       appcfg.py --version=${BUILD_VERSION} update gae_bundle/\n-       appcfg.py --version=${BUILD_VERSION} set_default_version gae_bundle/\n+       appcfg.py --version=${BUILD_VERSION} --oauth2 update gae_bundle/\n+       appcfg.py --version=${BUILD_VERSION} --oauth2 set_default_version gae_bundle/\n```\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/68864457/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "maryniewskij": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/google/simian/issues/comments/69933067", "body": "Wow, that was a quick response! I\u2019m still a little confused.  I see you removed the reference to common.cfg on the wiki, but how do I change Simian to accept the /\u2019s?\n\nOn Jan 14, 2015, at 10:09 AM, Justin McWilliams notifications@github.com wrote:\n\n> https://github.com/google/simian/blob/master/etc/simian/settings.cfg\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/69933067/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/69935261", "body": "# The full DN of the CA that Simian certificates are signed by.\n\nrequired_issuer = CN=ca-server.tapestryschool.org\n\nThats what I had in the settings.cfg file.  Do I change \"CN=ca-server.tapestryschool.org\" to C=AU,ST=SOME STATE...ETC.....?\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/69935261/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/69948258", "body": "I got it working! Thanks for your help.  I pasted the whole cn= text into the settings.cfg.\n\nNow I'm going to figure out how to restrict users to only certain people to see the simian website. I'm currently looking into OAuth 2.0\n\nThanks again!\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/69948258/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/70287955", "body": "It was number 3, I didn't wait long enough for the updates to install.  Thanks!\n\nPS: I'm also trying to restrict what users can log into my simian appspot site.  How can I restrict it to specified users? The only info I could find was from 2012 and before you guys moved to github.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/70287955/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "johnrandolph": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/google/simian/issues/comments/69940597", "body": "Are you building a CA from scratch or using an existing CA? \n\nIf you are building from scratch it is sufficient to say CN=ca-server.tapestryschool.org is the DN for the CA and thus is the required_issuer. If you are reusing a CA then you need to take into account whatever the DN actually is. \n\nYou don't need to add all the other fields like city C, state ST, etc unless if you actually need to or want to.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/69940597/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/google/simian/pulls/comments/31811331", "body": "instead of two find blocks you could just add '.eggs' as a second argument to the find execution above\n\nfind . .eggs -type f ....\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/31811331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}}}}