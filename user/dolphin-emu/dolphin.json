{"_default": {"1": {"degasus": {"issues": [], "commits": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/commits/71b551968881af7259256922d8924958f212454c", "message": "Merge pull request #6308 from JosJuice/avidump-s\n\nAVIDump: Remove incorrect usage of s_ prefix"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/commits/e02025b45e0ee25a325e25dd96efafd8849ddc45", "message": "Merge pull request #6307 from rukai/fix-frame-dump-path\n\nHandle framedump path not existing"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/commits/2719e1fb88a408a82ea22d955197476770c7b4ca", "message": "Merge pull request #6289 from degasus/arb_mipmap_for_upscaled_textures\n\nVideoCommon: Apply custom texture scale for arbitrary mipmaps."}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/commits/cb7eede193b1644b58fdfaf03925d483832dddae", "message": "VideoCommon: Apply custom texture scale for arbitrary mipmaps.\n\nWe want to get the same mipmap level. And if the IR and the custom\ntexture upscaling fits, we don't need to modify the LOD bias."}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/commits/2a43f41acec1d79865f3a1c4e951eaf766d0fec1", "message": "Merge pull request #6297 from JosJuice/custom-texture-arb-filename\n\nTreat custom textures with \"_arb\" suffix as having arbitrary mipmaps"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/commits/56d74d65d0003bb0f5833e8b039579e58d50fa98", "message": "Merge pull request #6298 from 34will/feature/Android_Single_Char_Fix\n\n[Android] Fix for single char name for Wii and WAD Games"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/commits/b93ae142724f07cb9664a92b55887557dbb7d8ee", "message": "Merge pull request #6300 from JonnyH/WIP/glsl-es-implicit-int-float-conversions-in-gpu-texture-decode\n\nGLSL-ES doesn't allow implicit int/uint conversions"}], "pull_requests": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/6205", "title": "hacky GP exception handling", "body": "", "author_association": "MEMBER"}], "issue_comments": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33482306", "body": "They don't export it in any way for OpenGL. So we could fetch it from registry or nvapi.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33482306/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33484075", "body": "neobrain: tbh, I don't think this will matter. All users will ask why they have a black screen and the usual answer will be \"update your driver\". Some guys may change this flag and wonder afterwards why they get a wrose performance.\n\nimo only this guys matter who can't upgrade their driver. As only 33X driver support ogl4.4 at all, I don't see why anybody shouldn't be able to upgrade.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33484075/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33485110", "body": "waddlesplash: glxinfo | grep ARB_buffer_storage ?\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33485110/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33505903", "body": "\"AFAIK there have been stability issues with recent drivers\" -- this one bothers mich today, but here is a good news: All drivers exporting ARB_buffer_storage are known for this stability issue. So the fallback one isn't affected.\n\nIf \"the common\" think such an option is needed, I'll create it (ini only?). But imo it isn't needed\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33505903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33681721", "body": "In which way do we want to fix the videosw issue?\na) use more of the common vertexloader, but so we'd have to convert everything as the videocommon vertexloader wants to and fix it afterwards\nb) complete fork vertexloader. I've done the first step (for positions): http://pastie.org/8681971 -- Please don't see this patch as ready for merging, it's poc\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33681721/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33690830", "body": "hrydgard: yeah, I'm also thinking about forking our videosw based on the hardware api. So it likely will be a)\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33690830/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33699359", "body": "Please don't accept this one until HdkR confirm it.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33699359/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "JosJuice": {"issues": [], "commits": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/commits/2441fd28d578fb6984a6cab494ccd96cc4ebfb02", "message": "AVIDump: Remove incorrect usage of s_ prefix"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/commits/83870fbcf062f546bf9ea1fbe4654a7e06cc1d1d", "message": "Use \"implementation\" for all dependencies in build.gradle"}], "pull_requests": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/6291", "title": "Replace usage of SOIL with libpng", "body": "This is a rebased and improved version of PR #4575. Just like that PR, it replaces the usage of SOIL in the custom texture loading code with libpng, and then removes SOIL from Dolphin entirely. But unlike when that PR was made, we now have the ability to load DDS textures without SOIL thanks to PR #5279, so the formats that are supported after this PR are PNG and DDS. Practically every texture pack only uses those two file types, and those two file types are the only file types that Ishiiruka supports.\r\n\r\nFor reasons to stop using SOIL, see PR #2163 (including the comments) and [issue 9686](https://bugs.dolphin-emu.org/issues/9686).", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/6285", "title": "DolphinQt2: Perform more of GameTracker's work on a separate thread", "body": "This reduces the time from startup to the game list window showing up.\r\n\r\nI made this commit because it combined with PR #6281 would let me make the cached games show up in the game list before we check which of them actually exist on the file system, like in DolphinWX, which will make the game list fully populated quicker than in master. But I figured I might as well submit it as a separate PR, since it has some benefit on its own.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/6281", "title": "Unify ISOFile (wx) with GameFile (Qt) and put it in UICommon", "body": "The original reason I wanted to do this was so that we can replace the Android-specific code with this in the future, but of course, just deduplicating between DolphinWX and DolphinQt2 is nice too.\r\n\r\nFixes:\r\n\r\n- DolphinQt2 showing the wrong size for split WBFS disc images.\r\n\r\n- DolphinQt2 being case sensitive when checking if a file is a DOL/ELF.\r\n\r\n- DolphinQt2 not detecting when a Wii banner has become available after the game list cache was created.\r\n\r\nRemoves:\r\n\r\n- DolphinWX's ability to load PNGs as custom banners. But it was already rather broken (see https://bugs.dolphin-emu.org/issues/10365 and https://bugs.dolphin-emu.org/issues/10366). The reason I removed this was because PNG decoding relied on wx code and we don't have any good non-wx/Qt code for loading PNG files right now (let's not use SOIL), but we should be able to use libpng directly to implement PNG loading in the future.\r\n\r\n- DolphinQt2's ability to ignore a cached game if the last modified time differs. We currently don't have a non-wx/Qt way to get the time.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/6208", "title": "[WIP] Re-add the monitor resolution mode setting in the Advanced tab", "body": "This reverts PR #6196.\r\n\r\nWe've been getting complaint comments on that PR unusually quickly compared to other feature removal PRs (such at fractional IR). While I don't agree with all the points they make, the one about resolutions that can't run over 30 Hz makes sense.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rukai": {"issues": [], "commits": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/commits/6c7e6016fbf78f6fd8762c2ff863f3b955c9e52b", "message": "Handle framedump path not existing"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "leoetlino": {"issues": [], "commits": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/commits/55584bf45618fd34fc5a3a3740c09597bb1e83bc", "message": "Merge pull request #6294 from VinDuv/macos-dolphinbar-fixes\n\nmacOS Dolphinbar fixes"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/commits/3e00be93416e0a32b31df66476daa5d1b5e69bf5", "message": "Merge pull request #6305 from booto/codehandler\n\nRestore original MSR when returning from codehandler"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/commits/27b6a2e634a5a589ace5d4baf71f68dfc1966c81", "message": "Merge pull request #6292 from gyroninja/master\n\nFixed SIGSEGV in PPCDebugInterface When Reading Too Early in The Boot Process"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/commits/973bd154b942917a98be2d69105078ac8c20b335", "message": "Merge pull request #6304 from container1234/qt-debugger\n\nQt/Debugger: Minor fixes"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/commits/ec78118a4349baebdd4192b234bacbd36f956615", "message": "Merge pull request #6302 from JosJuice/gradle-compile\n\nUse \"implementation\" for all dependencies in build.gradle"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/commits/955214c6b6549d0060908e4e9ef4eed60becd69c", "message": "Merge pull request #6299 from Ebola16/master\n\nISOProperties: Rename \"Edit Config\" and \"Show Defaults\""}], "pull_requests": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/6273", "title": "[RFC] Enable C++17", "body": "C++17 allows for some nice cleanups and removes the need for standard library backports (optional/variant).\r\n\r\nSee discussion at https://github.com/dolphin-emu/dolphin/pull/6264#discussion_r158134178\r\n\r\n", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/6264", "title": "Common: Add a Subscribable class (from #5758)", "body": "From PR https://github.com/dolphin-emu/dolphin/pull/5758 (rebased on top of master)\r\n\r\n>Adds a `Subscribable` class in Common, to encapsulate the callback management logic. Could probably be used in other places with callbacks, too. Calling `Subscribable().Subscribe` returns a move-only value that, when destructed, unsubscribes the callback if the original Subscribable still exists (thread-safe).\r\n\r\nThis is not used anywhere yet, but I plan to replace the existing callbacks with `Subscribable`s (`Core::SetOnStoppedCallback`, config change callbacks).", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "booto": {"issues": [], "commits": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/commits/83d18fc2fa4ae0a01af938a69d1ab325b3a17601", "message": "Restore original MSR when returning from codehandler"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "VinDuv": {"issues": [], "commits": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/commits/bb5e5d964a172d92596aa403dec3f83f369554d8", "message": "Added patches for hidapi modifications\n\nThis allows tracking what modifications were made to the upstream code."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Helios747": {"issues": [], "commits": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/commits/93979cd16adfbabc572732cf336666955798a64a", "message": "Merge pull request #6301 from Helios747/sa2b_workaround\n\n[INI] Force Single Core mode in Sonic Adventure 2 Battle"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/commits/78f0ca69ae8be563a99fc9bcd08217130b145ee4", "message": "[INI] Force Single Core mode in Sonic Adventure 2 Battle"}], "pull_requests": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/6243", "title": "[WIP] [AVIDump] fix compilation on Linux", "body": "untested. pls test\r\n\r\nFixes https://bugs.dolphin-emu.org/issues/10644", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "container1234": {"issues": [], "commits": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/commits/025d9383ac64edd85afc09b3be588c653664bc7c", "message": "Use double instead of float for FPRs"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/commits/b6138b940806439460229d766b51c2aba1636e29", "message": "Fix 64bit registers that are not displayed correctly"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gyroninja": {"issues": [], "commits": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/commits/9628e229163b590459cf20c538cee1c0c27a5105", "message": "Changed PPCDebugInterace to check memory only after the emulator has finished starting"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "stenzek": {"issues": [], "commits": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/commits/ce0c699b6605a1d103b6434bc28d20d161040904", "message": "Merge pull request #6246 from stenzek/vulkan-readback-fixes\n\nVulkan: Fix MSAA regression from 5.0-5968"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/commits/4997fbce44f9d092c503ce34f92faafb1af1dd44", "message": "Vulkan: Fix possible mismatch between EFB framebuffer and render pass\n\nThis could happen when changing MSAA settings or internal resolution at\nruntime."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "34will": {"issues": [], "commits": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/commits/86a787bdf9df5ef54cf38bfd16ae24c73bd9e83c", "message": "Modified StringUtil to change UTF16ToUTF8 to use a wstring_convert and codecvt_utf8<wchar_t> to convert a UTF16 wstring to a UTF8 string."}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/commits/a949e98d9b3b77493a0e38e7f2227e57c8c6e066", "message": "Modified UTF16BEUTF8 to just convert the UTF-16 C-string into a std::u16string, and pass it into CodeToUTF8 with the 'from' parameter being \"UTF-16BE\", rather than manually performing the big endian to little endian encoding."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "JonnyH": {"issues": [], "commits": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/commits/46254a2cf2d99b6786d25f985e49c13551a8f395", "message": "Some more implicit uint/float conversions in the texture decode shaders"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/commits/f23dd992dd5ba3c7b20a761032c1559f56bc657f", "message": "GLSL-ES doesn't allow implicit int/uint conversions"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Ebola16": {"issues": [], "commits": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/commits/1fabc93756be6513610050ac5414abab3dbff140", "message": "ISOProperties: Rename Edit Config and Show Defaults"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mahdihijazi": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/6310", "title": "Android: Fix settings screen animation if Animator Duration Scale is Off", "body": "If Animator Duration Scale is Off, the Enhancements/Hacks screens were\r\nnot visible unless you enable the Animator Duration Scale back. This\r\nmake sure screens will be visible regardless of your animation settings.\r\n\r\nfor more info:\r\nhttps://www.reddit.com/r/DolphinEmulator/comments/7o6abu/dolphin_emulator_android_version_fix_for_when/", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/6306", "title": "Android: Don't hard code the user dircetory path to /sdcard/dolphin-emu ", "body": "Android is allowed to pick any path for the external storage media and\r\nthat's why we should always use Environment.getExternalStorageDirectory()\r\nto get the external storage path\r\n\r\nI need to test this first, I will ask the user who posted the issue on the forums to test if that solve the problem. If others can help me test it, that would be appreciated since all my devices don't have the issue.\r\n\r\nfor more info:\r\nhttps://forums.dolphin-emu.org/Thread-unable-to-create-dolphin-folder-hence-settings-won-t-save?pid=460539#pid460539", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sepalani": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/6309", "title": "PPCSymbolDB: two columns symbol map support added", "body": "This PR adds support for two columns symbol maps like the Super Smash Bros. Brawl Korean one.\r\n\r\nRegarding RSBK the symbol map doesn't have a section header (.text) and has symbols like :\r\n```800107a8 DrawNonShadowBorder/[@unnamed@gf_3d_scene_cpp@]/(gf_3d_scene.o)```\r\n\r\nThis PR doesn't deal with the missing header but just with the two columns format issue.\r\nAt least, the symbol map now loads if the \".text\" section header is added. \r\n\r\nReady to be reviewed.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/6182", "title": "[WIP] OpenSSL logger", "body": "This PR is based on:\r\n- https://github.com/dolphin-emu/dolphin/pull/6075\r\n- https://github.com/dolphin-emu/dolphin/pull/6176\r\n\r\nIt adds another logger that HLE hooks with OpenSSL functions to log SSL traffic. This method should work with any other functions as long as we know the parameters. It has to be enabled with the config's option \"OpenSSLDumpPCAP\".\r\n\r\nI tested it with a small homebrew and still is WIP as it needs to be tested on other games. It also requires reverse engineering skills to find these functions and add them to the symbol map in order to use HLE hooks. I might provide a OpenSSL signature database file soon if it's reliable.\r\n\r\nI still have to figure out the SSL structure used if I want to retrieve the socket fd that's used.\r\n\r\n**DISCLAIMER:** Keep in mind that logging SSL traffic will most likely log sensitive information. That's why you should be careful if you plan to share these network dumps.\r\n\r\nNeed to be tested on:\r\n- [ ] Amazon Instant Video\r\n- [ ] Crunchyroll\r\n- [ ] Hulu PLUS\r\n- [ ] Netflix\r\n- [ ] Youtube (?) *does it still work if we bypass the error code 20110?*\r\n- [ ] Dragon Quest X (?) *does it use openssl.rso?*\r\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/6176", "title": "Move StepOut to PowerPC", "body": "This PR moves the StepOut code from WxWidgets to PowerPC.\r\n\r\nReady to be reviewed & merged.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "TraceBullet": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/6303", "title": "Fix Auto-Adjust Window Size option making the window too large", "body": "Fixes https://bugs.dolphin-emu.org/issues/10658\r\n\r\nWhen using the Auto-Adjust Window Size option, SetWindowSize was applying the scale factor to the already-scaled size, causing the window to become massive for anything above 1x IR.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ZexaronS": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/6296", "title": "Warn on missing custom texture folder", "body": "Except I don't know yet of a better way make it stop proceeding, currently it will just go ahead and try loading textures from the nonexisting path, it won't find any so it will report that it loaded 0 textures in 0 seconds.\r\n\r\nThere could be some check to see if the DoFileSearch found anything. For example checking `if filenames == 0` - but what would be the command to stop it?\r\n\r\nI was looking into `HiresTextures::Shutdown()` but I thought it wasn't going to do what I think it would do.\r\n  ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "spycrab": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/6287", "title": " Qt/Settings: Implement \"GameCube pane\"", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/6279", "title": "Qt: Implement \"AR Codes\"", "body": "*Screenshots:*\r\n![Window A](https://i.imgur.com/XN0GRCO.png)\r\n![Window B](https://i.imgur.com/mQ0gQay.png)", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gwicks": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/6225", "title": "Android: Basic implmentation of per-game settings ", "body": "Doesn't fully implement loading the parent ini's from the APK, since there are several other PRs open aiming to do that. Holding off on fully implementing cheats for now (keeping the tabbed layout so that it's easier to add later on).", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "iwubcode": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/6222", "title": "[WIP] Emulated wii motion input improvements", "body": "Still working on this.  The goal is to improve emulated wiimote interactions.  Tasks include:\r\n\r\n* Fixing nunchuck swing/shake commands\r\n* Adding intensities to the UI for swing/shake commands (instead of hardcoding them) so games like 'Boom Blox' can be somewhat playable\r\n* Looking at wiimote swings, to see why they don't work in some games like 'No More Heroes'\r\n* Other QOL improvements to make emulated wiimote/nunchuck controls a viable alternative to using a real wiimote\r\n\r\n**I will not be investigating MotionPlus, so please don't ask!**\r\n\r\n\r\nLatest windows build:  https://dl.dolphin-emu.org/prs/pr-6222-dolphin-latest-x64.7z", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ligfx": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/6219", "title": "PixelShaderGen: only use dual-source if bpmem requires dual-src blending", "body": "This fixes [Issue 9373: Depth issues on Mario Kart Double Dash](https://bugs.dolphin-emu.org/issues/9373).\r\n\r\nThere seems to be some interaction between having `ocol1` in the fragment shader and calling `glBindFragDataLocationIndexed`: removing either one fixes the issue. Adding stronger dual source requirements to the fragment shader seemed like the cleaner option.\r\n\r\nBefore:\r\n\r\n<img width=\"583\" alt=\"screen shot 2017-11-25 at 2 18 01 pm\" src=\"https://user-images.githubusercontent.com/594093/33235343-a1827308-d1eb-11e7-8d15-5add1ee6384b.png\">\r\n\r\nAfter:\r\n\r\n<img width=\"583\" alt=\"screen shot 2017-11-25 at 2 17 32 pm\" src=\"https://user-images.githubusercontent.com/594093/33235344-a51960ee-d1eb-11e7-8382-ef08f5a1396a.png\">\r\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/6183", "title": "Add hotplug support to DInput and XInput controller backends", "body": "Creates a third backend, Win32, which encompasses the existing XInput and DInput backends, and ask them to repopulate devices when it sees a change event.\r\n\r\nUnfortunately, there's not really a great way to map change events to XInput and DInput devices. So, when a change event happens, _all_ XInput and DInput controllers are removed and re-added. Stupid, but works. It's how SDL does it too.\r\n\r\n(There's supposedly a way to map events to DInput devices, but the Internet claims it's sketchy. There _is_ a straightforward way to do it for RawInput, if that's ever used in the future.)", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/6180", "title": "Add hotplug support to SDL2 controller backend", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/6157", "title": "TraversalServer: use C++'s <chrono> and <random>", "body": "Simpler than `gettimeofday` and reading `/dev/urandom`, and cross-platform to boot!", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/6143", "title": "CMake: add DOLPHIN_CXX_FLAGS option", "body": "Lets you do fun stuff like adding extra warnings + warnings as errors for Dolphin only.\r\n\r\nClosed the original, #6137, in a momentary lapse of thinking.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/6129", "title": "(needs 6134) AudioCommon: allow changing stream parameters (backend, DPL2, etc.) at runtime", "body": "The main idea here is to stop storing the global Mixer instance as a member variable on sound streams. With that done, sound streams can be created and destroyed at runtime without affecting the rest of the audio system.\r\n\r\nThis lets you do cool things like changing the backend or enabling/disabling DPL2 decoding at runtime (Interesting discovery: on my computer, a decoded DPL2 stream is significantly louder than the stereo stream).\r\n\r\nCurrently needs #6130, #6133, and #6134.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "delroth": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/6178", "title": "Load Sys GameSettings from a .zip file", "body": "Currently we store default GameSettings for Dolphin in individual .ini files (1332 of them, to be precise). While this shouldn't be an issue, some operating systems (_cough_ Windows _cough_) are really slow at creating or copying large numbers of files, and GameSettings have been an issue in the past for this reason.\r\n\r\nThis PR adds support for loading Sys GameSettings from a single .zip archive. In our Git repository we still keep individual .ini files with their own commit history, etc. At build time CMake / Visual Studio are responsible for packaging the individual files into a zip archive which is then used at runtime.\r\n\r\nTesting checklist:\r\n- [ ] Windows\r\n- [ ] MacOS\r\n- [x] Linux\r\n- [ ] Android (does not build yet)", "author_association": "OWNER"}], "issue_comments": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33481912", "body": "Is there really no way to detect the error without checking the driver version? I obviously don't like performance regressions but simply breaking half of the NVIDIA versions from 2013 isn't really much better.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33481912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33580681", "body": "Why were these commented before? Would like more context (maybe in the commit message).\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33580681/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33590137", "body": "Preview: https://github.com/lioncash/dolphin/blob/d7268dd176a2f8ea276694cac9f2a5c54065d372/Readme.md\n\nCould you make the \"usage\" line monospace?\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33590137/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33590176", "body": "Also a few more things to monospace: file names (VS solution names), build steps, ...\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33590176/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33641610", "body": "LGTM but this code is kind of a mess of #ifs mixed with ifs. Why do we not use polymorphism here instead of these series of if statements?\n\nIf that makes sense to you, would appreciate if you could create an issue about that if you don't want to fix that in the near future.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33641610/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33691692", "body": "+1 for making our sw backend closer to the hw implementations when it can\nbe instead of having it be a (mostly) separate implem.\n\nOn Thu, Jan 30, 2014 at 3:14 PM, Markus Wick notifications@github.comwrote:\n\n> hrydgard: yeah, I'm also thinking about forking our videosw based on the\n> hardware api. So it likely will be a)\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/dolphin-emu/dolphin/pull/11#issuecomment-33690830\n> .\n\n## \n\nPierre \"delroth\" Bourdon delroth@gmail.com\nSoftware Engineer @ Z\u00fcrich, Switzerland\nhttp://code.delroth.net/\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33691692/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33696928", "body": "LGTM.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33696928/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33696991", "body": "If these are the same implementation, do not copy paste and try to add an abstraction layer instead.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33696991/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5212073", "body": "Would be nice if that context was put in the commit message in the future :)\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5212073/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5284408", "body": "My thread on dolphin-dev@ about non-const refs was triggered by discussions\naround this PR :)\n\nOn Wed, Feb 5, 2014 at 6:03 PM, BhaaL notifications@github.com wrote:\n\n> Did you intentionally choose to use T\\* as first parameter over T&, or did\n> it just end up like that?\n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/dolphin-emu/dolphin/commit/cfa2d012c81e7d162487871b4c18c1c9f10e534a#commitcomment-5284334\n> .\n## \n\nPierre \"delroth\" Bourdon delroth@gmail.com\nSoftware Engineer @ Z\u00fcrich, Switzerland\nhttp://code.delroth.net/\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5284408/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5285478", "body": "That's basically it.\nhttps://ml.dolphin-emu.org/archives/dolphin-dev/2014-February/000063.html\n\nOn Wed, Feb 5, 2014 at 7:20 PM, BhaaL notifications@github.com wrote:\n\n> Gonna fix my spam filters, half of them got moved to trash automatically :|\n> I'm guessing its about the non-verbosity of references being not visible\n> at caller site (because it looks the same as a plain non-ref call) and you\n> only notice when looking at the fwd declaration and/or implementation.\n> Gonna read the ML and re-comment afterwards...perhaps\n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/dolphin-emu/dolphin/commit/cfa2d012c81e7d162487871b4c18c1c9f10e534a#commitcomment-5285364\n> .\n## \n\nPierre \"delroth\" Bourdon delroth@gmail.com\nSoftware Engineer @ Z\u00fcrich, Switzerland\nhttp://code.delroth.net/\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5285478/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": []}, "LAGonauta": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/6171", "title": "Added DPL2 decoder to XAudio2 and XAudio2_7 backends.", "body": "I cherry picked this commit from PR #5235, as suggested by @ligfx.\r\n\r\nTested on Windows 8.1 x64, works fine. I will test later on Windows 10 x64, but it would be great if someone could test it on Windows 7.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bb010g": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/6152", "title": "Enforce UTF-8 now that VS handles it sanely", "body": "Follow up to #5541. [Fixed in 15.3](https://developercommunity.visualstudio.com/solutions/93089/view.html).", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "HannesMann": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/6146", "title": "Netplay: Add Quality of Service (QoS) support", "body": "This adds support for tagging outgoing packets with a Quality of Service bit. \r\nThis should make Dolphin get prioritized over other network traffic in routers, which means you can download and stream while playing NetPlay without packet drops or input lag.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Bumrang": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/6138", "title": "Added Windows support for MemoryWatcher", "body": "This adds Windows support for MemoryWatcher. It opens a Windows named pipe at `\\\\\\\\.\\\\pipe\\\\Dolphin Emulator\\\\MemoryWatcher` and sends everything there.\r\n\r\nSo far only tested against SSBM, everything looks to works OK. Compiles normally on Windows 10 and Linux (have not tested OSX).", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "neobrain": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33482571", "body": "Instead of adding more and more ugly hacks for detecting broken drivers\\* we should just add an option for end users to disable usage of the extension. Aka a new VideoConfig field \"bNoBufferStorage\" with an analogous name in the ini and a default value of false.\n\n(*) to be fair, the best thing to do would be to write a proper unit test that gets run before using buffer storage and which uses the extension and checks that it works. But I don't expect anyone to be willing to do that\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33482571/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33495686", "body": "There are valid excuses for not having a fully up-to-date driver. AFAIK there have been stability issues with recent drivers, and I guess some people won't want to risk system stability just to use Dolphin.\n\nSo yes, I think there are valid cases where we need to provide a solution.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33495686/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33509601", "body": "Fair enough then.\n\nI hope in the future we can add options for this anyway, but that shouldn't matter for this patch.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33509601/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33538079", "body": "Don't create pull requests for a merge inside your own master branch, but create another PR for the actual branch in your fork, please.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33538079/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5298060", "body": "Yeah uh, that magic value really should not be there...\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5298060/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5717403", "body": "@crudelios I'm probably repeating myself, but where do these magic values 607 and 479 come from again? It looks like these should actually be the scissor rect coordinates... If not, I still wonder why the scissor rect isn't considered at all in the code.\n\nAnd why is clipping done after perspective divide?\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5717403/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": []}, "waddlesplash": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33484829", "body": "The latest driver in the Ubuntu 13.10 repos is 319.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33484829/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33485596", "body": "Returns nothing. My full driver version is 319.32.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33485596/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "Sonicadvance1": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33538759", "body": "+1 Reviewed it in the last merge request.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33538759/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33639677", "body": "Cleaned up what delroth talked about\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33639677/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33640099", "body": "Updated what Matt_P said. Use std::swap like a boss.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33640099/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33641801", "body": "I do have an issue about it, I planned on rewriting it in a week or two. https://code.google.com/p/dolphin-emu/issues/detail?id=6981\n\nI'm a bit busy with work right now, which is why I've only done these two small things. Once I get back to the US I'll have some more time available.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33641801/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "lioncash": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33580939", "body": "@delroth HdkR had initially commented them out since integer range parsing hadn't been implemented at the time, and it was just forgotten about, I suppose.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33580939/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33692664", "body": "+1 for the same reason @delroth stated.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33692664/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5212046", "body": "@ExtremeDude2 Because the [GLES30](http://developer.android.com/reference/android/opengl/GLES30.html) class was introduced in API 18. API 17 and below only has up to the [GLES20](http://developer.android.com/reference/android/opengl/GLES20.html) class.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5212046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": []}, "Parlane": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33622822", "body": "neobrain why did you merge this without testing :(\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33622822/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5207678", "body": "Dunno, the buildbot system wanted it I guess.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5207678/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": []}, "hrydgard": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33690327", "body": "In PPSSPP I created a \"VertexReader\" that reads OpenGL formatted vertex data (of any format). This lets me share the entire vertex loader with no issues except possibly slightly slowing down the software renderer. I'd do the same thing if I were back working on Dolphin.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33690327/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5203984", "body": "You could check the return value of sscanf to determine if you were successful parsing the version.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5203984/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5294696", "body": "Nitpicking, but there's no good reason to use | when you mean + here, as an add can be folded into the \"addressing mode\" of the MOV that does the write, while the or can't so it will likely be an extra instruction. Not like it's really going to matter though.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5294696/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5294712", "body": "Very impressive work doing this properly - I didn't think my old bbox code would live this long though :)\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5294712/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5611870", "body": "Tip: Write pull request numbers as #111 (with a hash instead of \"PR\") to get them autolinked on github.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5611870/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "jchv": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33701652", "body": "How much can you pull out of it? The OS X version needs to be compiled in Objective C++, and the code is mostly boilerplate as it is. There are enough differences that I can't tell where you would want abstraction to be put at.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/issues/comments/33701652/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "Armada651": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5207172", "body": "It has been said on IRC before, but the NVAPI has a function called `NvAPI_SYS_GetDriverAndBranchVersion`   that should get us a reliable version string.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5207172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": []}, "ExtremeDude2": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5207673", "body": "hmm, why 18?\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5207673/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5238624", "body": "About time I guess\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5238624/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5819023", "body": "So is this what we hope it is?\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5819023/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "BhaaLseN": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5284334", "body": "Did you intentionally choose to use T\\* as first parameter over T&, or did it just end up like that?\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5284334/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5285364", "body": "Gonna fix my spam filters, half of them got moved to trash automatically :|\nI'm guessing its about the non-verbosity of references being not visible at caller site (because it looks the same as a plain non-ref call) and you only notice when looking at the fwd declaration and/or implementation. Gonna read the ML and re-comment afterwards...perhaps\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5285364/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5298050", "body": "Whats that magic value there? Make it a constant/define/whatever?\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5298050/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5298077", "body": "Please add some comments on where those values (0.5, 16.0f, 342.0f and 6) come from; or what they do. To someone not familiar with bbox, it looks a bit like trial&error or random guessing.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5298077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5298110", "body": "Some linebreaks, please?\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5298110/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5298131", "body": "Those numbers keep repeating all over the code...maybe it makes sense to make them constants/defines/whatever too? Mainly for readability reasons.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5298131/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5298289", "body": "Hmm, gonna be hard to get donko to comment on that :P\nAnyone else knows what its doing?\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5298289/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "crudelios": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5295268", "body": "Thanks!\n\nThe bbox code is slowly becoming a complicated mess :P \n\nAbout the line note, I always though a bitwise OR would be faster than ADDing. Since I'll be changing the BBox code (again) to fix some final bugs, I'll replace that | with a + ;)\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5295268/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5298223", "body": "That magic value (1.0f - (float) 1e-7) comes directly from the software renderer (method MultipleVec3Perspective() in TransformUnit.cpp).\n\nI'm not really sure what it does as well, but it seems to be needed for the Z coordinate.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5298223/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5298373", "body": "I'll soon be rewriting (again) parts of the BBox code, which will get rid of the numbers and instead get them from the EFB_WIDTH/EFB_HEIGHT macros, as well as the scissor offsets. \n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5298373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5712680", "body": "Nice catch!\n\nI feel stupid for failing to notice it, though :P\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5712680/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5724713", "body": "You're right, they are. In the changes I'm making I've thanged them to EFB_WIDTH and EFB_HEIGHT. I disregarded the scissor rect because they aren't used with bounding boxes. It's innacurate, but this saves some calculations in the clipping code.\n\nThe clipping was the best I could come up with...\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5724713/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "glennricster": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5476857", "body": "This test fails now for polarssl version 1.2.  That is incorrect.  Dolphin still builds fine against that version of polarssl, and so this test should succeed.  If the previous test fails for later versions of polarssl the test should be modified to also succeed for those versions, but it should not be modified to fail for older versions that still work.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5476857/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5550806", "body": "You figured it out.  Good job.  Now all those 32 bitters will be happy.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5550806/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "wfowler1": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5690237", "body": "Huh, I see what you guys mean by cleaner code. I've written plenty of crappy code in my day, and it's always satisfying to replace it with something cleaner.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/comments/5690237/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "arthurc": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/125156025", "body": "Thanks, I'll make sure to update it :)", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/125156025/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "magcius": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/10409273", "body": "C++ is too huge for someone like me to learn correctly. I'd drop Dolphin development entirely if you guys went full-C++, since it's just a hobby project for me, and I don't particularly care about pouring over a 2,000 page spec for weekend hacking.\n\nI don't particularly see what's wrong with `new`/`delete` to be honest.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/10409273/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/10409406", "body": "Thanks for telling me that my own demotivation is indeed a strawman! I'll be sure to keep that in mind the next time I'm working on other fun weekend projects.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/10409406/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/14834782", "body": "The existing code was like that, and I don't really want to change it in an unrelated commit.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/14834782/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/14944117", "body": "Is there a reason you're introducing a `Shutdown` method here rather than using a destructor? We allocate in the constructor.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/14944117/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/14944168", "body": "This seems weird to me. I think we should either have a Shutdown method on the channel which iterates over all its devices and calls Shutdown. Better yet, just make it part of the destructor.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/14944168/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/15001563", "body": "Why? One checks for the Renderer window, one checks for the UI or any dialogs. It's only in the Render to Main Window case that the Renderer is part of the UI.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/15001563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/15030316", "body": "I have no idea. But my goal is not to rewrite `RendererHasFocus()`, it's to fix the regressions.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/15030316/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/15126769", "body": "What would you prefer? There's no real good constant name I can give for either of these.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/15126769/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/15127009", "body": "Well, it's not the \"C stick\" on classic controllers, it's just the \"right analog stick\". I don't really think adding names for this will make the code clearer. I could point add a comment saying with a link to http://wiibrew.org/wiki/Wiimote/Extension_Controllers/Classic_Controller , and add that the range of the right analog stick is half of the left, for no discernible reason.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/15127009/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/16156083", "body": "You did not rebase this on top of my branch. It will cause merge conflicts.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/16156083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/16156115", "body": "This won't work correctly until you merge my branch. If you try this in NoGUI, it will look super stretched and bad since in that case GLWin.parent is the root window.\n\nAfter my branch, GLWin.parent is always the size of the host, which will be correct. We have settings, but as far as I know they don't work correctly for Render to Main Window or NoGUI. If they do, sure, we can use the settings instead. I'm not sure what AGL/WGL/D3D do. If they use the settings, then let's just use those.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/16156115/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/16635742", "body": "Why? It's the software renderer, I don't give a shit about it.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/16635742/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/16636857", "body": "Only instance where what's used?\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/16636857/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/17152134", "body": "Can you remove the extra whitespace leftover here, too?\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/17152134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/17699861", "body": "And I don't like externs.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/17699861/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/19466334", "body": "What about them?\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/19466334/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/70186883", "body": "these things are theme and font dependent\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/70186883/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/70186893", "body": "not true in multimonitor scenarios\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/70186893/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/70186897", "body": "this math is quite awful and shouldn't be in inputcommon\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/70186897/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/70186926", "body": "Don't hardcode fixes for games based on XFB heights, it's brittle and prone to breaking.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/70186926/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/70186935", "body": "Are these values even guaranteed to be filled in at Wiimote poll time? They can be junk unless an active copy is going through them, and I'm quite sure GX will stomp on registers it doesn't care about when prepping other commands -- masking is expensive.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/70186935/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/70186944", "body": "Since you only implement this in Xlib and WiimoteEmu assumes that coordinates are adjusted, other backends will break. Not good.\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/70186944/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/77546998", "body": "this comment seems bizarre especially with the condition right below it. shouldn't we check in both places, or not check at all?\n", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/77546998/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/97240292", "body": "This is just the definition of these structs. The WH structs contain one less than the width/height to make the edge case of 0 w/h impossible.", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/97240292/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/137703573", "body": "Self-include first, then standard, then Dolphin code.", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/137703573/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/137703697", "body": "These should likely be rounds, not floors.", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/137703697/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/137703779", "body": "I sort of hate to say this, but nearest neighbor is such an \"obvious\" resampling algorithm to me and a lot of people that I don't know if we need to credit authorship?", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/137703779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/137703915", "body": "Also, it's a non-prefixed, non-static global.", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/137703915/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/146096917", "body": "I'm not convinced any compiler will misread this, given how prevalent and important it is in practically any non-toy codebase.", "reactions": {"url": "https://api.github.com/repos/dolphin-emu/dolphin/pulls/comments/146096917/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}}}}