{"_default": {"1": {"hanumantmk": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/8ee6b3d31756d7939480f1283ec53af3bd6eb489", "message": "SERVER-32683 JS JIT off by default\n\nTurn off the spidermonkey jit by default."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "benety": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/d071ff8278abcd05d63c0367c49284645e844bcc", "message": "SERVER-32284 ReplicationCoordinatorImpl::_awaitReplication_inlock() always assumes null minSnapshot"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/0d97768115d093ed0041fff8c0ef39ba30c07e3f", "message": "SERVER-32284 remove ReplicationCoordinator::awaitReplicationOfLastOpForClient()"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/7ed79c16f619cab2195edf9cad37a3c4765c8a23", "message": "SERVER-32284 collMod waits for UUID schema changes using ReplicationCoordinator::awaitReplication() instead of awaitReplicationOfLastOpForClient()"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/f2af0ad889f1cfca7a311d53912c5b808500ea77", "message": "SERVER-29200 remove references to OplogEntry::raw from MultiApplier"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/25f0c6ae6c4fa80244cadb8a6bfcbf9bcc8b7742", "message": "SERVER-29200 migrate SyncTail::getMissingDoc() and fetchAndInsertMissingDoc() to accept OplogEntry instead of BSONObj"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/939a30aba1703c939b0352bded4b56257c8a0bec", "message": "SERVER-29200 add OplogEntry::getOperationToApply()\n\nremove references to OplogEntry::raw from rollback, prefetchPagesForReplicatedOp() and SyncTail"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/1378f8ec42068913c5bdc5927bbe86d5aed08814", "message": "SERVER-29200 add OplogEntry::getRawObjSizeBytes()\n\nremove references to OplogEntry::raw from SyncTail::OpQueue and InitialSyncer"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "will62794": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/6f885ea4579c04bd73c4d6fecc497520105f2609", "message": "SERVER-30818 Cleanup comments in background.h"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/aa35454e98a3026a7c44cc736d2326a3fa38e7b3", "message": "SERVER-30818 Add function to await background operations on multiple databases"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kevinAlbs": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/b9decc492c0ff942d5bcd6e8c799de70fa0839af", "message": "SERVER-21630 run CheckReplDBHash on csrs and shard replset\n\nAnd run ValidateCollections hook on priority=0 secondaries."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/8f4e5f800169e7825bbcde376904a8b65aa52e27", "message": "SERVER-31335 fix assert in retryable_writes_mmap"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "elouie99": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/f7d45863daa61920d3b6ee8abbf105833767a223", "message": "SERVER-31628 Always use a python virtualenv in etc/evergreen.yml"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lukech": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/23914068c331a42d1f98de0d58caecf0e391549a", "message": "Import wiredtiger: 357efdd4ce279efc71ff618c59fe1b903ef80bb2 from branch mongodb-3.8\n\nref: 9e50448231..357efdd4ce\nfor: 3.7.2\n\nWT-3565       Test and understand mixed timestamp/no-timestamp usage to same data\nWT-3597       Add a diagnostic check for updates to the same key out of timestamp order\nWT-3632       Increase how granularly cache usage settings can be configured\nWT-3695       format failed to report a stuck cache\nWT-3740       race in page dirty-byte decrement.\nWT-3767       Avoid lookaside instantiation for faster reads\nWT-3775       Improve commit timestamp is older than oldest timestamp error message\nWT-3792       LSM version 1 metadata incompatibility\nWT-3796       Report a better error message if transaction commit fails\nWT-3799       Test/format with timestamps enabled pin cache full\nWT-3809       Fix a bug in lookaside related to birthmarks\nWT-3811       Python scripts for visualizing operation tracking files\nWT-3818       __rec_txn_read() code order cleanup\nWT-3825       Fix calculation of CPU ticks per unit time\nWT-3826       random-abort test failure\nWT-3827       test_compact02 failure\nWT-3828       Link error on OS/X for __wt_process data reference\nWT-3831       uninitialized buffer value in statlog server path comparison\nWT-3832       Fixup shell script warning messages\nWT-3833       test/format cache_minimum value error\nWT-3841       Fix error message pattern in timestamp09\nWT-3842       full-build Friday & lint\nWT-3844       Checkpoints can hang on limbo pages\nWT-3845       Compiler warning in examples using GCC 5.4.0"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kmahar": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/23870b6aecac924a15af49bb7abe2f8e1cda2aa8", "message": "SERVER-30744 Move dropCollection logic from ShardingCatalogClient into ShardingCatalogManager"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/0bb9226dcedc4bcb98ce97f10f1262da3905d71b", "message": "SERVER-32365 Move the logic of the dropDatabase command into the new _configsvrDropDatabase command"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kaloianm": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/7f4e454907f14a5a82195d15e6ee96cbcd6d4d5b", "message": "SERVER-32447 Add a mock CatalogCache::getCollectionRoutingInfoAt method\n\nThe added method always returns the routing information at the latest\ntimestamp."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/b5ebe8a5492c4f5e33970c0f885b9ac51460b9dc", "message": "SERVER-29423 Prevent the balancer policy from scheduling migrations with the same source or destination"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "visualzhou": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/7d2f43adabb344f93ef8bec523efa3187bcf4ce6", "message": "SERVER-32317 Make sharding chunk manipulation operations use doTxn instead of applyOps"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vessy-mongodb": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/35c44dbd37c0167cc07420c8ea286ad6edfac7ff", "message": "SERVER-30347 Fail startup when running wiredTiger with --nojournal as part of a replica set"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "BillyDonahue": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/a8561f9a3775083eaf17e648850791a2cbd37893", "message": "SERVER-32070 remove stdx::bind (final patch)"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/a6e45f0e35724ae7958e31fc141c89afcefe4d33", "message": "SERVER-32646 CommandHelpers"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mtrussotto": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/ef81d53b986aa701c722820a204eba73a635f748", "message": "SERVER-32726 Fix out-of-order error code in update_driver.cpp"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nzolnierzmdb": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/4eabf1ea6225f444b3b0b3b2fee785aaa306212f", "message": "Revert \"SERVER-32308: Add the ability for a $lookup stage to execute on mongos against a sharded foreign collection\"\n\nThis reverts commit 7298d273c0497f2720ec1471ad0f4910bff07af4."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "markbenvenuto": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/2f788aa745ca1366704b821087225af49ce3285a", "message": "SERVER-32161 MongoDB 3.2+ fails to compile on PPC64LE with glibc 2.26+"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/f971dee540b9c9f7d6a92e278900e8bb00014f92", "message": "SERVER-32649 WiredTiger fails on non-x64 builds of new GCC"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "syev": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/07031843f1868a956b28f9e0e4d546cce4badfbf", "message": "SERVER-32614 Remove usage of non-threadsafe strptime()"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "henrikingo": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/0784425fa2d58b6a2bff3125b50be7f0d6a7f489", "message": "SERVER-32704 sys-perf: Skip validating oplog as enabled by SERVER-32243"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sulabhM": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/86c02f1c786ccf46f97f4561ab0ad85aed87c297", "message": "SERVER-32505 Create mobile SE evergreen variant - Linux"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "acmorrow": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/20258d04c3bb4352c84af091bca1d404dac9cfee", "message": "SERVER-30815 Add some missing LIBDEPS edges"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cramaechi": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1203", "title": "[SERVER-32259] Update wiredtiger_util.cpp", "body": "WiredTigerUtil::fetchTypeAndSourceURI() is using\r\ninvariant(colgroupResult.isOK()) instead of\r\ninvariantOK(colgroupResult.getStatus()). This means that if the\r\ninvariant ever fires, we don't know what the bad Status actually was.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "JunHe77": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1202", "title": "SERVER-32576: Merge ARM64 support to use 64-bit optimized code path", "body": "Change-Id: Icd2e0f9378952bbd811b54fe60a7f3895c960e92\r\nSigned-off-by: Jun He <jun.he@arm.com>", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kakts": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1198", "title": "Fix typos in config_server_test_fixture.cpp and dpml_error_codes.c", "body": "## Summary\r\nI found some typos in files as below.\r\n\r\n```\r\nsrc/mongo/s/config_server_test_fixture.cpp\r\nsrc/third_party/IntelRDFPMathLib20U1/LIBRARY/float128/dpml_error_codes.c\r\n```\r\n\r\nreponse  \u2192 response\r\n\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zhihuiFan": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1197", "title": "SERVER-4785 maintain slowms at database level", "body": "See issue at https://jira.mongodb.org/browse/SERVER-4785 and https://jira.mongodb.org/browse/SERVER-18946 \r\n\r\n\r\nHere is the test result.\r\n\r\n\r\nzhifan@zhifan-dev16:~/github/mongo$ ./mongo\r\n> db.getProfilingStatus()\r\n{ \"was\" : 0, \"slowms\" : 100, \"sampleRate\" : 1 }\r\n> db.setProfilingLevel(0, 1)\r\n{ \"was\" : 0, \"slowms\" : 100, \"sampleRate\" : 1, \"ok\" : 1 }\r\n> db.getProfilingStatus()\r\n{ \"was\" : 0, \"slowms\" : 1, \"sampleRate\" : 1 }\r\n> for(var i =0; i<10000; i++) {db.test.save({'i': i})}\r\nWriteResult({ \"nInserted\" : 1 })\r\n> use test2\r\nswitched to db test2\r\n> db.getProfilingStatus()\r\n{ \"was\" : 0, \"slowms\" : 100, \"sampleRate\" : 1 } . -- test 2: still 100\r\n> for(var i =0; i<10000; i++) {db.test.save({'i': i})}\r\nWriteResult({ \"nInserted\" : 1 })\r\n\r\n\r\nas a result:  we capture the slow queries from test database but not for test2 database.\r\n\r\n`\r\n2017-12-26T13:38:32.678+0800 I COMMAND  [conn1] command test.test appName: \"MongoDB Shell\" command: insert { insert: \"test\", ordered: true, $db: \"test\" } ninserted:1 keysInserted:1 numYields:0 reslen:29 locks:{ Global: { acquireCount: { r: 3, w: 1 } }, Database: { acquireCount: { w: 1, R: 1 } }, Collection: { acquireCount: { w: 1 } } } protocol:op_msg 3ms\r\n\r\n`\r\n\r\n  ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bmanojlovic": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1195", "title": "initial scons 3.0.1 and python3 build support", "body": "This PR allows building mongo with use of latest (3.0.1) scons which now uses python3 by default.\r\nThere are still a lot of rough edges but on the end it allows building binary mongod\r\n\r\npython version:\r\n```\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> python3 --version\r\nPython 3.6.3\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> \r\n```\r\nscons version:\r\n```\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> scons -v\r\nSCons by Steven Knight et al.:\r\n        script: v3.0.1.74b2c53bc42290e911b334a6b44f187da698a668, 2017/11/14 13:16:53, by bdbaddog on hpmicrodog\r\n        engine: v3.0.1.74b2c53bc42290e911b334a6b44f187da698a668, 2017/11/14 13:16:53, by bdbaddog on hpmicrodog\r\n        engine path: ['/usr/lib/scons-3.0.1/SCons']\r\nCopyright (c) 2001 - 2017 The SCons Foundation\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched>\r\n```\r\nand finally running scons on my machine\r\n```\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> scons -j 8 MONGO_VERSION=3.6.0  --disable-warnings-as-errors  --ssl\r\nscons: Reading SConscript files ...\r\nMkdir(\"build/scons\")\r\nscons version: 3.0.1\r\npython version: 3 6 3 final 0\r\nChecking whether the C compiler works... yes\r\nChecking whether the C++ compiler works... yes\r\n...\r\n...\r\n...\r\nranlib build/blah/mongo/db/query/libquery_common.a\r\nGenerating library build/blah/mongo/db/libmongod_options.a\r\nranlib build/blah/mongo/db/libmongod_options.a\r\nLinking build/blah/mongo/mongod\r\nInstall file: \"build/blah/mongo/mongod\" as \"mongod\"\r\nscons: done building targets.\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> \r\n```\r\nand of course running built binary\r\n```\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> ./mongod --dbpath /tmp/ --bind_ip 127.0.0.1\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] MongoDB starting : pid=2937 port=27017 dbpath=/tmp/ 64-bit host=pc\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] db version v3.6.0\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] git version: 9038d0a67ee578aa68ef8482b1fc98750d1007a6\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] OpenSSL version: OpenSSL 1.1.0g-fips  2 Nov 2017\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] allocator: tcmalloc\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] modules: none\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] build environment:\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten]     distarch: x86_64\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten]     target_arch: x86_64\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] options: { net: { bindIp: \"127.0.0.1\" }, storage: { dbPath: \"/tmp/\" } }\r\n2017-12-22T18:52:02.566+0000 I STORAGE  [initandlisten] Detected data files in /tmp/ created by the 'wiredTiger' storage engine, so setting the active storage engine to 'wiredTiger'.\r\n2017-12-22T18:52:02.566+0000 I STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=15542M,session_max=20000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000),statistics_log=(wait=0),verbose=(recovery_progress),\r\n2017-12-22T18:52:02.637+0000 I STORAGE  [initandlisten] WiredTiger message [1513968722:637511][2937:0x7f87663729c0], txn-recover: Main recovery loop: starting at 6/4736\r\n2017-12-22T18:52:02.679+0000 I STORAGE  [initandlisten] WiredTiger message [1513968722:679111][2937:0x7f87663729c0], txn-recover: Recovering log 6 through 7\r\n2017-12-22T18:52:02.706+0000 I STORAGE  [initandlisten] WiredTiger message [1513968722:706386][2937:0x7f87663729c0], txn-recover: Recovering log 7 through 7\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] ** WARNING: /sys/kernel/mm/transparent_hugepage/enabled is 'always'.\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] **        We suggest setting it to 'never'\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] ** WARNING: soft rlimits too low. rlimits set to 4096 processes, 64000 files. Number of processes should be at least 32000 : 0.5 times number of files.\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.736+0000 I FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory '/tmp/diagnostic.data'\r\n2017-12-22T18:52:02.737+0000 I NETWORK  [initandlisten] waiting for connections on port 27017\r\n```\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "m-masataka": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1191", "title": "The GCC version should be updated in SConstruct", "body": "In ``docs/building.md`` , It require GCC version 5.4.0 or newer, but ``SConstruct`` require 5.3.0 or newer.\r\nIs it mistake? ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "judu": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1186", "title": "Fix build.", "body": "Without these using `std::string`, mongodb does not build here.\r\n\r\nI'm using gcc 6.4.0.\r\n\r\nPlease ask if you need more information about my build :)", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zydcom": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1171", "title": "SERVER-30636\uff1afix range deleter crash", "body": "This patch can be also used for v3.2 ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ryankall": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1169", "title": "Server 25311", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/1140", "title": "Verbosity bug", "body": "now the Explain command will not accept unknown command like verbos: 'queryPlanner'", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lorien": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1162", "title": "Fix error in command example in mongorestore.1 man", "body": "The trailing slash argument is missing in mongorestore command example in debian mans.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "SunguckLee": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1151", "title": "Support prefix match for full-text search", "body": "Add range search feature on full text search (original version has only exact match)\r\n\r\nFor CJK language, mongodb does not support stemmer for full text search.\r\nAlso not easy to implement stemmer for those language (Especially Korean).\r\nSo we usually use N-gram parser for full text search not supported mongodb yet.\r\n\r\nFortunately in Korean, we use space character between words and Korean(and also Japanese) use only suffix not prefix. So we can use mongodb full text search if mongodb support prefix match in fulltext. So I propose this simple feature.\r\n\r\n>> Match range of original fulltext search\r\n    * '\ud55c\uae00' <= match_range <= '\ud55c\uae00'\r\n    * '\ud14c\uc2a4\ud2b8' <= match_range <= '\ud14c\uc2a4\ud2b8'\r\n    * '\uc774\uc131' <= match_range <= '\uc774\uc131'\r\n    * '\ud55c' <= match_range <= '\ud55c'\r\n\r\n>> Match range of patched fulltext search\r\n    * '\ud55c\uae00' <= match_range < '\ud55c\uae01'\r\n    * '\ud14c\uc2a4\ud2b8' <= match_range < '\ud14c\uc2a4\ud2b9'\r\n    * '\uc774\uc131' <= match_range < '\uc774\uc132'\r\n    * '\ud55c' <= match_range < '\ud55d'\r\n\r\nI hope user can control this search mode (exact or prefix match) by query parameter or internal parameter.\r\n\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sam-pf": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1149", "title": "change log message for CRL loading", "body": "The log message from _setupCRL was misleading.  It is not the number of revoked certificates that X509_load_crl_file returns.  It is the number of CRLs (X509_CRL structures) that it successfully loads that it returns.\r\n\r\nhttps://github.com/openssl/openssl/blob/c0452248ea1a59a41023a4765ef7d9825e80a62b/crypto/x509/by_file.c\r\n\r\nhttp://www.umich.edu/~x509/ssleay/x509_crls.html\r\n  ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nleite": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1136", "title": "SERVER-1889 internal replication nic", "body": "- support for internal replication nic", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kolisergej": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1128", "title": "[SERVER-8958] Replace strtod/strtol/atoi/atol/etc calls with parseNumberFromString<T>", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ZharkovIlia": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1122", "title": "General Improvements v2", "body": "Elimination of some redundancy. Some function arguments are passed by reference. Few bugs are fixed.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "thesebas": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1121", "title": "Fix for negative Date timezone offsets ", "body": "When uncommented this `// print a non-UTC time` block and changed `var UTC = '';` got invalid timezone offsets like: `ISODate(\"2016-11-14T00:00:00+-100\")`. This makes Date be displayed as `ISODate(\"2016-11-14T00:00:00+0100\")`", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "danharel": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1093", "title": "SERVER-24519 Added framework for micro benchmark tools", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Soullivaneuh": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1061", "title": "[WIP] [3.x] Alpine linux compatibility", "body": "Same as #1060 but for 3.x version.\n- [x] alpine-release on processinfo\n- [x] Fix `'ELFCLASS__ELF_NATIVE_CLASS' was not declared in this scope`\n- [x] Fix `gnu_get_libc_version` usage that does not exist on Musl\n- [x] Fix undefined `mallinfo` function\n- [x] error_code.ipp:110:22: error: could not convert 'strerror_r(value, ((char*)(& buf)), sizeof (buf))' from 'int' to 'std::__cxx11::string {aka std::__cxx11::basic_string<char>}\n  - https://github.com/chriskohlhoff/asio/pull/95\n- [ ] `third_party/gperftools-2.2`: `error: '__off64_t' has not been declared`\n  - https://github.com/gperftools/gperftools/issues/693\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "salessandri": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1027", "title": "SERVER-8839 TimerStats and TimerHolder should work with microseconds.", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "e-siedler": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/275", "title": "SERVER-2541 Windows performance counters implemented", "body": "Fully functional windows performance counters imlpemented as a mongod.exe Module.\n\nSee README. See jira SERVER-2541 for some additional notes.\n- No Visual Studio project file have been updated. (I can't do that with VS Express).\n- I didn't make use of this new \"buildscripts/moduleconfig.py\" infrastructure mostly because of my incompetence: new to scons, new to python, didn't like both. 8-)\n- There is a new artifact that needs to be distributed along with mongod.exe: mongod.man. I didn't look into that (packaging).\n\nThanks\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bgianfo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/501190", "body": "Not sure what the deal is, but I made a last minute change before I committed, breaking this patch. \nhttp://github.com/bgianfo/mongo/commit/dc2c046c95c2b9ae8d2ec9f0d26987951437d502#diff-0\n\nPulling this commit also, you have the complete working package. :)\n\nI would add it to the pull request, but github seems to have made that impossible? \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/501190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "halfdan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/597405", "body": "When will this get integrated? Any feedback?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/597405/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "erh": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/662702", "body": "We're going to start including a minimal set of boost in the source tree to avoid conflicts and too much branching in the code.\nThat will be in the 2.0 cycle and should be boost 1.45, so not sure we want to do this right now, especially right before 1.8.0\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/662702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724077", "body": "Couple of notes: \n- we're not going to change the type from number to string\n- names should be consistent between dbstats/collstats\n- keeping commit log clean is important\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724094", "body": "dbstats already has a named value for this option, so you should use the same one.\n\nre: the commit stream, each commit should be a logical unit, but we also want to keep the number reasonable.  There are 9 listed above (though i guess really only 7)\nFor example, if you change a command, the change to the shell should be in the same commit.\n\nWe're in lockdown for 1.8, so will be a while before we would merge this in, and not sure this is exactly where we'll want to go with it.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742853", "body": "I'm seeing about a 10% improvement.\nThe problem is that Array doesn't currently require the elements to be in order.\nIn fact some implementations have it like this\n{ \"0\" : 1 , \"1\" : 1 , \"10\" : 10 , \"2\" : 2 , ... }\n So this patch will break some clients.\nThere is a more complex patch you could do which verifies the order while iterating.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742895", "body": "No, the spec doesn't say it has to be in order.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742895/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742903", "body": "I did this:\nhttps://github.com/mongodb/mongo/commit/cd834438e55086442b264dfc6cc9425d8a34f0bd\n\nWhich is about 80% of the improvement\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1086311", "body": "Can you break these into different parts?\nSome look ok, others not so sure about (FuncMap for example)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1086311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103470", "body": "Right, but there seem to be others that are unrelated.\nWould just be better if we can make each logical change separate.\n\nOn Wed, May 4, 2011 at 10:55 PM, testn\nreply@reply.github.com\nwrote:\n\n> funcMap has to be there to help perform function lookup\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/pull/35#issuecomment-1103444\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103470/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1272158", "body": "There are a few issues that I see at first glance.\n\n1) why did you remove the sparse check\n2) your'e not checking the type of \"filter\" correctly\n3) _matcher leaks - should be a scoped_ptr\n4) i don't think the queryoptimizer change is correct\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1272158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1430432", "body": "Fixed using the helper.\nThanks for pointing out\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1430432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/100728", "body": "vs2008 vs vs2010 issue\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/100728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/116980", "body": "don't comment out the lines in the method, just comment out doTest() etc...\nmakes it easer to test, etc...\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/116980/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/333394", "body": "The one you mentioned should be that way i believe.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/333394/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676120", "body": "Is there a reason you put slaveOk in the middle rather than the end so we can preserve backwards compatibility?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "adrien-mogenet": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724088", "body": "Ok Erh !\n- I had a doubt about keeping the types ; I will keep numbers when displaying raw values as currently\n- What do you mean about \"consistent names between dbstats/collstats\" ? I didn't change anything... ( I think )\n- Which rule did I not follow about commit log messages ? According to the doc (http://www.mongodb.org/display/DOCS/Git+Commit+Rules) : I have to put [SERVER-XXX] on every commit ?\n\nThanks,\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724088/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/250853", "body": "There is no way to make it cleaner using boost::filesystem ?\nhttp://www.boost.org/doc/libs/1_45_0/libs/filesystem/v2/doc/index.htm\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/250853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/335318", "body": "Why not checking that scale is a multiple of 1024 ?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/335318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "testn": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742681", "body": "With simple M/R such as collection count/max/min, the execution time can be cut in half\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742681/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742879", "body": "But this method is the conversion from BSONObj to jsval. Shouldn't BSONObj with Array type be in order according to the specification?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742879/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742912", "body": "That would work. \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103444", "body": "funcMap has to be there to help perform function lookup\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103444/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103889", "body": "okay. will rebranch it again and put the link\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103889/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "zippy1981": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/787400", "body": "WOO-HOO!!!!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/787400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/89046", "body": "Good to see I'm not the only one improving error messages! \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/89046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/90091", "body": "Is it necessarily a good idea to have class diagrams in the visual studio projects? These projects will always be an afterthought (and rightly so) to the scons project.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/90091/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/96083", "body": "Confirmed that actually worked.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/96083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/98475", "body": "stoll() doesn't exist in Visual Studio 2008. I'm installing the windows 7 SDK to see if that will rectify it, but perhaps even being dirty and calling atol() would be better than causing build problems.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/98475/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/98552", "body": "The older, more conservative function is _strtoi64()\nFix in http://github.com/zippy1981/mongo/commit/f7b7c07e2a72011b8dbd72d10dcbaa22d8e5fb54\nStackoverflow discussion is in http://stackoverflow.com/questions/3106026/is-there-a-stoll-stroll-string-to-long-long-alternative-in-visual-studio-20/3106060#3106060\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/98552/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/99757", "body": "Test code I used for this.:\n\n<pre>\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string>\n\nnamespace mongo {\n\n    inline void uasserted(int msgid , char* msg) { printf(\"Msg: %s\", msg); exit(4); }\n    /* \"user assert\".  if asserts, user did something wrong, not our code */\n    #define MONGO_uassert(msgid, msg, expr) (void)( (!!(expr)) || (mongo::uasserted(msgid, msg), 0) )\n    #define uassert MONGO_uassert\n\n    inline long long parseLL( const char *n );\n\n\n    // expect that n contains a base ten number and nothing else after it\n    // NOTE win version hasn't been tested directly\n    inline long long parseLL( const char *n ) {\n        long long ret;\n        uassert( 13307, \"cannot convert empty string to long long\", *n != 0 );\n#if !defined(_WIN32)\n        char *endPtr = 0;\n        errno = 0;\n        ret = strtoll( n, &endPtr, 10 );\n        uassert( 13305, \"could not convert string to long long\", *endPtr == 0 && errno == 0 );\n#else\n#if _MSC_VER>=1600\n        size_t endLen = 0;\n        try {\n            ret = std::stoll( n, &endLen, 10 );\n        } catch ( ... ) {\n            endLen = 0;\n        }\n        uassert( 13306, \"could not convert string to long long\", endLen != 0 && n[ endLen ] == 0 );\n#else // stoll() wasn't introduced into VS 2010.\n        char* endPtr = (char *)&n[strlen(n) - 1];\n        try {\n            ret = _strtoi64( n, &endPtr, 10 );\n        } catch ( ... ) {\n            endPtr = 0;\n        }\n        uassert( 13310, \"could not convert string to long long\", *endPtr == 0 );\n#endif // _MSC_VER >= 16\n#endif // !defined(_WIN32)\n        return ret;\n    }\n\n}\n\nvoid main () {\n    //printf(\"_MSC_VER: %d\\n\", _MSC_VER);\n\n    char szNumber[] = \"999999999\";\n    printf(\"number '%s': %d\\n\\n\", szNumber, mongo::parseLL(szNumber));\n    \n    char szNumberWhitespace[] = \"   999999999   999\";\n    printf(\"number '%s': %d\\n\\n\", szNumberWhitespace, mongo::parseLL(szNumberWhitespace));\n    \n    char szNumberBad[] = \"99r9dd999999\";\n    printf(\"number '%s': %d\\n\\n\", szNumberBad, mongo::parseLL(szNumberBad));\n}\n</pre>\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/99757/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/99771", "body": "Dwight,\n\nShouldn't we also check the error cases?\n\nI'll confess I'm not running the unit tests on my machine. I'll start doing that.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/99771/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/100400", "body": "The UTF-8 BOM, signifying nothing, and annoying the hell out of developers and users.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/100400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/100595", "body": "Was the near/far thing a 64 bit thing? I though the near/far dated back to win16 programming?\n\nRegardless, it compiles.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/100595/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/124765", "body": "Wouldn't \"-o -\" be more inline with unix convention than \"-o stdout\"? Or is the problem boost parsing? \n\nThen again, part of me thinks default mongodump behavior should be to stdout, and there shoulld be a new switch for current default behavior.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/124765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/132633", "body": "Double build break, double my bad. I'll have to start building on ubuntu to check these things.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/132633/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "s4y": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/875296", "body": "I just changed the contents of this pull request slightly. Somehow managed to fudge up a one-line fix!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/875296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1505577", "body": "Looks like this was fixed in e27fa36b4c47b277b6e140f641a1187b712d99ca. Cool!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1505577/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "radarek": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1021120", "body": "Guys, what is the progress of that? MongoDB needs count + distinct :).\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1021120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "defunctzombie": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1106255", "body": "Is there a reason this isn't being accepted? It is low risk while adding a desired build functionality.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1106255/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mattbillenstein": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1216540", "body": "Also added a commit to allow mongorestore to use \"-\" as stdin when given both --db and --collection\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1216540/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "JensRantil": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1248211", "body": "The above commented small fixes were now added to this pull request. Feel free to include whenever you want to.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1248211/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lqs": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1279530", "body": "@erh\n\ni think the sparse assertion is useless because _nFields always > 0. and the sparse index can be created even if there's two or more fields.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1279530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mrohnstock": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1386332", "body": "Since 2010 this don't get included to mongodb c++ driver. Is there any other way to get the double field from BSONObj?\n\nUsed: bsonobj.getField(\"whatever\").Double(), but will end with assereration error.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1386332/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1388754", "body": "forget it... bsonobj.getField(\"whatever\").numberDouble() did the trick, got another mistake in code - just ignore my input.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1388754/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lqez": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1414175", "body": "Wow, I _really_ need these cool patches.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1414175/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "plaes": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1586684", "body": "How about this?\n\n```\nelif os.sys.platform in ('linux2', 'linux3'):\n```\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1586684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mongodb": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/14485", "body": "this was just a test.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/14485/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "metagoto": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/53383", "body": "lol ;)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/53383/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "phase2": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/55958", "body": "Looks like a typo here:\n\nhttp://github.com/mongodb/mongo/commit/2b7eb102159a36129222afa1883ea3b15145e08b#L0R40\n\nSee &7 instead of &&\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/55958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "thbar": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/58482", "body": "Bravo :)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/58482/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "dwight": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/90094", "body": "that's an accident.  will remove.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/90094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/99795", "body": "sure.\n\nUnitTest is something that runs at every server startup.  so they must very light and fast.\n\n\"real\" tests should go in dbtests / test binary (or jstests if applicable)\n\nrunning tests v good idea.  see \"smoke\" page on wiki\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/99795/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/181437", "body": "right.  will take it out.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/181437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/165991", "body": "use unique_ptr here\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/165991/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "thomasst": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/96213", "body": "Shouldn't the constant MaxBSONObjectSize be used instead? In case one wants to customize the size.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/96213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "TonyGen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/117314", "body": "Eliot, please roll this commit back. I found a bug with it. I didn't think you would include it until I made a pull request to you. Thanks, Tony\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/117314/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "dmytton": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/181433", "body": "Won't this catch use of small oplog size when used with an arbiter? In your docs you recommend using a small oplog  http://www.mongodb.org/display/DOCS/Adding+an+Arbiter\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/181433/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "hackworks": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/248914", "body": "Could InterLockedExchange be used on windows and __sync_xor_and_fetch when GCC is used?\nFor windows:\nhttp://msdn.microsoft.com/en-us/library/ms683590(v=vs.85).aspx\nFor GCC:\nhttp://gcc.gnu.org/onlinedocs/gcc/Atomic-Builtins.html\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/248914/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "gregstuder": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/301135", "body": "detects int overflow in passed 2d bounds/parameters\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/301135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/328497", "body": "Major change here is basically to pull up the expand algorithm into the superclass.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/328497/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "shriharipandit": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/333336", "body": "You also need to make a similar change within void ReplicaSetMonitor::_checkHosts():\n\nLine 297: log(1) << \"updated set (\" << _name << \") to: \" << getServerAddress()\n\nPerhaps more places as well.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/333336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "tadmarshall": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/166291", "body": "This was part of my fixing the memory leak in the shell.  The problem was\nthat memory was allocated by strdup() and never freed.  Since strdup() calls\nmalloc(), I added matching free() calls.  This bit of code is on the #else\nside of an #ifdef USE_LINENOISE and so isn't in the current code, but if\nUSE_LINENOISE was turned off then the call to \"new char[1024]\" would end up\ngetting passed to free() and it seemed better to match malloc() with free()\ninstead of new with free().  Without changing the entire way this memory is\nallocated and freed (a bigger change) I can't just use unique_ptr in one\nspot.  strdup() calls malloc() and I can't switch to unique_ptr without\nreplacing the strdup() calls.  I was trying to make minimal changes to fix\nthe memory leak.\n\n-----Original Message-----\nFrom: Dwight Merriman\n[mailto:reply+p-165991-d7ea43fd753410cd3421867a9c1b3e0d018a6daf@reply.github\n.com] \nSent: Wednesday, October 12, 2011 1:50 AM\nTo: Tad Marshall\nSubject: Re: [mongo] SERVER-4043 -- fix tab completion in mid-code (#110)\n\n> @@ -313,7 +315,7 @@ char \\* shellReadline( const char \\* prompt , int\n> handlesigint = 0 ) {\n>      return ret;\n>  #else\n>      printf(\"%s\", prompt); cout.flush();\n> -    char \\* buf = new char[1024];\n\nuse unique_ptr here\n\n## \n\nReply to this email directly or view it on GitHub:\nhttps://github.com/mongodb/mongo/pull/110/files#r165991\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/166291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "hoffrocket": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/196130", "body": "should be \"return LOG_INFO;\"\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/196130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/196132", "body": "pragram ->  program\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/196132/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "amschwerin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660497", "body": "For exception safety, use a boost::scoped_ptr to hold the result of readDocument().\n\nboost::scoped_ptr<BSONObj> o(readDocument(file, buf, BUF_SIZE));\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660497/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660503", "body": "This function should not be inlined.  Implement it in the cpp file.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660503/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660530", "body": "Ditto on scoped_ptr, here.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676654", "body": "(1) Inlining it won't help performance.\n(2) Inlining it will increase the binary size.\n(3) Inlining it means that any time it changes, all modules that include tool.h must be recompiled, which slows down incremental compilation.  This is important to developers.\n\nSo, it does two bad things and no good things.  Don't inline it.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676654/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/694609", "body": "In the event that the file is truncated, the old code would alert for failure in the event that the input file was truncated, and did not contain an even multiple of 4 bytes.  This change will silently stop processing, which is a behavior change.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/694609/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/694614", "body": "\"isFifoFile\", instead of \"fifo\".\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/694614/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/774347", "body": "Thanks for pinging.  Will look again.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/774347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/794711", "body": "Haven't forgotten.  Really swamped over here.\n\nOn Fri, May 4, 2012 at 8:36 AM, Azat Khuzhin\nreply@reply.github.com\nwrote:\n\n> > \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0size_t amt = fread(buf, 1, 4, file);\n> > - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0// end of fifo/file\n> > - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0if ( feof(file) ) {\n> > - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0break;\n> \n> @andy10gen ?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/pull/205/files#r773788\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/794711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935900", "body": "I think this needs to default to None, or on systems where \"g++\" is not the default compiler, builds will fail when --cxx is not specified.  I.e., Windows/MSVC systems.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935900/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935902", "body": "Again, default to None.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935912", "body": "Though we haven't been very consistent in the past, SConstruct files are python code, and should follow PEP-8 style.\n\nconf.env.Replace(CXX=GetOption(\"cxx\"))\n\nNote where whitespace has been removed.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935918", "body": "I think I'd rather omit these print statements.  If we want to report which compilers are being used, we should do that separately from option setting.  The compiler command line and link flags show up in the output, anyways.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935918/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "azat": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/664362", "body": "Why it should?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/664362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/699717", "body": "@andy10gen, it will fail at https://github.com/mongodb/mongo/pull/205/files#L1R549 ( `m.done() == fileLength` ). Is it enough?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/699717/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/773788", "body": "@andy10gen ?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/773788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "onyxmaster": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676141", "body": "No particular reason, I justified its placement on the basis that GridFile constructor is private so existing code shouldn't be broken by this change (the default value is not provided for the same reason), and that slaveOk felt to me as something immutable and should be close to another immutable (grid) both in field definitions (line 200 below) and the argument list.\nIf you feel that GridFile constructor might become protected or public some day, I agree with you that slaveOk should be placed at the end and, probably have the default false value added.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676142", "body": "If you prefer, I can make changes on my end and update the pull request, just tell me.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676142/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "milkie": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757112", "body": "I think we'll need to actually create the file on first use, rather than requesting the user do it.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757112/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757116", "body": "Also we should put in a link to the new documentation site and a mention of the mongo-users google group.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757116/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757123", "body": "_isatty() instead?  we already use it in util/log.cpp\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757123/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "lcapaldo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757185", "body": "Just put #define isatty _isatty in platform/windows?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757190", "body": "Yeah I can do both these things.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "cwestin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764933", "body": "I think $strlen on a nonexistent field should return zero.  This fits the operation of other operators, which are as forgiving as possible unless the result is definitively wrong.  Here, I think it makes sense to treat this as an empty string.  However, I think it should be an error to call $strlen on a real field that does not contain a string value.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764933/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764939", "body": "Why did you remove these assertions?  Since they seem to work for everyone else, it's safer to first assume there's something wrong on your setup, and that we should figure out what that is.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764939/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764972", "body": "Before this, I would check for pString.get() being NULL, or pString.getType() == jstNULL (from bson/bsontypes.h).  If either of those is true, return Value::getZero().  That will handle returning zero for a non-existent or null valued field.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}}, "2": {"henrikingo": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/086cec19cbd0f0a4a122d4cfa6f099dbaa2ef21d", "message": "SERVER-32260 Call workload_setup.py from system_perf.yml and longevity.yml"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "benety": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/7713d5531c663603d17fff1267d013e0b6867e5b", "message": "SERVER-32284 rename ReplicationCoordinator::reserveSnapshotName() to getMinimumVisibleSnapshot()"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/25b7af8b7367de11f0d4d864bd6a51983227c494", "message": "SERVER-32284 remove unused last snapshot support from ReplClientInfo"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/13a33d961f6936dc8290b8bb80f5c5b9e599f0a9", "message": "SERVER-32284 ReplicationCoordinatorImpl::_doneWaitingForReplication_inlock() always assumes null minSnapshot"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/d071ff8278abcd05d63c0367c49284645e844bcc", "message": "SERVER-32284 ReplicationCoordinatorImpl::_awaitReplication_inlock() always assumes null minSnapshot"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/0d97768115d093ed0041fff8c0ef39ba30c07e3f", "message": "SERVER-32284 remove ReplicationCoordinator::awaitReplicationOfLastOpForClient()"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/7ed79c16f619cab2195edf9cad37a3c4765c8a23", "message": "SERVER-32284 collMod waits for UUID schema changes using ReplicationCoordinator::awaitReplication() instead of awaitReplicationOfLastOpForClient()"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/f2af0ad889f1cfca7a311d53912c5b808500ea77", "message": "SERVER-29200 remove references to OplogEntry::raw from MultiApplier"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/25f0c6ae6c4fa80244cadb8a6bfcbf9bcc8b7742", "message": "SERVER-29200 migrate SyncTail::getMissingDoc() and fetchAndInsertMissingDoc() to accept OplogEntry instead of BSONObj"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/939a30aba1703c939b0352bded4b56257c8a0bec", "message": "SERVER-29200 add OplogEntry::getOperationToApply()\n\nremove references to OplogEntry::raw from rollback, prefetchPagesForReplicatedOp() and SyncTail"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sulabhM": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/8fd172e330b5af597bfba60d0bb7add8dc1a236c", "message": "SERVER-32506 OSX Mobile SE variant: Tag tests to skip on mobile SE"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "RedBeard0531": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/daf6c4714b45aeb8ba1a09380135b3267c4cc280", "message": "SERVER-32617 Fix code that reconstructs status with just code and string"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/4dc36c7ccb6b5b8f7d865993b5d648fe6dc4b7c7", "message": "SERVER-32684 Make mongos write command objects hold Status directly"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/68b961b28f5dd40501f0ef9b6c6b515ff1ec7cfd", "message": "SERVER-32673 Make WorkingSetCommon::buildMemberStatusObject handle ErrorExtraInfo"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/b165c1e9275016dc15d071d147cec0e5b1bc1f31", "message": "SERVER-32587 Convert StaleConfigException to use ErrorExtraInfo"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/84c3f83421b262028081296e4c387d29691ea376", "message": "SERVER-32586 Convert ResolvedView to use ErrorExtraInfo"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hanumantmk": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/8ee6b3d31756d7939480f1283ec53af3bd6eb489", "message": "SERVER-32683 JS JIT off by default\n\nTurn off the spidermonkey jit by default."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "will62794": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/6f885ea4579c04bd73c4d6fecc497520105f2609", "message": "SERVER-30818 Cleanup comments in background.h"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/aa35454e98a3026a7c44cc736d2326a3fa38e7b3", "message": "SERVER-30818 Add function to await background operations on multiple databases"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kevinAlbs": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/b9decc492c0ff942d5bcd6e8c799de70fa0839af", "message": "SERVER-21630 run CheckReplDBHash on csrs and shard replset\n\nAnd run ValidateCollections hook on priority=0 secondaries."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "elouie99": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/f7d45863daa61920d3b6ee8abbf105833767a223", "message": "SERVER-31628 Always use a python virtualenv in etc/evergreen.yml"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lukech": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/23914068c331a42d1f98de0d58caecf0e391549a", "message": "Import wiredtiger: 357efdd4ce279efc71ff618c59fe1b903ef80bb2 from branch mongodb-3.8\n\nref: 9e50448231..357efdd4ce\nfor: 3.7.2\n\nWT-3565       Test and understand mixed timestamp/no-timestamp usage to same data\nWT-3597       Add a diagnostic check for updates to the same key out of timestamp order\nWT-3632       Increase how granularly cache usage settings can be configured\nWT-3695       format failed to report a stuck cache\nWT-3740       race in page dirty-byte decrement.\nWT-3767       Avoid lookaside instantiation for faster reads\nWT-3775       Improve commit timestamp is older than oldest timestamp error message\nWT-3792       LSM version 1 metadata incompatibility\nWT-3796       Report a better error message if transaction commit fails\nWT-3799       Test/format with timestamps enabled pin cache full\nWT-3809       Fix a bug in lookaside related to birthmarks\nWT-3811       Python scripts for visualizing operation tracking files\nWT-3818       __rec_txn_read() code order cleanup\nWT-3825       Fix calculation of CPU ticks per unit time\nWT-3826       random-abort test failure\nWT-3827       test_compact02 failure\nWT-3828       Link error on OS/X for __wt_process data reference\nWT-3831       uninitialized buffer value in statlog server path comparison\nWT-3832       Fixup shell script warning messages\nWT-3833       test/format cache_minimum value error\nWT-3841       Fix error message pattern in timestamp09\nWT-3842       full-build Friday & lint\nWT-3844       Checkpoints can hang on limbo pages\nWT-3845       Compiler warning in examples using GCC 5.4.0"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kmahar": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/23870b6aecac924a15af49bb7abe2f8e1cda2aa8", "message": "SERVER-30744 Move dropCollection logic from ShardingCatalogClient into ShardingCatalogManager"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kaloianm": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/7f4e454907f14a5a82195d15e6ee96cbcd6d4d5b", "message": "SERVER-32447 Add a mock CatalogCache::getCollectionRoutingInfoAt method\n\nThe added method always returns the routing information at the latest\ntimestamp."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "visualzhou": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/7d2f43adabb344f93ef8bec523efa3187bcf4ce6", "message": "SERVER-32317 Make sharding chunk manipulation operations use doTxn instead of applyOps"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vessy-mongodb": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/35c44dbd37c0167cc07420c8ea286ad6edfac7ff", "message": "SERVER-30347 Fail startup when running wiredTiger with --nojournal as part of a replica set"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "BillyDonahue": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/a8561f9a3775083eaf17e648850791a2cbd37893", "message": "SERVER-32070 remove stdx::bind (final patch)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mtrussotto": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/ef81d53b986aa701c722820a204eba73a635f748", "message": "SERVER-32726 Fix out-of-order error code in update_driver.cpp"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nzolnierzmdb": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/4eabf1ea6225f444b3b0b3b2fee785aaa306212f", "message": "Revert \"SERVER-32308: Add the ability for a $lookup stage to execute on mongos against a sharded foreign collection\"\n\nThis reverts commit 7298d273c0497f2720ec1471ad0f4910bff07af4."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cramaechi": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1203", "title": "[SERVER-32259] Update wiredtiger_util.cpp", "body": "WiredTigerUtil::fetchTypeAndSourceURI() is using\r\ninvariant(colgroupResult.isOK()) instead of\r\ninvariantOK(colgroupResult.getStatus()). This means that if the\r\ninvariant ever fires, we don't know what the bad Status actually was.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "JunHe77": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1202", "title": "SERVER-32576: Merge ARM64 support to use 64-bit optimized code path", "body": "Change-Id: Icd2e0f9378952bbd811b54fe60a7f3895c960e92\r\nSigned-off-by: Jun He <jun.he@arm.com>", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kakts": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1198", "title": "Fix typos in config_server_test_fixture.cpp and dpml_error_codes.c", "body": "## Summary\r\nI found some typos in files as below.\r\n\r\n```\r\nsrc/mongo/s/config_server_test_fixture.cpp\r\nsrc/third_party/IntelRDFPMathLib20U1/LIBRARY/float128/dpml_error_codes.c\r\n```\r\n\r\nreponse  \u2192 response\r\n\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zhihuiFan": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1197", "title": "SERVER-4785 maintain slowms at database level", "body": "See issue at https://jira.mongodb.org/browse/SERVER-4785 and https://jira.mongodb.org/browse/SERVER-18946 \r\n\r\n\r\nHere is the test result.\r\n\r\n\r\nzhifan@zhifan-dev16:~/github/mongo$ ./mongo\r\n> db.getProfilingStatus()\r\n{ \"was\" : 0, \"slowms\" : 100, \"sampleRate\" : 1 }\r\n> db.setProfilingLevel(0, 1)\r\n{ \"was\" : 0, \"slowms\" : 100, \"sampleRate\" : 1, \"ok\" : 1 }\r\n> db.getProfilingStatus()\r\n{ \"was\" : 0, \"slowms\" : 1, \"sampleRate\" : 1 }\r\n> for(var i =0; i<10000; i++) {db.test.save({'i': i})}\r\nWriteResult({ \"nInserted\" : 1 })\r\n> use test2\r\nswitched to db test2\r\n> db.getProfilingStatus()\r\n{ \"was\" : 0, \"slowms\" : 100, \"sampleRate\" : 1 } . -- test 2: still 100\r\n> for(var i =0; i<10000; i++) {db.test.save({'i': i})}\r\nWriteResult({ \"nInserted\" : 1 })\r\n\r\n\r\nas a result:  we capture the slow queries from test database but not for test2 database.\r\n\r\n`\r\n2017-12-26T13:38:32.678+0800 I COMMAND  [conn1] command test.test appName: \"MongoDB Shell\" command: insert { insert: \"test\", ordered: true, $db: \"test\" } ninserted:1 keysInserted:1 numYields:0 reslen:29 locks:{ Global: { acquireCount: { r: 3, w: 1 } }, Database: { acquireCount: { w: 1, R: 1 } }, Collection: { acquireCount: { w: 1 } } } protocol:op_msg 3ms\r\n\r\n`\r\n\r\n  ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bmanojlovic": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1195", "title": "initial scons 3.0.1 and python3 build support", "body": "This PR allows building mongo with use of latest (3.0.1) scons which now uses python3 by default.\r\nThere are still a lot of rough edges but on the end it allows building binary mongod\r\n\r\npython version:\r\n```\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> python3 --version\r\nPython 3.6.3\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> \r\n```\r\nscons version:\r\n```\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> scons -v\r\nSCons by Steven Knight et al.:\r\n        script: v3.0.1.74b2c53bc42290e911b334a6b44f187da698a668, 2017/11/14 13:16:53, by bdbaddog on hpmicrodog\r\n        engine: v3.0.1.74b2c53bc42290e911b334a6b44f187da698a668, 2017/11/14 13:16:53, by bdbaddog on hpmicrodog\r\n        engine path: ['/usr/lib/scons-3.0.1/SCons']\r\nCopyright (c) 2001 - 2017 The SCons Foundation\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched>\r\n```\r\nand finally running scons on my machine\r\n```\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> scons -j 8 MONGO_VERSION=3.6.0  --disable-warnings-as-errors  --ssl\r\nscons: Reading SConscript files ...\r\nMkdir(\"build/scons\")\r\nscons version: 3.0.1\r\npython version: 3 6 3 final 0\r\nChecking whether the C compiler works... yes\r\nChecking whether the C++ compiler works... yes\r\n...\r\n...\r\n...\r\nranlib build/blah/mongo/db/query/libquery_common.a\r\nGenerating library build/blah/mongo/db/libmongod_options.a\r\nranlib build/blah/mongo/db/libmongod_options.a\r\nLinking build/blah/mongo/mongod\r\nInstall file: \"build/blah/mongo/mongod\" as \"mongod\"\r\nscons: done building targets.\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> \r\n```\r\nand of course running built binary\r\n```\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> ./mongod --dbpath /tmp/ --bind_ip 127.0.0.1\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] MongoDB starting : pid=2937 port=27017 dbpath=/tmp/ 64-bit host=pc\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] db version v3.6.0\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] git version: 9038d0a67ee578aa68ef8482b1fc98750d1007a6\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] OpenSSL version: OpenSSL 1.1.0g-fips  2 Nov 2017\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] allocator: tcmalloc\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] modules: none\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] build environment:\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten]     distarch: x86_64\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten]     target_arch: x86_64\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] options: { net: { bindIp: \"127.0.0.1\" }, storage: { dbPath: \"/tmp/\" } }\r\n2017-12-22T18:52:02.566+0000 I STORAGE  [initandlisten] Detected data files in /tmp/ created by the 'wiredTiger' storage engine, so setting the active storage engine to 'wiredTiger'.\r\n2017-12-22T18:52:02.566+0000 I STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=15542M,session_max=20000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000),statistics_log=(wait=0),verbose=(recovery_progress),\r\n2017-12-22T18:52:02.637+0000 I STORAGE  [initandlisten] WiredTiger message [1513968722:637511][2937:0x7f87663729c0], txn-recover: Main recovery loop: starting at 6/4736\r\n2017-12-22T18:52:02.679+0000 I STORAGE  [initandlisten] WiredTiger message [1513968722:679111][2937:0x7f87663729c0], txn-recover: Recovering log 6 through 7\r\n2017-12-22T18:52:02.706+0000 I STORAGE  [initandlisten] WiredTiger message [1513968722:706386][2937:0x7f87663729c0], txn-recover: Recovering log 7 through 7\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] ** WARNING: /sys/kernel/mm/transparent_hugepage/enabled is 'always'.\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] **        We suggest setting it to 'never'\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] ** WARNING: soft rlimits too low. rlimits set to 4096 processes, 64000 files. Number of processes should be at least 32000 : 0.5 times number of files.\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.736+0000 I FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory '/tmp/diagnostic.data'\r\n2017-12-22T18:52:02.737+0000 I NETWORK  [initandlisten] waiting for connections on port 27017\r\n```\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "m-masataka": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1191", "title": "The GCC version should be updated in SConstruct", "body": "In ``docs/building.md`` , It require GCC version 5.4.0 or newer, but ``SConstruct`` require 5.3.0 or newer.\r\nIs it mistake? ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "judu": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1186", "title": "Fix build.", "body": "Without these using `std::string`, mongodb does not build here.\r\n\r\nI'm using gcc 6.4.0.\r\n\r\nPlease ask if you need more information about my build :)", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zydcom": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1171", "title": "SERVER-30636\uff1afix range deleter crash", "body": "This patch can be also used for v3.2 ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ryankall": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1169", "title": "Server 25311", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/1140", "title": "Verbosity bug", "body": "now the Explain command will not accept unknown command like verbos: 'queryPlanner'", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lorien": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1162", "title": "Fix error in command example in mongorestore.1 man", "body": "The trailing slash argument is missing in mongorestore command example in debian mans.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "SunguckLee": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1151", "title": "Support prefix match for full-text search", "body": "Add range search feature on full text search (original version has only exact match)\r\n\r\nFor CJK language, mongodb does not support stemmer for full text search.\r\nAlso not easy to implement stemmer for those language (Especially Korean).\r\nSo we usually use N-gram parser for full text search not supported mongodb yet.\r\n\r\nFortunately in Korean, we use space character between words and Korean(and also Japanese) use only suffix not prefix. So we can use mongodb full text search if mongodb support prefix match in fulltext. So I propose this simple feature.\r\n\r\n>> Match range of original fulltext search\r\n    * '\ud55c\uae00' <= match_range <= '\ud55c\uae00'\r\n    * '\ud14c\uc2a4\ud2b8' <= match_range <= '\ud14c\uc2a4\ud2b8'\r\n    * '\uc774\uc131' <= match_range <= '\uc774\uc131'\r\n    * '\ud55c' <= match_range <= '\ud55c'\r\n\r\n>> Match range of patched fulltext search\r\n    * '\ud55c\uae00' <= match_range < '\ud55c\uae01'\r\n    * '\ud14c\uc2a4\ud2b8' <= match_range < '\ud14c\uc2a4\ud2b9'\r\n    * '\uc774\uc131' <= match_range < '\uc774\uc132'\r\n    * '\ud55c' <= match_range < '\ud55d'\r\n\r\nI hope user can control this search mode (exact or prefix match) by query parameter or internal parameter.\r\n\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sam-pf": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1149", "title": "change log message for CRL loading", "body": "The log message from _setupCRL was misleading.  It is not the number of revoked certificates that X509_load_crl_file returns.  It is the number of CRLs (X509_CRL structures) that it successfully loads that it returns.\r\n\r\nhttps://github.com/openssl/openssl/blob/c0452248ea1a59a41023a4765ef7d9825e80a62b/crypto/x509/by_file.c\r\n\r\nhttp://www.umich.edu/~x509/ssleay/x509_crls.html\r\n  ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nleite": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1136", "title": "SERVER-1889 internal replication nic", "body": "- support for internal replication nic", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kolisergej": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1128", "title": "[SERVER-8958] Replace strtod/strtol/atoi/atol/etc calls with parseNumberFromString<T>", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ZharkovIlia": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1122", "title": "General Improvements v2", "body": "Elimination of some redundancy. Some function arguments are passed by reference. Few bugs are fixed.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "thesebas": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1121", "title": "Fix for negative Date timezone offsets ", "body": "When uncommented this `// print a non-UTC time` block and changed `var UTC = '';` got invalid timezone offsets like: `ISODate(\"2016-11-14T00:00:00+-100\")`. This makes Date be displayed as `ISODate(\"2016-11-14T00:00:00+0100\")`", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "danharel": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1093", "title": "SERVER-24519 Added framework for micro benchmark tools", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Soullivaneuh": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1061", "title": "[WIP] [3.x] Alpine linux compatibility", "body": "Same as #1060 but for 3.x version.\n- [x] alpine-release on processinfo\n- [x] Fix `'ELFCLASS__ELF_NATIVE_CLASS' was not declared in this scope`\n- [x] Fix `gnu_get_libc_version` usage that does not exist on Musl\n- [x] Fix undefined `mallinfo` function\n- [x] error_code.ipp:110:22: error: could not convert 'strerror_r(value, ((char*)(& buf)), sizeof (buf))' from 'int' to 'std::__cxx11::string {aka std::__cxx11::basic_string<char>}\n  - https://github.com/chriskohlhoff/asio/pull/95\n- [ ] `third_party/gperftools-2.2`: `error: '__off64_t' has not been declared`\n  - https://github.com/gperftools/gperftools/issues/693\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "salessandri": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1027", "title": "SERVER-8839 TimerStats and TimerHolder should work with microseconds.", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "e-siedler": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/275", "title": "SERVER-2541 Windows performance counters implemented", "body": "Fully functional windows performance counters imlpemented as a mongod.exe Module.\n\nSee README. See jira SERVER-2541 for some additional notes.\n- No Visual Studio project file have been updated. (I can't do that with VS Express).\n- I didn't make use of this new \"buildscripts/moduleconfig.py\" infrastructure mostly because of my incompetence: new to scons, new to python, didn't like both. 8-)\n- There is a new artifact that needs to be distributed along with mongod.exe: mongod.man. I didn't look into that (packaging).\n\nThanks\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bgianfo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/501190", "body": "Not sure what the deal is, but I made a last minute change before I committed, breaking this patch. \nhttp://github.com/bgianfo/mongo/commit/dc2c046c95c2b9ae8d2ec9f0d26987951437d502#diff-0\n\nPulling this commit also, you have the complete working package. :)\n\nI would add it to the pull request, but github seems to have made that impossible? \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/501190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "halfdan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/597405", "body": "When will this get integrated? Any feedback?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/597405/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "erh": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/662702", "body": "We're going to start including a minimal set of boost in the source tree to avoid conflicts and too much branching in the code.\nThat will be in the 2.0 cycle and should be boost 1.45, so not sure we want to do this right now, especially right before 1.8.0\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/662702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724077", "body": "Couple of notes: \n- we're not going to change the type from number to string\n- names should be consistent between dbstats/collstats\n- keeping commit log clean is important\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724094", "body": "dbstats already has a named value for this option, so you should use the same one.\n\nre: the commit stream, each commit should be a logical unit, but we also want to keep the number reasonable.  There are 9 listed above (though i guess really only 7)\nFor example, if you change a command, the change to the shell should be in the same commit.\n\nWe're in lockdown for 1.8, so will be a while before we would merge this in, and not sure this is exactly where we'll want to go with it.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742853", "body": "I'm seeing about a 10% improvement.\nThe problem is that Array doesn't currently require the elements to be in order.\nIn fact some implementations have it like this\n{ \"0\" : 1 , \"1\" : 1 , \"10\" : 10 , \"2\" : 2 , ... }\n So this patch will break some clients.\nThere is a more complex patch you could do which verifies the order while iterating.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742895", "body": "No, the spec doesn't say it has to be in order.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742895/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742903", "body": "I did this:\nhttps://github.com/mongodb/mongo/commit/cd834438e55086442b264dfc6cc9425d8a34f0bd\n\nWhich is about 80% of the improvement\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1086311", "body": "Can you break these into different parts?\nSome look ok, others not so sure about (FuncMap for example)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1086311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103470", "body": "Right, but there seem to be others that are unrelated.\nWould just be better if we can make each logical change separate.\n\nOn Wed, May 4, 2011 at 10:55 PM, testn\nreply@reply.github.com\nwrote:\n\n> funcMap has to be there to help perform function lookup\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/pull/35#issuecomment-1103444\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103470/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1272158", "body": "There are a few issues that I see at first glance.\n\n1) why did you remove the sparse check\n2) your'e not checking the type of \"filter\" correctly\n3) _matcher leaks - should be a scoped_ptr\n4) i don't think the queryoptimizer change is correct\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1272158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1430432", "body": "Fixed using the helper.\nThanks for pointing out\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1430432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/100728", "body": "vs2008 vs vs2010 issue\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/100728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/116980", "body": "don't comment out the lines in the method, just comment out doTest() etc...\nmakes it easer to test, etc...\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/116980/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/333394", "body": "The one you mentioned should be that way i believe.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/333394/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676120", "body": "Is there a reason you put slaveOk in the middle rather than the end so we can preserve backwards compatibility?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "adrien-mogenet": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724088", "body": "Ok Erh !\n- I had a doubt about keeping the types ; I will keep numbers when displaying raw values as currently\n- What do you mean about \"consistent names between dbstats/collstats\" ? I didn't change anything... ( I think )\n- Which rule did I not follow about commit log messages ? According to the doc (http://www.mongodb.org/display/DOCS/Git+Commit+Rules) : I have to put [SERVER-XXX] on every commit ?\n\nThanks,\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724088/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/250853", "body": "There is no way to make it cleaner using boost::filesystem ?\nhttp://www.boost.org/doc/libs/1_45_0/libs/filesystem/v2/doc/index.htm\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/250853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/335318", "body": "Why not checking that scale is a multiple of 1024 ?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/335318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "testn": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742681", "body": "With simple M/R such as collection count/max/min, the execution time can be cut in half\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742681/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742879", "body": "But this method is the conversion from BSONObj to jsval. Shouldn't BSONObj with Array type be in order according to the specification?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742879/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742912", "body": "That would work. \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103444", "body": "funcMap has to be there to help perform function lookup\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103444/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103889", "body": "okay. will rebranch it again and put the link\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103889/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "zippy1981": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/787400", "body": "WOO-HOO!!!!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/787400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/89046", "body": "Good to see I'm not the only one improving error messages! \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/89046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/90091", "body": "Is it necessarily a good idea to have class diagrams in the visual studio projects? These projects will always be an afterthought (and rightly so) to the scons project.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/90091/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/96083", "body": "Confirmed that actually worked.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/96083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/98475", "body": "stoll() doesn't exist in Visual Studio 2008. I'm installing the windows 7 SDK to see if that will rectify it, but perhaps even being dirty and calling atol() would be better than causing build problems.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/98475/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/98552", "body": "The older, more conservative function is _strtoi64()\nFix in http://github.com/zippy1981/mongo/commit/f7b7c07e2a72011b8dbd72d10dcbaa22d8e5fb54\nStackoverflow discussion is in http://stackoverflow.com/questions/3106026/is-there-a-stoll-stroll-string-to-long-long-alternative-in-visual-studio-20/3106060#3106060\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/98552/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/99757", "body": "Test code I used for this.:\n\n<pre>\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string>\n\nnamespace mongo {\n\n    inline void uasserted(int msgid , char* msg) { printf(\"Msg: %s\", msg); exit(4); }\n    /* \"user assert\".  if asserts, user did something wrong, not our code */\n    #define MONGO_uassert(msgid, msg, expr) (void)( (!!(expr)) || (mongo::uasserted(msgid, msg), 0) )\n    #define uassert MONGO_uassert\n\n    inline long long parseLL( const char *n );\n\n\n    // expect that n contains a base ten number and nothing else after it\n    // NOTE win version hasn't been tested directly\n    inline long long parseLL( const char *n ) {\n        long long ret;\n        uassert( 13307, \"cannot convert empty string to long long\", *n != 0 );\n#if !defined(_WIN32)\n        char *endPtr = 0;\n        errno = 0;\n        ret = strtoll( n, &endPtr, 10 );\n        uassert( 13305, \"could not convert string to long long\", *endPtr == 0 && errno == 0 );\n#else\n#if _MSC_VER>=1600\n        size_t endLen = 0;\n        try {\n            ret = std::stoll( n, &endLen, 10 );\n        } catch ( ... ) {\n            endLen = 0;\n        }\n        uassert( 13306, \"could not convert string to long long\", endLen != 0 && n[ endLen ] == 0 );\n#else // stoll() wasn't introduced into VS 2010.\n        char* endPtr = (char *)&n[strlen(n) - 1];\n        try {\n            ret = _strtoi64( n, &endPtr, 10 );\n        } catch ( ... ) {\n            endPtr = 0;\n        }\n        uassert( 13310, \"could not convert string to long long\", *endPtr == 0 );\n#endif // _MSC_VER >= 16\n#endif // !defined(_WIN32)\n        return ret;\n    }\n\n}\n\nvoid main () {\n    //printf(\"_MSC_VER: %d\\n\", _MSC_VER);\n\n    char szNumber[] = \"999999999\";\n    printf(\"number '%s': %d\\n\\n\", szNumber, mongo::parseLL(szNumber));\n    \n    char szNumberWhitespace[] = \"   999999999   999\";\n    printf(\"number '%s': %d\\n\\n\", szNumberWhitespace, mongo::parseLL(szNumberWhitespace));\n    \n    char szNumberBad[] = \"99r9dd999999\";\n    printf(\"number '%s': %d\\n\\n\", szNumberBad, mongo::parseLL(szNumberBad));\n}\n</pre>\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/99757/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/99771", "body": "Dwight,\n\nShouldn't we also check the error cases?\n\nI'll confess I'm not running the unit tests on my machine. I'll start doing that.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/99771/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/100400", "body": "The UTF-8 BOM, signifying nothing, and annoying the hell out of developers and users.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/100400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/100595", "body": "Was the near/far thing a 64 bit thing? I though the near/far dated back to win16 programming?\n\nRegardless, it compiles.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/100595/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/124765", "body": "Wouldn't \"-o -\" be more inline with unix convention than \"-o stdout\"? Or is the problem boost parsing? \n\nThen again, part of me thinks default mongodump behavior should be to stdout, and there shoulld be a new switch for current default behavior.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/124765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/132633", "body": "Double build break, double my bad. I'll have to start building on ubuntu to check these things.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/132633/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "s4y": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/875296", "body": "I just changed the contents of this pull request slightly. Somehow managed to fudge up a one-line fix!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/875296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1505577", "body": "Looks like this was fixed in e27fa36b4c47b277b6e140f641a1187b712d99ca. Cool!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1505577/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "radarek": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1021120", "body": "Guys, what is the progress of that? MongoDB needs count + distinct :).\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1021120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "defunctzombie": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1106255", "body": "Is there a reason this isn't being accepted? It is low risk while adding a desired build functionality.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1106255/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mattbillenstein": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1216540", "body": "Also added a commit to allow mongorestore to use \"-\" as stdin when given both --db and --collection\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1216540/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "JensRantil": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1248211", "body": "The above commented small fixes were now added to this pull request. Feel free to include whenever you want to.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1248211/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lqs": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1279530", "body": "@erh\n\ni think the sparse assertion is useless because _nFields always > 0. and the sparse index can be created even if there's two or more fields.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1279530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mrohnstock": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1386332", "body": "Since 2010 this don't get included to mongodb c++ driver. Is there any other way to get the double field from BSONObj?\n\nUsed: bsonobj.getField(\"whatever\").Double(), but will end with assereration error.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1386332/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1388754", "body": "forget it... bsonobj.getField(\"whatever\").numberDouble() did the trick, got another mistake in code - just ignore my input.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1388754/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lqez": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1414175", "body": "Wow, I _really_ need these cool patches.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1414175/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "plaes": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1586684", "body": "How about this?\n\n```\nelif os.sys.platform in ('linux2', 'linux3'):\n```\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1586684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mongodb": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/14485", "body": "this was just a test.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/14485/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "metagoto": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/53383", "body": "lol ;)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/53383/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "phase2": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/55958", "body": "Looks like a typo here:\n\nhttp://github.com/mongodb/mongo/commit/2b7eb102159a36129222afa1883ea3b15145e08b#L0R40\n\nSee &7 instead of &&\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/55958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "thbar": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/58482", "body": "Bravo :)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/58482/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "dwight": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/90094", "body": "that's an accident.  will remove.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/90094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/99795", "body": "sure.\n\nUnitTest is something that runs at every server startup.  so they must very light and fast.\n\n\"real\" tests should go in dbtests / test binary (or jstests if applicable)\n\nrunning tests v good idea.  see \"smoke\" page on wiki\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/99795/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/181437", "body": "right.  will take it out.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/181437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/165991", "body": "use unique_ptr here\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/165991/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "thomasst": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/96213", "body": "Shouldn't the constant MaxBSONObjectSize be used instead? In case one wants to customize the size.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/96213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "TonyGen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/117314", "body": "Eliot, please roll this commit back. I found a bug with it. I didn't think you would include it until I made a pull request to you. Thanks, Tony\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/117314/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "dmytton": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/181433", "body": "Won't this catch use of small oplog size when used with an arbiter? In your docs you recommend using a small oplog  http://www.mongodb.org/display/DOCS/Adding+an+Arbiter\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/181433/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "hackworks": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/248914", "body": "Could InterLockedExchange be used on windows and __sync_xor_and_fetch when GCC is used?\nFor windows:\nhttp://msdn.microsoft.com/en-us/library/ms683590(v=vs.85).aspx\nFor GCC:\nhttp://gcc.gnu.org/onlinedocs/gcc/Atomic-Builtins.html\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/248914/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "gregstuder": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/301135", "body": "detects int overflow in passed 2d bounds/parameters\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/301135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/328497", "body": "Major change here is basically to pull up the expand algorithm into the superclass.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/328497/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "shriharipandit": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/333336", "body": "You also need to make a similar change within void ReplicaSetMonitor::_checkHosts():\n\nLine 297: log(1) << \"updated set (\" << _name << \") to: \" << getServerAddress()\n\nPerhaps more places as well.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/333336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "tadmarshall": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/166291", "body": "This was part of my fixing the memory leak in the shell.  The problem was\nthat memory was allocated by strdup() and never freed.  Since strdup() calls\nmalloc(), I added matching free() calls.  This bit of code is on the #else\nside of an #ifdef USE_LINENOISE and so isn't in the current code, but if\nUSE_LINENOISE was turned off then the call to \"new char[1024]\" would end up\ngetting passed to free() and it seemed better to match malloc() with free()\ninstead of new with free().  Without changing the entire way this memory is\nallocated and freed (a bigger change) I can't just use unique_ptr in one\nspot.  strdup() calls malloc() and I can't switch to unique_ptr without\nreplacing the strdup() calls.  I was trying to make minimal changes to fix\nthe memory leak.\n\n-----Original Message-----\nFrom: Dwight Merriman\n[mailto:reply+p-165991-d7ea43fd753410cd3421867a9c1b3e0d018a6daf@reply.github\n.com] \nSent: Wednesday, October 12, 2011 1:50 AM\nTo: Tad Marshall\nSubject: Re: [mongo] SERVER-4043 -- fix tab completion in mid-code (#110)\n\n> @@ -313,7 +315,7 @@ char \\* shellReadline( const char \\* prompt , int\n> handlesigint = 0 ) {\n>      return ret;\n>  #else\n>      printf(\"%s\", prompt); cout.flush();\n> -    char \\* buf = new char[1024];\n\nuse unique_ptr here\n\n## \n\nReply to this email directly or view it on GitHub:\nhttps://github.com/mongodb/mongo/pull/110/files#r165991\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/166291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "hoffrocket": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/196130", "body": "should be \"return LOG_INFO;\"\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/196130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/196132", "body": "pragram ->  program\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/196132/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "amschwerin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660497", "body": "For exception safety, use a boost::scoped_ptr to hold the result of readDocument().\n\nboost::scoped_ptr<BSONObj> o(readDocument(file, buf, BUF_SIZE));\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660497/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660503", "body": "This function should not be inlined.  Implement it in the cpp file.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660503/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660530", "body": "Ditto on scoped_ptr, here.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676654", "body": "(1) Inlining it won't help performance.\n(2) Inlining it will increase the binary size.\n(3) Inlining it means that any time it changes, all modules that include tool.h must be recompiled, which slows down incremental compilation.  This is important to developers.\n\nSo, it does two bad things and no good things.  Don't inline it.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676654/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/694609", "body": "In the event that the file is truncated, the old code would alert for failure in the event that the input file was truncated, and did not contain an even multiple of 4 bytes.  This change will silently stop processing, which is a behavior change.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/694609/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/694614", "body": "\"isFifoFile\", instead of \"fifo\".\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/694614/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/774347", "body": "Thanks for pinging.  Will look again.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/774347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/794711", "body": "Haven't forgotten.  Really swamped over here.\n\nOn Fri, May 4, 2012 at 8:36 AM, Azat Khuzhin\nreply@reply.github.com\nwrote:\n\n> > \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0size_t amt = fread(buf, 1, 4, file);\n> > - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0// end of fifo/file\n> > - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0if ( feof(file) ) {\n> > - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0break;\n> \n> @andy10gen ?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/pull/205/files#r773788\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/794711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935900", "body": "I think this needs to default to None, or on systems where \"g++\" is not the default compiler, builds will fail when --cxx is not specified.  I.e., Windows/MSVC systems.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935900/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935902", "body": "Again, default to None.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935912", "body": "Though we haven't been very consistent in the past, SConstruct files are python code, and should follow PEP-8 style.\n\nconf.env.Replace(CXX=GetOption(\"cxx\"))\n\nNote where whitespace has been removed.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935918", "body": "I think I'd rather omit these print statements.  If we want to report which compilers are being used, we should do that separately from option setting.  The compiler command line and link flags show up in the output, anyways.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935918/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "azat": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/664362", "body": "Why it should?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/664362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/699717", "body": "@andy10gen, it will fail at https://github.com/mongodb/mongo/pull/205/files#L1R549 ( `m.done() == fileLength` ). Is it enough?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/699717/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/773788", "body": "@andy10gen ?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/773788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "onyxmaster": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676141", "body": "No particular reason, I justified its placement on the basis that GridFile constructor is private so existing code shouldn't be broken by this change (the default value is not provided for the same reason), and that slaveOk felt to me as something immutable and should be close to another immutable (grid) both in field definitions (line 200 below) and the argument list.\nIf you feel that GridFile constructor might become protected or public some day, I agree with you that slaveOk should be placed at the end and, probably have the default false value added.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676142", "body": "If you prefer, I can make changes on my end and update the pull request, just tell me.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676142/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "milkie": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757112", "body": "I think we'll need to actually create the file on first use, rather than requesting the user do it.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757112/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757116", "body": "Also we should put in a link to the new documentation site and a mention of the mongo-users google group.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757116/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757123", "body": "_isatty() instead?  we already use it in util/log.cpp\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757123/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "lcapaldo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757185", "body": "Just put #define isatty _isatty in platform/windows?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757190", "body": "Yeah I can do both these things.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "cwestin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764933", "body": "I think $strlen on a nonexistent field should return zero.  This fits the operation of other operators, which are as forgiving as possible unless the result is definitively wrong.  Here, I think it makes sense to treat this as an empty string.  However, I think it should be an error to call $strlen on a real field that does not contain a string value.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764933/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764939", "body": "Why did you remove these assertions?  Since they seem to work for everyone else, it's safer to first assume there's something wrong on your setup, and that we should figure out what that is.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764939/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764972", "body": "Before this, I would check for pString.get() being NULL, or pString.getType() == jstNULL (from bson/bsontypes.h).  If either of those is true, return Value::getZero().  That will handle returning zero for a non-existent or null valued field.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}}, "3": {"henrikingo": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/086cec19cbd0f0a4a122d4cfa6f099dbaa2ef21d", "message": "SERVER-32260 Call workload_setup.py from system_perf.yml and longevity.yml"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "benety": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/7713d5531c663603d17fff1267d013e0b6867e5b", "message": "SERVER-32284 rename ReplicationCoordinator::reserveSnapshotName() to getMinimumVisibleSnapshot()"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/25b7af8b7367de11f0d4d864bd6a51983227c494", "message": "SERVER-32284 remove unused last snapshot support from ReplClientInfo"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/13a33d961f6936dc8290b8bb80f5c5b9e599f0a9", "message": "SERVER-32284 ReplicationCoordinatorImpl::_doneWaitingForReplication_inlock() always assumes null minSnapshot"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/d071ff8278abcd05d63c0367c49284645e844bcc", "message": "SERVER-32284 ReplicationCoordinatorImpl::_awaitReplication_inlock() always assumes null minSnapshot"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/0d97768115d093ed0041fff8c0ef39ba30c07e3f", "message": "SERVER-32284 remove ReplicationCoordinator::awaitReplicationOfLastOpForClient()"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/7ed79c16f619cab2195edf9cad37a3c4765c8a23", "message": "SERVER-32284 collMod waits for UUID schema changes using ReplicationCoordinator::awaitReplication() instead of awaitReplicationOfLastOpForClient()"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/f2af0ad889f1cfca7a311d53912c5b808500ea77", "message": "SERVER-29200 remove references to OplogEntry::raw from MultiApplier"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/25f0c6ae6c4fa80244cadb8a6bfcbf9bcc8b7742", "message": "SERVER-29200 migrate SyncTail::getMissingDoc() and fetchAndInsertMissingDoc() to accept OplogEntry instead of BSONObj"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/939a30aba1703c939b0352bded4b56257c8a0bec", "message": "SERVER-29200 add OplogEntry::getOperationToApply()\n\nremove references to OplogEntry::raw from rollback, prefetchPagesForReplicatedOp() and SyncTail"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sulabhM": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/8fd172e330b5af597bfba60d0bb7add8dc1a236c", "message": "SERVER-32506 OSX Mobile SE variant: Tag tests to skip on mobile SE"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "RedBeard0531": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/daf6c4714b45aeb8ba1a09380135b3267c4cc280", "message": "SERVER-32617 Fix code that reconstructs status with just code and string"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/4dc36c7ccb6b5b8f7d865993b5d648fe6dc4b7c7", "message": "SERVER-32684 Make mongos write command objects hold Status directly"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/68b961b28f5dd40501f0ef9b6c6b515ff1ec7cfd", "message": "SERVER-32673 Make WorkingSetCommon::buildMemberStatusObject handle ErrorExtraInfo"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/b165c1e9275016dc15d071d147cec0e5b1bc1f31", "message": "SERVER-32587 Convert StaleConfigException to use ErrorExtraInfo"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/84c3f83421b262028081296e4c387d29691ea376", "message": "SERVER-32586 Convert ResolvedView to use ErrorExtraInfo"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hanumantmk": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/8ee6b3d31756d7939480f1283ec53af3bd6eb489", "message": "SERVER-32683 JS JIT off by default\n\nTurn off the spidermonkey jit by default."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "will62794": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/6f885ea4579c04bd73c4d6fecc497520105f2609", "message": "SERVER-30818 Cleanup comments in background.h"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/aa35454e98a3026a7c44cc736d2326a3fa38e7b3", "message": "SERVER-30818 Add function to await background operations on multiple databases"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kevinAlbs": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/b9decc492c0ff942d5bcd6e8c799de70fa0839af", "message": "SERVER-21630 run CheckReplDBHash on csrs and shard replset\n\nAnd run ValidateCollections hook on priority=0 secondaries."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "elouie99": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/f7d45863daa61920d3b6ee8abbf105833767a223", "message": "SERVER-31628 Always use a python virtualenv in etc/evergreen.yml"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lukech": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/23914068c331a42d1f98de0d58caecf0e391549a", "message": "Import wiredtiger: 357efdd4ce279efc71ff618c59fe1b903ef80bb2 from branch mongodb-3.8\n\nref: 9e50448231..357efdd4ce\nfor: 3.7.2\n\nWT-3565       Test and understand mixed timestamp/no-timestamp usage to same data\nWT-3597       Add a diagnostic check for updates to the same key out of timestamp order\nWT-3632       Increase how granularly cache usage settings can be configured\nWT-3695       format failed to report a stuck cache\nWT-3740       race in page dirty-byte decrement.\nWT-3767       Avoid lookaside instantiation for faster reads\nWT-3775       Improve commit timestamp is older than oldest timestamp error message\nWT-3792       LSM version 1 metadata incompatibility\nWT-3796       Report a better error message if transaction commit fails\nWT-3799       Test/format with timestamps enabled pin cache full\nWT-3809       Fix a bug in lookaside related to birthmarks\nWT-3811       Python scripts for visualizing operation tracking files\nWT-3818       __rec_txn_read() code order cleanup\nWT-3825       Fix calculation of CPU ticks per unit time\nWT-3826       random-abort test failure\nWT-3827       test_compact02 failure\nWT-3828       Link error on OS/X for __wt_process data reference\nWT-3831       uninitialized buffer value in statlog server path comparison\nWT-3832       Fixup shell script warning messages\nWT-3833       test/format cache_minimum value error\nWT-3841       Fix error message pattern in timestamp09\nWT-3842       full-build Friday & lint\nWT-3844       Checkpoints can hang on limbo pages\nWT-3845       Compiler warning in examples using GCC 5.4.0"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kmahar": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/23870b6aecac924a15af49bb7abe2f8e1cda2aa8", "message": "SERVER-30744 Move dropCollection logic from ShardingCatalogClient into ShardingCatalogManager"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kaloianm": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/7f4e454907f14a5a82195d15e6ee96cbcd6d4d5b", "message": "SERVER-32447 Add a mock CatalogCache::getCollectionRoutingInfoAt method\n\nThe added method always returns the routing information at the latest\ntimestamp."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "visualzhou": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/7d2f43adabb344f93ef8bec523efa3187bcf4ce6", "message": "SERVER-32317 Make sharding chunk manipulation operations use doTxn instead of applyOps"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vessy-mongodb": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/35c44dbd37c0167cc07420c8ea286ad6edfac7ff", "message": "SERVER-30347 Fail startup when running wiredTiger with --nojournal as part of a replica set"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "BillyDonahue": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/a8561f9a3775083eaf17e648850791a2cbd37893", "message": "SERVER-32070 remove stdx::bind (final patch)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mtrussotto": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/ef81d53b986aa701c722820a204eba73a635f748", "message": "SERVER-32726 Fix out-of-order error code in update_driver.cpp"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nzolnierzmdb": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/4eabf1ea6225f444b3b0b3b2fee785aaa306212f", "message": "Revert \"SERVER-32308: Add the ability for a $lookup stage to execute on mongos against a sharded foreign collection\"\n\nThis reverts commit 7298d273c0497f2720ec1471ad0f4910bff07af4."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cramaechi": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1203", "title": "[SERVER-32259] Update wiredtiger_util.cpp", "body": "WiredTigerUtil::fetchTypeAndSourceURI() is using\r\ninvariant(colgroupResult.isOK()) instead of\r\ninvariantOK(colgroupResult.getStatus()). This means that if the\r\ninvariant ever fires, we don't know what the bad Status actually was.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "JunHe77": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1202", "title": "SERVER-32576: Merge ARM64 support to use 64-bit optimized code path", "body": "Change-Id: Icd2e0f9378952bbd811b54fe60a7f3895c960e92\r\nSigned-off-by: Jun He <jun.he@arm.com>", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kakts": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1198", "title": "Fix typos in config_server_test_fixture.cpp and dpml_error_codes.c", "body": "## Summary\r\nI found some typos in files as below.\r\n\r\n```\r\nsrc/mongo/s/config_server_test_fixture.cpp\r\nsrc/third_party/IntelRDFPMathLib20U1/LIBRARY/float128/dpml_error_codes.c\r\n```\r\n\r\nreponse  \u2192 response\r\n\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zhihuiFan": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1197", "title": "SERVER-4785 maintain slowms at database level", "body": "See issue at https://jira.mongodb.org/browse/SERVER-4785 and https://jira.mongodb.org/browse/SERVER-18946 \r\n\r\n\r\nHere is the test result.\r\n\r\n\r\nzhifan@zhifan-dev16:~/github/mongo$ ./mongo\r\n> db.getProfilingStatus()\r\n{ \"was\" : 0, \"slowms\" : 100, \"sampleRate\" : 1 }\r\n> db.setProfilingLevel(0, 1)\r\n{ \"was\" : 0, \"slowms\" : 100, \"sampleRate\" : 1, \"ok\" : 1 }\r\n> db.getProfilingStatus()\r\n{ \"was\" : 0, \"slowms\" : 1, \"sampleRate\" : 1 }\r\n> for(var i =0; i<10000; i++) {db.test.save({'i': i})}\r\nWriteResult({ \"nInserted\" : 1 })\r\n> use test2\r\nswitched to db test2\r\n> db.getProfilingStatus()\r\n{ \"was\" : 0, \"slowms\" : 100, \"sampleRate\" : 1 } . -- test 2: still 100\r\n> for(var i =0; i<10000; i++) {db.test.save({'i': i})}\r\nWriteResult({ \"nInserted\" : 1 })\r\n\r\n\r\nas a result:  we capture the slow queries from test database but not for test2 database.\r\n\r\n`\r\n2017-12-26T13:38:32.678+0800 I COMMAND  [conn1] command test.test appName: \"MongoDB Shell\" command: insert { insert: \"test\", ordered: true, $db: \"test\" } ninserted:1 keysInserted:1 numYields:0 reslen:29 locks:{ Global: { acquireCount: { r: 3, w: 1 } }, Database: { acquireCount: { w: 1, R: 1 } }, Collection: { acquireCount: { w: 1 } } } protocol:op_msg 3ms\r\n\r\n`\r\n\r\n  ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bmanojlovic": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1195", "title": "initial scons 3.0.1 and python3 build support", "body": "This PR allows building mongo with use of latest (3.0.1) scons which now uses python3 by default.\r\nThere are still a lot of rough edges but on the end it allows building binary mongod\r\n\r\npython version:\r\n```\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> python3 --version\r\nPython 3.6.3\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> \r\n```\r\nscons version:\r\n```\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> scons -v\r\nSCons by Steven Knight et al.:\r\n        script: v3.0.1.74b2c53bc42290e911b334a6b44f187da698a668, 2017/11/14 13:16:53, by bdbaddog on hpmicrodog\r\n        engine: v3.0.1.74b2c53bc42290e911b334a6b44f187da698a668, 2017/11/14 13:16:53, by bdbaddog on hpmicrodog\r\n        engine path: ['/usr/lib/scons-3.0.1/SCons']\r\nCopyright (c) 2001 - 2017 The SCons Foundation\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched>\r\n```\r\nand finally running scons on my machine\r\n```\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> scons -j 8 MONGO_VERSION=3.6.0  --disable-warnings-as-errors  --ssl\r\nscons: Reading SConscript files ...\r\nMkdir(\"build/scons\")\r\nscons version: 3.0.1\r\npython version: 3 6 3 final 0\r\nChecking whether the C compiler works... yes\r\nChecking whether the C++ compiler works... yes\r\n...\r\n...\r\n...\r\nranlib build/blah/mongo/db/query/libquery_common.a\r\nGenerating library build/blah/mongo/db/libmongod_options.a\r\nranlib build/blah/mongo/db/libmongod_options.a\r\nLinking build/blah/mongo/mongod\r\nInstall file: \"build/blah/mongo/mongod\" as \"mongod\"\r\nscons: done building targets.\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> \r\n```\r\nand of course running built binary\r\n```\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> ./mongod --dbpath /tmp/ --bind_ip 127.0.0.1\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] MongoDB starting : pid=2937 port=27017 dbpath=/tmp/ 64-bit host=pc\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] db version v3.6.0\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] git version: 9038d0a67ee578aa68ef8482b1fc98750d1007a6\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] OpenSSL version: OpenSSL 1.1.0g-fips  2 Nov 2017\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] allocator: tcmalloc\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] modules: none\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] build environment:\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten]     distarch: x86_64\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten]     target_arch: x86_64\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] options: { net: { bindIp: \"127.0.0.1\" }, storage: { dbPath: \"/tmp/\" } }\r\n2017-12-22T18:52:02.566+0000 I STORAGE  [initandlisten] Detected data files in /tmp/ created by the 'wiredTiger' storage engine, so setting the active storage engine to 'wiredTiger'.\r\n2017-12-22T18:52:02.566+0000 I STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=15542M,session_max=20000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000),statistics_log=(wait=0),verbose=(recovery_progress),\r\n2017-12-22T18:52:02.637+0000 I STORAGE  [initandlisten] WiredTiger message [1513968722:637511][2937:0x7f87663729c0], txn-recover: Main recovery loop: starting at 6/4736\r\n2017-12-22T18:52:02.679+0000 I STORAGE  [initandlisten] WiredTiger message [1513968722:679111][2937:0x7f87663729c0], txn-recover: Recovering log 6 through 7\r\n2017-12-22T18:52:02.706+0000 I STORAGE  [initandlisten] WiredTiger message [1513968722:706386][2937:0x7f87663729c0], txn-recover: Recovering log 7 through 7\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] ** WARNING: /sys/kernel/mm/transparent_hugepage/enabled is 'always'.\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] **        We suggest setting it to 'never'\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] ** WARNING: soft rlimits too low. rlimits set to 4096 processes, 64000 files. Number of processes should be at least 32000 : 0.5 times number of files.\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.736+0000 I FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory '/tmp/diagnostic.data'\r\n2017-12-22T18:52:02.737+0000 I NETWORK  [initandlisten] waiting for connections on port 27017\r\n```\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "m-masataka": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1191", "title": "The GCC version should be updated in SConstruct", "body": "In ``docs/building.md`` , It require GCC version 5.4.0 or newer, but ``SConstruct`` require 5.3.0 or newer.\r\nIs it mistake? ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "judu": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1186", "title": "Fix build.", "body": "Without these using `std::string`, mongodb does not build here.\r\n\r\nI'm using gcc 6.4.0.\r\n\r\nPlease ask if you need more information about my build :)", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zydcom": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1171", "title": "SERVER-30636\uff1afix range deleter crash", "body": "This patch can be also used for v3.2 ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ryankall": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1169", "title": "Server 25311", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/1140", "title": "Verbosity bug", "body": "now the Explain command will not accept unknown command like verbos: 'queryPlanner'", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lorien": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1162", "title": "Fix error in command example in mongorestore.1 man", "body": "The trailing slash argument is missing in mongorestore command example in debian mans.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "SunguckLee": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1151", "title": "Support prefix match for full-text search", "body": "Add range search feature on full text search (original version has only exact match)\r\n\r\nFor CJK language, mongodb does not support stemmer for full text search.\r\nAlso not easy to implement stemmer for those language (Especially Korean).\r\nSo we usually use N-gram parser for full text search not supported mongodb yet.\r\n\r\nFortunately in Korean, we use space character between words and Korean(and also Japanese) use only suffix not prefix. So we can use mongodb full text search if mongodb support prefix match in fulltext. So I propose this simple feature.\r\n\r\n>> Match range of original fulltext search\r\n    * '\ud55c\uae00' <= match_range <= '\ud55c\uae00'\r\n    * '\ud14c\uc2a4\ud2b8' <= match_range <= '\ud14c\uc2a4\ud2b8'\r\n    * '\uc774\uc131' <= match_range <= '\uc774\uc131'\r\n    * '\ud55c' <= match_range <= '\ud55c'\r\n\r\n>> Match range of patched fulltext search\r\n    * '\ud55c\uae00' <= match_range < '\ud55c\uae01'\r\n    * '\ud14c\uc2a4\ud2b8' <= match_range < '\ud14c\uc2a4\ud2b9'\r\n    * '\uc774\uc131' <= match_range < '\uc774\uc132'\r\n    * '\ud55c' <= match_range < '\ud55d'\r\n\r\nI hope user can control this search mode (exact or prefix match) by query parameter or internal parameter.\r\n\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sam-pf": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1149", "title": "change log message for CRL loading", "body": "The log message from _setupCRL was misleading.  It is not the number of revoked certificates that X509_load_crl_file returns.  It is the number of CRLs (X509_CRL structures) that it successfully loads that it returns.\r\n\r\nhttps://github.com/openssl/openssl/blob/c0452248ea1a59a41023a4765ef7d9825e80a62b/crypto/x509/by_file.c\r\n\r\nhttp://www.umich.edu/~x509/ssleay/x509_crls.html\r\n  ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nleite": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1136", "title": "SERVER-1889 internal replication nic", "body": "- support for internal replication nic", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kolisergej": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1128", "title": "[SERVER-8958] Replace strtod/strtol/atoi/atol/etc calls with parseNumberFromString<T>", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ZharkovIlia": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1122", "title": "General Improvements v2", "body": "Elimination of some redundancy. Some function arguments are passed by reference. Few bugs are fixed.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "thesebas": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1121", "title": "Fix for negative Date timezone offsets ", "body": "When uncommented this `// print a non-UTC time` block and changed `var UTC = '';` got invalid timezone offsets like: `ISODate(\"2016-11-14T00:00:00+-100\")`. This makes Date be displayed as `ISODate(\"2016-11-14T00:00:00+0100\")`", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "danharel": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1093", "title": "SERVER-24519 Added framework for micro benchmark tools", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Soullivaneuh": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1061", "title": "[WIP] [3.x] Alpine linux compatibility", "body": "Same as #1060 but for 3.x version.\n- [x] alpine-release on processinfo\n- [x] Fix `'ELFCLASS__ELF_NATIVE_CLASS' was not declared in this scope`\n- [x] Fix `gnu_get_libc_version` usage that does not exist on Musl\n- [x] Fix undefined `mallinfo` function\n- [x] error_code.ipp:110:22: error: could not convert 'strerror_r(value, ((char*)(& buf)), sizeof (buf))' from 'int' to 'std::__cxx11::string {aka std::__cxx11::basic_string<char>}\n  - https://github.com/chriskohlhoff/asio/pull/95\n- [ ] `third_party/gperftools-2.2`: `error: '__off64_t' has not been declared`\n  - https://github.com/gperftools/gperftools/issues/693\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "salessandri": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1027", "title": "SERVER-8839 TimerStats and TimerHolder should work with microseconds.", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "e-siedler": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/275", "title": "SERVER-2541 Windows performance counters implemented", "body": "Fully functional windows performance counters imlpemented as a mongod.exe Module.\n\nSee README. See jira SERVER-2541 for some additional notes.\n- No Visual Studio project file have been updated. (I can't do that with VS Express).\n- I didn't make use of this new \"buildscripts/moduleconfig.py\" infrastructure mostly because of my incompetence: new to scons, new to python, didn't like both. 8-)\n- There is a new artifact that needs to be distributed along with mongod.exe: mongod.man. I didn't look into that (packaging).\n\nThanks\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bgianfo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/501190", "body": "Not sure what the deal is, but I made a last minute change before I committed, breaking this patch. \nhttp://github.com/bgianfo/mongo/commit/dc2c046c95c2b9ae8d2ec9f0d26987951437d502#diff-0\n\nPulling this commit also, you have the complete working package. :)\n\nI would add it to the pull request, but github seems to have made that impossible? \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/501190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "halfdan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/597405", "body": "When will this get integrated? Any feedback?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/597405/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "erh": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/662702", "body": "We're going to start including a minimal set of boost in the source tree to avoid conflicts and too much branching in the code.\nThat will be in the 2.0 cycle and should be boost 1.45, so not sure we want to do this right now, especially right before 1.8.0\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/662702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724077", "body": "Couple of notes: \n- we're not going to change the type from number to string\n- names should be consistent between dbstats/collstats\n- keeping commit log clean is important\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724094", "body": "dbstats already has a named value for this option, so you should use the same one.\n\nre: the commit stream, each commit should be a logical unit, but we also want to keep the number reasonable.  There are 9 listed above (though i guess really only 7)\nFor example, if you change a command, the change to the shell should be in the same commit.\n\nWe're in lockdown for 1.8, so will be a while before we would merge this in, and not sure this is exactly where we'll want to go with it.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742853", "body": "I'm seeing about a 10% improvement.\nThe problem is that Array doesn't currently require the elements to be in order.\nIn fact some implementations have it like this\n{ \"0\" : 1 , \"1\" : 1 , \"10\" : 10 , \"2\" : 2 , ... }\n So this patch will break some clients.\nThere is a more complex patch you could do which verifies the order while iterating.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742895", "body": "No, the spec doesn't say it has to be in order.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742895/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742903", "body": "I did this:\nhttps://github.com/mongodb/mongo/commit/cd834438e55086442b264dfc6cc9425d8a34f0bd\n\nWhich is about 80% of the improvement\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1086311", "body": "Can you break these into different parts?\nSome look ok, others not so sure about (FuncMap for example)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1086311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103470", "body": "Right, but there seem to be others that are unrelated.\nWould just be better if we can make each logical change separate.\n\nOn Wed, May 4, 2011 at 10:55 PM, testn\nreply@reply.github.com\nwrote:\n\n> funcMap has to be there to help perform function lookup\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/pull/35#issuecomment-1103444\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103470/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1272158", "body": "There are a few issues that I see at first glance.\n\n1) why did you remove the sparse check\n2) your'e not checking the type of \"filter\" correctly\n3) _matcher leaks - should be a scoped_ptr\n4) i don't think the queryoptimizer change is correct\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1272158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1430432", "body": "Fixed using the helper.\nThanks for pointing out\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1430432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/100728", "body": "vs2008 vs vs2010 issue\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/100728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/116980", "body": "don't comment out the lines in the method, just comment out doTest() etc...\nmakes it easer to test, etc...\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/116980/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/333394", "body": "The one you mentioned should be that way i believe.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/333394/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676120", "body": "Is there a reason you put slaveOk in the middle rather than the end so we can preserve backwards compatibility?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "adrien-mogenet": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724088", "body": "Ok Erh !\n- I had a doubt about keeping the types ; I will keep numbers when displaying raw values as currently\n- What do you mean about \"consistent names between dbstats/collstats\" ? I didn't change anything... ( I think )\n- Which rule did I not follow about commit log messages ? According to the doc (http://www.mongodb.org/display/DOCS/Git+Commit+Rules) : I have to put [SERVER-XXX] on every commit ?\n\nThanks,\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724088/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/250853", "body": "There is no way to make it cleaner using boost::filesystem ?\nhttp://www.boost.org/doc/libs/1_45_0/libs/filesystem/v2/doc/index.htm\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/250853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/335318", "body": "Why not checking that scale is a multiple of 1024 ?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/335318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "testn": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742681", "body": "With simple M/R such as collection count/max/min, the execution time can be cut in half\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742681/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742879", "body": "But this method is the conversion from BSONObj to jsval. Shouldn't BSONObj with Array type be in order according to the specification?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742879/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742912", "body": "That would work. \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103444", "body": "funcMap has to be there to help perform function lookup\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103444/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103889", "body": "okay. will rebranch it again and put the link\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103889/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "zippy1981": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/787400", "body": "WOO-HOO!!!!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/787400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/89046", "body": "Good to see I'm not the only one improving error messages! \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/89046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/90091", "body": "Is it necessarily a good idea to have class diagrams in the visual studio projects? These projects will always be an afterthought (and rightly so) to the scons project.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/90091/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/96083", "body": "Confirmed that actually worked.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/96083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/98475", "body": "stoll() doesn't exist in Visual Studio 2008. I'm installing the windows 7 SDK to see if that will rectify it, but perhaps even being dirty and calling atol() would be better than causing build problems.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/98475/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/98552", "body": "The older, more conservative function is _strtoi64()\nFix in http://github.com/zippy1981/mongo/commit/f7b7c07e2a72011b8dbd72d10dcbaa22d8e5fb54\nStackoverflow discussion is in http://stackoverflow.com/questions/3106026/is-there-a-stoll-stroll-string-to-long-long-alternative-in-visual-studio-20/3106060#3106060\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/98552/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/99757", "body": "Test code I used for this.:\n\n<pre>\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string>\n\nnamespace mongo {\n\n    inline void uasserted(int msgid , char* msg) { printf(\"Msg: %s\", msg); exit(4); }\n    /* \"user assert\".  if asserts, user did something wrong, not our code */\n    #define MONGO_uassert(msgid, msg, expr) (void)( (!!(expr)) || (mongo::uasserted(msgid, msg), 0) )\n    #define uassert MONGO_uassert\n\n    inline long long parseLL( const char *n );\n\n\n    // expect that n contains a base ten number and nothing else after it\n    // NOTE win version hasn't been tested directly\n    inline long long parseLL( const char *n ) {\n        long long ret;\n        uassert( 13307, \"cannot convert empty string to long long\", *n != 0 );\n#if !defined(_WIN32)\n        char *endPtr = 0;\n        errno = 0;\n        ret = strtoll( n, &endPtr, 10 );\n        uassert( 13305, \"could not convert string to long long\", *endPtr == 0 && errno == 0 );\n#else\n#if _MSC_VER>=1600\n        size_t endLen = 0;\n        try {\n            ret = std::stoll( n, &endLen, 10 );\n        } catch ( ... ) {\n            endLen = 0;\n        }\n        uassert( 13306, \"could not convert string to long long\", endLen != 0 && n[ endLen ] == 0 );\n#else // stoll() wasn't introduced into VS 2010.\n        char* endPtr = (char *)&n[strlen(n) - 1];\n        try {\n            ret = _strtoi64( n, &endPtr, 10 );\n        } catch ( ... ) {\n            endPtr = 0;\n        }\n        uassert( 13310, \"could not convert string to long long\", *endPtr == 0 );\n#endif // _MSC_VER >= 16\n#endif // !defined(_WIN32)\n        return ret;\n    }\n\n}\n\nvoid main () {\n    //printf(\"_MSC_VER: %d\\n\", _MSC_VER);\n\n    char szNumber[] = \"999999999\";\n    printf(\"number '%s': %d\\n\\n\", szNumber, mongo::parseLL(szNumber));\n    \n    char szNumberWhitespace[] = \"   999999999   999\";\n    printf(\"number '%s': %d\\n\\n\", szNumberWhitespace, mongo::parseLL(szNumberWhitespace));\n    \n    char szNumberBad[] = \"99r9dd999999\";\n    printf(\"number '%s': %d\\n\\n\", szNumberBad, mongo::parseLL(szNumberBad));\n}\n</pre>\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/99757/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/99771", "body": "Dwight,\n\nShouldn't we also check the error cases?\n\nI'll confess I'm not running the unit tests on my machine. I'll start doing that.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/99771/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/100400", "body": "The UTF-8 BOM, signifying nothing, and annoying the hell out of developers and users.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/100400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/100595", "body": "Was the near/far thing a 64 bit thing? I though the near/far dated back to win16 programming?\n\nRegardless, it compiles.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/100595/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/124765", "body": "Wouldn't \"-o -\" be more inline with unix convention than \"-o stdout\"? Or is the problem boost parsing? \n\nThen again, part of me thinks default mongodump behavior should be to stdout, and there shoulld be a new switch for current default behavior.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/124765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/132633", "body": "Double build break, double my bad. I'll have to start building on ubuntu to check these things.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/132633/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "s4y": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/875296", "body": "I just changed the contents of this pull request slightly. Somehow managed to fudge up a one-line fix!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/875296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1505577", "body": "Looks like this was fixed in e27fa36b4c47b277b6e140f641a1187b712d99ca. Cool!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1505577/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "radarek": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1021120", "body": "Guys, what is the progress of that? MongoDB needs count + distinct :).\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1021120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "defunctzombie": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1106255", "body": "Is there a reason this isn't being accepted? It is low risk while adding a desired build functionality.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1106255/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mattbillenstein": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1216540", "body": "Also added a commit to allow mongorestore to use \"-\" as stdin when given both --db and --collection\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1216540/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "JensRantil": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1248211", "body": "The above commented small fixes were now added to this pull request. Feel free to include whenever you want to.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1248211/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lqs": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1279530", "body": "@erh\n\ni think the sparse assertion is useless because _nFields always > 0. and the sparse index can be created even if there's two or more fields.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1279530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mrohnstock": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1386332", "body": "Since 2010 this don't get included to mongodb c++ driver. Is there any other way to get the double field from BSONObj?\n\nUsed: bsonobj.getField(\"whatever\").Double(), but will end with assereration error.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1386332/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1388754", "body": "forget it... bsonobj.getField(\"whatever\").numberDouble() did the trick, got another mistake in code - just ignore my input.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1388754/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lqez": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1414175", "body": "Wow, I _really_ need these cool patches.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1414175/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "plaes": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1586684", "body": "How about this?\n\n```\nelif os.sys.platform in ('linux2', 'linux3'):\n```\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1586684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mongodb": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/14485", "body": "this was just a test.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/14485/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "metagoto": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/53383", "body": "lol ;)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/53383/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "phase2": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/55958", "body": "Looks like a typo here:\n\nhttp://github.com/mongodb/mongo/commit/2b7eb102159a36129222afa1883ea3b15145e08b#L0R40\n\nSee &7 instead of &&\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/55958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "thbar": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/58482", "body": "Bravo :)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/58482/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "dwight": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/90094", "body": "that's an accident.  will remove.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/90094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/99795", "body": "sure.\n\nUnitTest is something that runs at every server startup.  so they must very light and fast.\n\n\"real\" tests should go in dbtests / test binary (or jstests if applicable)\n\nrunning tests v good idea.  see \"smoke\" page on wiki\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/99795/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/181437", "body": "right.  will take it out.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/181437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/165991", "body": "use unique_ptr here\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/165991/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "thomasst": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/96213", "body": "Shouldn't the constant MaxBSONObjectSize be used instead? In case one wants to customize the size.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/96213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "TonyGen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/117314", "body": "Eliot, please roll this commit back. I found a bug with it. I didn't think you would include it until I made a pull request to you. Thanks, Tony\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/117314/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "dmytton": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/181433", "body": "Won't this catch use of small oplog size when used with an arbiter? In your docs you recommend using a small oplog  http://www.mongodb.org/display/DOCS/Adding+an+Arbiter\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/181433/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "hackworks": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/248914", "body": "Could InterLockedExchange be used on windows and __sync_xor_and_fetch when GCC is used?\nFor windows:\nhttp://msdn.microsoft.com/en-us/library/ms683590(v=vs.85).aspx\nFor GCC:\nhttp://gcc.gnu.org/onlinedocs/gcc/Atomic-Builtins.html\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/248914/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "gregstuder": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/301135", "body": "detects int overflow in passed 2d bounds/parameters\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/301135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/328497", "body": "Major change here is basically to pull up the expand algorithm into the superclass.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/328497/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "shriharipandit": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/333336", "body": "You also need to make a similar change within void ReplicaSetMonitor::_checkHosts():\n\nLine 297: log(1) << \"updated set (\" << _name << \") to: \" << getServerAddress()\n\nPerhaps more places as well.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/333336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "tadmarshall": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/166291", "body": "This was part of my fixing the memory leak in the shell.  The problem was\nthat memory was allocated by strdup() and never freed.  Since strdup() calls\nmalloc(), I added matching free() calls.  This bit of code is on the #else\nside of an #ifdef USE_LINENOISE and so isn't in the current code, but if\nUSE_LINENOISE was turned off then the call to \"new char[1024]\" would end up\ngetting passed to free() and it seemed better to match malloc() with free()\ninstead of new with free().  Without changing the entire way this memory is\nallocated and freed (a bigger change) I can't just use unique_ptr in one\nspot.  strdup() calls malloc() and I can't switch to unique_ptr without\nreplacing the strdup() calls.  I was trying to make minimal changes to fix\nthe memory leak.\n\n-----Original Message-----\nFrom: Dwight Merriman\n[mailto:reply+p-165991-d7ea43fd753410cd3421867a9c1b3e0d018a6daf@reply.github\n.com] \nSent: Wednesday, October 12, 2011 1:50 AM\nTo: Tad Marshall\nSubject: Re: [mongo] SERVER-4043 -- fix tab completion in mid-code (#110)\n\n> @@ -313,7 +315,7 @@ char \\* shellReadline( const char \\* prompt , int\n> handlesigint = 0 ) {\n>      return ret;\n>  #else\n>      printf(\"%s\", prompt); cout.flush();\n> -    char \\* buf = new char[1024];\n\nuse unique_ptr here\n\n## \n\nReply to this email directly or view it on GitHub:\nhttps://github.com/mongodb/mongo/pull/110/files#r165991\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/166291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "hoffrocket": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/196130", "body": "should be \"return LOG_INFO;\"\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/196130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/196132", "body": "pragram ->  program\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/196132/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "amschwerin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660497", "body": "For exception safety, use a boost::scoped_ptr to hold the result of readDocument().\n\nboost::scoped_ptr<BSONObj> o(readDocument(file, buf, BUF_SIZE));\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660497/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660503", "body": "This function should not be inlined.  Implement it in the cpp file.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660503/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660530", "body": "Ditto on scoped_ptr, here.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676654", "body": "(1) Inlining it won't help performance.\n(2) Inlining it will increase the binary size.\n(3) Inlining it means that any time it changes, all modules that include tool.h must be recompiled, which slows down incremental compilation.  This is important to developers.\n\nSo, it does two bad things and no good things.  Don't inline it.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676654/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/694609", "body": "In the event that the file is truncated, the old code would alert for failure in the event that the input file was truncated, and did not contain an even multiple of 4 bytes.  This change will silently stop processing, which is a behavior change.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/694609/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/694614", "body": "\"isFifoFile\", instead of \"fifo\".\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/694614/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/774347", "body": "Thanks for pinging.  Will look again.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/774347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/794711", "body": "Haven't forgotten.  Really swamped over here.\n\nOn Fri, May 4, 2012 at 8:36 AM, Azat Khuzhin\nreply@reply.github.com\nwrote:\n\n> > \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0size_t amt = fread(buf, 1, 4, file);\n> > - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0// end of fifo/file\n> > - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0if ( feof(file) ) {\n> > - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0break;\n> \n> @andy10gen ?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/pull/205/files#r773788\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/794711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935900", "body": "I think this needs to default to None, or on systems where \"g++\" is not the default compiler, builds will fail when --cxx is not specified.  I.e., Windows/MSVC systems.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935900/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935902", "body": "Again, default to None.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935912", "body": "Though we haven't been very consistent in the past, SConstruct files are python code, and should follow PEP-8 style.\n\nconf.env.Replace(CXX=GetOption(\"cxx\"))\n\nNote where whitespace has been removed.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935918", "body": "I think I'd rather omit these print statements.  If we want to report which compilers are being used, we should do that separately from option setting.  The compiler command line and link flags show up in the output, anyways.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935918/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "azat": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/664362", "body": "Why it should?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/664362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/699717", "body": "@andy10gen, it will fail at https://github.com/mongodb/mongo/pull/205/files#L1R549 ( `m.done() == fileLength` ). Is it enough?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/699717/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/773788", "body": "@andy10gen ?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/773788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "onyxmaster": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676141", "body": "No particular reason, I justified its placement on the basis that GridFile constructor is private so existing code shouldn't be broken by this change (the default value is not provided for the same reason), and that slaveOk felt to me as something immutable and should be close to another immutable (grid) both in field definitions (line 200 below) and the argument list.\nIf you feel that GridFile constructor might become protected or public some day, I agree with you that slaveOk should be placed at the end and, probably have the default false value added.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676142", "body": "If you prefer, I can make changes on my end and update the pull request, just tell me.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676142/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "milkie": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757112", "body": "I think we'll need to actually create the file on first use, rather than requesting the user do it.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757112/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757116", "body": "Also we should put in a link to the new documentation site and a mention of the mongo-users google group.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757116/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757123", "body": "_isatty() instead?  we already use it in util/log.cpp\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757123/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "lcapaldo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757185", "body": "Just put #define isatty _isatty in platform/windows?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757190", "body": "Yeah I can do both these things.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "cwestin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764933", "body": "I think $strlen on a nonexistent field should return zero.  This fits the operation of other operators, which are as forgiving as possible unless the result is definitively wrong.  Here, I think it makes sense to treat this as an empty string.  However, I think it should be an error to call $strlen on a real field that does not contain a string value.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764933/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764939", "body": "Why did you remove these assertions?  Since they seem to work for everyone else, it's safer to first assume there's something wrong on your setup, and that we should figure out what that is.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764939/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764972", "body": "Before this, I would check for pString.get() being NULL, or pString.getType() == jstNULL (from bson/bsontypes.h).  If either of those is true, return Value::getZero().  That will handle returning zero for a non-existent or null valued field.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}}, "4": {"henrikingo": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/086cec19cbd0f0a4a122d4cfa6f099dbaa2ef21d", "message": "SERVER-32260 Call workload_setup.py from system_perf.yml and longevity.yml"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "benety": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/7713d5531c663603d17fff1267d013e0b6867e5b", "message": "SERVER-32284 rename ReplicationCoordinator::reserveSnapshotName() to getMinimumVisibleSnapshot()"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/25b7af8b7367de11f0d4d864bd6a51983227c494", "message": "SERVER-32284 remove unused last snapshot support from ReplClientInfo"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/13a33d961f6936dc8290b8bb80f5c5b9e599f0a9", "message": "SERVER-32284 ReplicationCoordinatorImpl::_doneWaitingForReplication_inlock() always assumes null minSnapshot"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/d071ff8278abcd05d63c0367c49284645e844bcc", "message": "SERVER-32284 ReplicationCoordinatorImpl::_awaitReplication_inlock() always assumes null minSnapshot"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/0d97768115d093ed0041fff8c0ef39ba30c07e3f", "message": "SERVER-32284 remove ReplicationCoordinator::awaitReplicationOfLastOpForClient()"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/7ed79c16f619cab2195edf9cad37a3c4765c8a23", "message": "SERVER-32284 collMod waits for UUID schema changes using ReplicationCoordinator::awaitReplication() instead of awaitReplicationOfLastOpForClient()"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/f2af0ad889f1cfca7a311d53912c5b808500ea77", "message": "SERVER-29200 remove references to OplogEntry::raw from MultiApplier"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/25f0c6ae6c4fa80244cadb8a6bfcbf9bcc8b7742", "message": "SERVER-29200 migrate SyncTail::getMissingDoc() and fetchAndInsertMissingDoc() to accept OplogEntry instead of BSONObj"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/939a30aba1703c939b0352bded4b56257c8a0bec", "message": "SERVER-29200 add OplogEntry::getOperationToApply()\n\nremove references to OplogEntry::raw from rollback, prefetchPagesForReplicatedOp() and SyncTail"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sulabhM": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/8fd172e330b5af597bfba60d0bb7add8dc1a236c", "message": "SERVER-32506 OSX Mobile SE variant: Tag tests to skip on mobile SE"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "RedBeard0531": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/daf6c4714b45aeb8ba1a09380135b3267c4cc280", "message": "SERVER-32617 Fix code that reconstructs status with just code and string"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/4dc36c7ccb6b5b8f7d865993b5d648fe6dc4b7c7", "message": "SERVER-32684 Make mongos write command objects hold Status directly"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/68b961b28f5dd40501f0ef9b6c6b515ff1ec7cfd", "message": "SERVER-32673 Make WorkingSetCommon::buildMemberStatusObject handle ErrorExtraInfo"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/b165c1e9275016dc15d071d147cec0e5b1bc1f31", "message": "SERVER-32587 Convert StaleConfigException to use ErrorExtraInfo"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/84c3f83421b262028081296e4c387d29691ea376", "message": "SERVER-32586 Convert ResolvedView to use ErrorExtraInfo"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hanumantmk": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/8ee6b3d31756d7939480f1283ec53af3bd6eb489", "message": "SERVER-32683 JS JIT off by default\n\nTurn off the spidermonkey jit by default."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "will62794": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/6f885ea4579c04bd73c4d6fecc497520105f2609", "message": "SERVER-30818 Cleanup comments in background.h"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/aa35454e98a3026a7c44cc736d2326a3fa38e7b3", "message": "SERVER-30818 Add function to await background operations on multiple databases"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kevinAlbs": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/b9decc492c0ff942d5bcd6e8c799de70fa0839af", "message": "SERVER-21630 run CheckReplDBHash on csrs and shard replset\n\nAnd run ValidateCollections hook on priority=0 secondaries."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "elouie99": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/f7d45863daa61920d3b6ee8abbf105833767a223", "message": "SERVER-31628 Always use a python virtualenv in etc/evergreen.yml"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lukech": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/23914068c331a42d1f98de0d58caecf0e391549a", "message": "Import wiredtiger: 357efdd4ce279efc71ff618c59fe1b903ef80bb2 from branch mongodb-3.8\n\nref: 9e50448231..357efdd4ce\nfor: 3.7.2\n\nWT-3565       Test and understand mixed timestamp/no-timestamp usage to same data\nWT-3597       Add a diagnostic check for updates to the same key out of timestamp order\nWT-3632       Increase how granularly cache usage settings can be configured\nWT-3695       format failed to report a stuck cache\nWT-3740       race in page dirty-byte decrement.\nWT-3767       Avoid lookaside instantiation for faster reads\nWT-3775       Improve commit timestamp is older than oldest timestamp error message\nWT-3792       LSM version 1 metadata incompatibility\nWT-3796       Report a better error message if transaction commit fails\nWT-3799       Test/format with timestamps enabled pin cache full\nWT-3809       Fix a bug in lookaside related to birthmarks\nWT-3811       Python scripts for visualizing operation tracking files\nWT-3818       __rec_txn_read() code order cleanup\nWT-3825       Fix calculation of CPU ticks per unit time\nWT-3826       random-abort test failure\nWT-3827       test_compact02 failure\nWT-3828       Link error on OS/X for __wt_process data reference\nWT-3831       uninitialized buffer value in statlog server path comparison\nWT-3832       Fixup shell script warning messages\nWT-3833       test/format cache_minimum value error\nWT-3841       Fix error message pattern in timestamp09\nWT-3842       full-build Friday & lint\nWT-3844       Checkpoints can hang on limbo pages\nWT-3845       Compiler warning in examples using GCC 5.4.0"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kmahar": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/23870b6aecac924a15af49bb7abe2f8e1cda2aa8", "message": "SERVER-30744 Move dropCollection logic from ShardingCatalogClient into ShardingCatalogManager"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kaloianm": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/7f4e454907f14a5a82195d15e6ee96cbcd6d4d5b", "message": "SERVER-32447 Add a mock CatalogCache::getCollectionRoutingInfoAt method\n\nThe added method always returns the routing information at the latest\ntimestamp."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "visualzhou": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/7d2f43adabb344f93ef8bec523efa3187bcf4ce6", "message": "SERVER-32317 Make sharding chunk manipulation operations use doTxn instead of applyOps"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vessy-mongodb": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/35c44dbd37c0167cc07420c8ea286ad6edfac7ff", "message": "SERVER-30347 Fail startup when running wiredTiger with --nojournal as part of a replica set"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "BillyDonahue": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/a8561f9a3775083eaf17e648850791a2cbd37893", "message": "SERVER-32070 remove stdx::bind (final patch)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mtrussotto": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/ef81d53b986aa701c722820a204eba73a635f748", "message": "SERVER-32726 Fix out-of-order error code in update_driver.cpp"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nzolnierzmdb": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/4eabf1ea6225f444b3b0b3b2fee785aaa306212f", "message": "Revert \"SERVER-32308: Add the ability for a $lookup stage to execute on mongos against a sharded foreign collection\"\n\nThis reverts commit 7298d273c0497f2720ec1471ad0f4910bff07af4."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cramaechi": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1203", "title": "[SERVER-32259] Update wiredtiger_util.cpp", "body": "WiredTigerUtil::fetchTypeAndSourceURI() is using\r\ninvariant(colgroupResult.isOK()) instead of\r\ninvariantOK(colgroupResult.getStatus()). This means that if the\r\ninvariant ever fires, we don't know what the bad Status actually was.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "JunHe77": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1202", "title": "SERVER-32576: Merge ARM64 support to use 64-bit optimized code path", "body": "Change-Id: Icd2e0f9378952bbd811b54fe60a7f3895c960e92\r\nSigned-off-by: Jun He <jun.he@arm.com>", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kakts": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1198", "title": "Fix typos in config_server_test_fixture.cpp and dpml_error_codes.c", "body": "## Summary\r\nI found some typos in files as below.\r\n\r\n```\r\nsrc/mongo/s/config_server_test_fixture.cpp\r\nsrc/third_party/IntelRDFPMathLib20U1/LIBRARY/float128/dpml_error_codes.c\r\n```\r\n\r\nreponse  \u2192 response\r\n\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zhihuiFan": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1197", "title": "SERVER-4785 maintain slowms at database level", "body": "See issue at https://jira.mongodb.org/browse/SERVER-4785 and https://jira.mongodb.org/browse/SERVER-18946 \r\n\r\n\r\nHere is the test result.\r\n\r\n\r\nzhifan@zhifan-dev16:~/github/mongo$ ./mongo\r\n> db.getProfilingStatus()\r\n{ \"was\" : 0, \"slowms\" : 100, \"sampleRate\" : 1 }\r\n> db.setProfilingLevel(0, 1)\r\n{ \"was\" : 0, \"slowms\" : 100, \"sampleRate\" : 1, \"ok\" : 1 }\r\n> db.getProfilingStatus()\r\n{ \"was\" : 0, \"slowms\" : 1, \"sampleRate\" : 1 }\r\n> for(var i =0; i<10000; i++) {db.test.save({'i': i})}\r\nWriteResult({ \"nInserted\" : 1 })\r\n> use test2\r\nswitched to db test2\r\n> db.getProfilingStatus()\r\n{ \"was\" : 0, \"slowms\" : 100, \"sampleRate\" : 1 } . -- test 2: still 100\r\n> for(var i =0; i<10000; i++) {db.test.save({'i': i})}\r\nWriteResult({ \"nInserted\" : 1 })\r\n\r\n\r\nas a result:  we capture the slow queries from test database but not for test2 database.\r\n\r\n`\r\n2017-12-26T13:38:32.678+0800 I COMMAND  [conn1] command test.test appName: \"MongoDB Shell\" command: insert { insert: \"test\", ordered: true, $db: \"test\" } ninserted:1 keysInserted:1 numYields:0 reslen:29 locks:{ Global: { acquireCount: { r: 3, w: 1 } }, Database: { acquireCount: { w: 1, R: 1 } }, Collection: { acquireCount: { w: 1 } } } protocol:op_msg 3ms\r\n\r\n`\r\n\r\n  ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bmanojlovic": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1195", "title": "initial scons 3.0.1 and python3 build support", "body": "This PR allows building mongo with use of latest (3.0.1) scons which now uses python3 by default.\r\nThere are still a lot of rough edges but on the end it allows building binary mongod\r\n\r\npython version:\r\n```\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> python3 --version\r\nPython 3.6.3\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> \r\n```\r\nscons version:\r\n```\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> scons -v\r\nSCons by Steven Knight et al.:\r\n        script: v3.0.1.74b2c53bc42290e911b334a6b44f187da698a668, 2017/11/14 13:16:53, by bdbaddog on hpmicrodog\r\n        engine: v3.0.1.74b2c53bc42290e911b334a6b44f187da698a668, 2017/11/14 13:16:53, by bdbaddog on hpmicrodog\r\n        engine path: ['/usr/lib/scons-3.0.1/SCons']\r\nCopyright (c) 2001 - 2017 The SCons Foundation\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched>\r\n```\r\nand finally running scons on my machine\r\n```\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> scons -j 8 MONGO_VERSION=3.6.0  --disable-warnings-as-errors  --ssl\r\nscons: Reading SConscript files ...\r\nMkdir(\"build/scons\")\r\nscons version: 3.0.1\r\npython version: 3 6 3 final 0\r\nChecking whether the C compiler works... yes\r\nChecking whether the C++ compiler works... yes\r\n...\r\n...\r\n...\r\nranlib build/blah/mongo/db/query/libquery_common.a\r\nGenerating library build/blah/mongo/db/libmongod_options.a\r\nranlib build/blah/mongo/db/libmongod_options.a\r\nLinking build/blah/mongo/mongod\r\nInstall file: \"build/blah/mongo/mongod\" as \"mongod\"\r\nscons: done building targets.\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> \r\n```\r\nand of course running built binary\r\n```\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> ./mongod --dbpath /tmp/ --bind_ip 127.0.0.1\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] MongoDB starting : pid=2937 port=27017 dbpath=/tmp/ 64-bit host=pc\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] db version v3.6.0\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] git version: 9038d0a67ee578aa68ef8482b1fc98750d1007a6\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] OpenSSL version: OpenSSL 1.1.0g-fips  2 Nov 2017\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] allocator: tcmalloc\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] modules: none\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] build environment:\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten]     distarch: x86_64\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten]     target_arch: x86_64\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] options: { net: { bindIp: \"127.0.0.1\" }, storage: { dbPath: \"/tmp/\" } }\r\n2017-12-22T18:52:02.566+0000 I STORAGE  [initandlisten] Detected data files in /tmp/ created by the 'wiredTiger' storage engine, so setting the active storage engine to 'wiredTiger'.\r\n2017-12-22T18:52:02.566+0000 I STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=15542M,session_max=20000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000),statistics_log=(wait=0),verbose=(recovery_progress),\r\n2017-12-22T18:52:02.637+0000 I STORAGE  [initandlisten] WiredTiger message [1513968722:637511][2937:0x7f87663729c0], txn-recover: Main recovery loop: starting at 6/4736\r\n2017-12-22T18:52:02.679+0000 I STORAGE  [initandlisten] WiredTiger message [1513968722:679111][2937:0x7f87663729c0], txn-recover: Recovering log 6 through 7\r\n2017-12-22T18:52:02.706+0000 I STORAGE  [initandlisten] WiredTiger message [1513968722:706386][2937:0x7f87663729c0], txn-recover: Recovering log 7 through 7\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] ** WARNING: /sys/kernel/mm/transparent_hugepage/enabled is 'always'.\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] **        We suggest setting it to 'never'\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] ** WARNING: soft rlimits too low. rlimits set to 4096 processes, 64000 files. Number of processes should be at least 32000 : 0.5 times number of files.\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.736+0000 I FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory '/tmp/diagnostic.data'\r\n2017-12-22T18:52:02.737+0000 I NETWORK  [initandlisten] waiting for connections on port 27017\r\n```\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "m-masataka": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1191", "title": "The GCC version should be updated in SConstruct", "body": "In ``docs/building.md`` , It require GCC version 5.4.0 or newer, but ``SConstruct`` require 5.3.0 or newer.\r\nIs it mistake? ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "judu": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1186", "title": "Fix build.", "body": "Without these using `std::string`, mongodb does not build here.\r\n\r\nI'm using gcc 6.4.0.\r\n\r\nPlease ask if you need more information about my build :)", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zydcom": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1171", "title": "SERVER-30636\uff1afix range deleter crash", "body": "This patch can be also used for v3.2 ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ryankall": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1169", "title": "Server 25311", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/1140", "title": "Verbosity bug", "body": "now the Explain command will not accept unknown command like verbos: 'queryPlanner'", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lorien": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1162", "title": "Fix error in command example in mongorestore.1 man", "body": "The trailing slash argument is missing in mongorestore command example in debian mans.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "SunguckLee": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1151", "title": "Support prefix match for full-text search", "body": "Add range search feature on full text search (original version has only exact match)\r\n\r\nFor CJK language, mongodb does not support stemmer for full text search.\r\nAlso not easy to implement stemmer for those language (Especially Korean).\r\nSo we usually use N-gram parser for full text search not supported mongodb yet.\r\n\r\nFortunately in Korean, we use space character between words and Korean(and also Japanese) use only suffix not prefix. So we can use mongodb full text search if mongodb support prefix match in fulltext. So I propose this simple feature.\r\n\r\n>> Match range of original fulltext search\r\n    * '\ud55c\uae00' <= match_range <= '\ud55c\uae00'\r\n    * '\ud14c\uc2a4\ud2b8' <= match_range <= '\ud14c\uc2a4\ud2b8'\r\n    * '\uc774\uc131' <= match_range <= '\uc774\uc131'\r\n    * '\ud55c' <= match_range <= '\ud55c'\r\n\r\n>> Match range of patched fulltext search\r\n    * '\ud55c\uae00' <= match_range < '\ud55c\uae01'\r\n    * '\ud14c\uc2a4\ud2b8' <= match_range < '\ud14c\uc2a4\ud2b9'\r\n    * '\uc774\uc131' <= match_range < '\uc774\uc132'\r\n    * '\ud55c' <= match_range < '\ud55d'\r\n\r\nI hope user can control this search mode (exact or prefix match) by query parameter or internal parameter.\r\n\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sam-pf": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1149", "title": "change log message for CRL loading", "body": "The log message from _setupCRL was misleading.  It is not the number of revoked certificates that X509_load_crl_file returns.  It is the number of CRLs (X509_CRL structures) that it successfully loads that it returns.\r\n\r\nhttps://github.com/openssl/openssl/blob/c0452248ea1a59a41023a4765ef7d9825e80a62b/crypto/x509/by_file.c\r\n\r\nhttp://www.umich.edu/~x509/ssleay/x509_crls.html\r\n  ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nleite": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1136", "title": "SERVER-1889 internal replication nic", "body": "- support for internal replication nic", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kolisergej": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1128", "title": "[SERVER-8958] Replace strtod/strtol/atoi/atol/etc calls with parseNumberFromString<T>", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ZharkovIlia": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1122", "title": "General Improvements v2", "body": "Elimination of some redundancy. Some function arguments are passed by reference. Few bugs are fixed.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "thesebas": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1121", "title": "Fix for negative Date timezone offsets ", "body": "When uncommented this `// print a non-UTC time` block and changed `var UTC = '';` got invalid timezone offsets like: `ISODate(\"2016-11-14T00:00:00+-100\")`. This makes Date be displayed as `ISODate(\"2016-11-14T00:00:00+0100\")`", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "danharel": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1093", "title": "SERVER-24519 Added framework for micro benchmark tools", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Soullivaneuh": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1061", "title": "[WIP] [3.x] Alpine linux compatibility", "body": "Same as #1060 but for 3.x version.\n- [x] alpine-release on processinfo\n- [x] Fix `'ELFCLASS__ELF_NATIVE_CLASS' was not declared in this scope`\n- [x] Fix `gnu_get_libc_version` usage that does not exist on Musl\n- [x] Fix undefined `mallinfo` function\n- [x] error_code.ipp:110:22: error: could not convert 'strerror_r(value, ((char*)(& buf)), sizeof (buf))' from 'int' to 'std::__cxx11::string {aka std::__cxx11::basic_string<char>}\n  - https://github.com/chriskohlhoff/asio/pull/95\n- [ ] `third_party/gperftools-2.2`: `error: '__off64_t' has not been declared`\n  - https://github.com/gperftools/gperftools/issues/693\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "salessandri": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1027", "title": "SERVER-8839 TimerStats and TimerHolder should work with microseconds.", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "e-siedler": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/275", "title": "SERVER-2541 Windows performance counters implemented", "body": "Fully functional windows performance counters imlpemented as a mongod.exe Module.\n\nSee README. See jira SERVER-2541 for some additional notes.\n- No Visual Studio project file have been updated. (I can't do that with VS Express).\n- I didn't make use of this new \"buildscripts/moduleconfig.py\" infrastructure mostly because of my incompetence: new to scons, new to python, didn't like both. 8-)\n- There is a new artifact that needs to be distributed along with mongod.exe: mongod.man. I didn't look into that (packaging).\n\nThanks\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bgianfo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/501190", "body": "Not sure what the deal is, but I made a last minute change before I committed, breaking this patch. \nhttp://github.com/bgianfo/mongo/commit/dc2c046c95c2b9ae8d2ec9f0d26987951437d502#diff-0\n\nPulling this commit also, you have the complete working package. :)\n\nI would add it to the pull request, but github seems to have made that impossible? \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/501190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "halfdan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/597405", "body": "When will this get integrated? Any feedback?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/597405/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "erh": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/662702", "body": "We're going to start including a minimal set of boost in the source tree to avoid conflicts and too much branching in the code.\nThat will be in the 2.0 cycle and should be boost 1.45, so not sure we want to do this right now, especially right before 1.8.0\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/662702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724077", "body": "Couple of notes: \n- we're not going to change the type from number to string\n- names should be consistent between dbstats/collstats\n- keeping commit log clean is important\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724094", "body": "dbstats already has a named value for this option, so you should use the same one.\n\nre: the commit stream, each commit should be a logical unit, but we also want to keep the number reasonable.  There are 9 listed above (though i guess really only 7)\nFor example, if you change a command, the change to the shell should be in the same commit.\n\nWe're in lockdown for 1.8, so will be a while before we would merge this in, and not sure this is exactly where we'll want to go with it.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742853", "body": "I'm seeing about a 10% improvement.\nThe problem is that Array doesn't currently require the elements to be in order.\nIn fact some implementations have it like this\n{ \"0\" : 1 , \"1\" : 1 , \"10\" : 10 , \"2\" : 2 , ... }\n So this patch will break some clients.\nThere is a more complex patch you could do which verifies the order while iterating.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742895", "body": "No, the spec doesn't say it has to be in order.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742895/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742903", "body": "I did this:\nhttps://github.com/mongodb/mongo/commit/cd834438e55086442b264dfc6cc9425d8a34f0bd\n\nWhich is about 80% of the improvement\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1086311", "body": "Can you break these into different parts?\nSome look ok, others not so sure about (FuncMap for example)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1086311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103470", "body": "Right, but there seem to be others that are unrelated.\nWould just be better if we can make each logical change separate.\n\nOn Wed, May 4, 2011 at 10:55 PM, testn\nreply@reply.github.com\nwrote:\n\n> funcMap has to be there to help perform function lookup\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/pull/35#issuecomment-1103444\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103470/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1272158", "body": "There are a few issues that I see at first glance.\n\n1) why did you remove the sparse check\n2) your'e not checking the type of \"filter\" correctly\n3) _matcher leaks - should be a scoped_ptr\n4) i don't think the queryoptimizer change is correct\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1272158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1430432", "body": "Fixed using the helper.\nThanks for pointing out\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1430432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/100728", "body": "vs2008 vs vs2010 issue\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/100728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/116980", "body": "don't comment out the lines in the method, just comment out doTest() etc...\nmakes it easer to test, etc...\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/116980/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/333394", "body": "The one you mentioned should be that way i believe.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/333394/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676120", "body": "Is there a reason you put slaveOk in the middle rather than the end so we can preserve backwards compatibility?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "adrien-mogenet": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724088", "body": "Ok Erh !\n- I had a doubt about keeping the types ; I will keep numbers when displaying raw values as currently\n- What do you mean about \"consistent names between dbstats/collstats\" ? I didn't change anything... ( I think )\n- Which rule did I not follow about commit log messages ? According to the doc (http://www.mongodb.org/display/DOCS/Git+Commit+Rules) : I have to put [SERVER-XXX] on every commit ?\n\nThanks,\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724088/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/250853", "body": "There is no way to make it cleaner using boost::filesystem ?\nhttp://www.boost.org/doc/libs/1_45_0/libs/filesystem/v2/doc/index.htm\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/250853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/335318", "body": "Why not checking that scale is a multiple of 1024 ?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/335318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "testn": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742681", "body": "With simple M/R such as collection count/max/min, the execution time can be cut in half\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742681/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742879", "body": "But this method is the conversion from BSONObj to jsval. Shouldn't BSONObj with Array type be in order according to the specification?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742879/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742912", "body": "That would work. \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103444", "body": "funcMap has to be there to help perform function lookup\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103444/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103889", "body": "okay. will rebranch it again and put the link\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103889/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "zippy1981": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/787400", "body": "WOO-HOO!!!!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/787400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/89046", "body": "Good to see I'm not the only one improving error messages! \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/89046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/90091", "body": "Is it necessarily a good idea to have class diagrams in the visual studio projects? These projects will always be an afterthought (and rightly so) to the scons project.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/90091/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/96083", "body": "Confirmed that actually worked.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/96083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/98475", "body": "stoll() doesn't exist in Visual Studio 2008. I'm installing the windows 7 SDK to see if that will rectify it, but perhaps even being dirty and calling atol() would be better than causing build problems.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/98475/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/98552", "body": "The older, more conservative function is _strtoi64()\nFix in http://github.com/zippy1981/mongo/commit/f7b7c07e2a72011b8dbd72d10dcbaa22d8e5fb54\nStackoverflow discussion is in http://stackoverflow.com/questions/3106026/is-there-a-stoll-stroll-string-to-long-long-alternative-in-visual-studio-20/3106060#3106060\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/98552/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/99757", "body": "Test code I used for this.:\n\n<pre>\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string>\n\nnamespace mongo {\n\n    inline void uasserted(int msgid , char* msg) { printf(\"Msg: %s\", msg); exit(4); }\n    /* \"user assert\".  if asserts, user did something wrong, not our code */\n    #define MONGO_uassert(msgid, msg, expr) (void)( (!!(expr)) || (mongo::uasserted(msgid, msg), 0) )\n    #define uassert MONGO_uassert\n\n    inline long long parseLL( const char *n );\n\n\n    // expect that n contains a base ten number and nothing else after it\n    // NOTE win version hasn't been tested directly\n    inline long long parseLL( const char *n ) {\n        long long ret;\n        uassert( 13307, \"cannot convert empty string to long long\", *n != 0 );\n#if !defined(_WIN32)\n        char *endPtr = 0;\n        errno = 0;\n        ret = strtoll( n, &endPtr, 10 );\n        uassert( 13305, \"could not convert string to long long\", *endPtr == 0 && errno == 0 );\n#else\n#if _MSC_VER>=1600\n        size_t endLen = 0;\n        try {\n            ret = std::stoll( n, &endLen, 10 );\n        } catch ( ... ) {\n            endLen = 0;\n        }\n        uassert( 13306, \"could not convert string to long long\", endLen != 0 && n[ endLen ] == 0 );\n#else // stoll() wasn't introduced into VS 2010.\n        char* endPtr = (char *)&n[strlen(n) - 1];\n        try {\n            ret = _strtoi64( n, &endPtr, 10 );\n        } catch ( ... ) {\n            endPtr = 0;\n        }\n        uassert( 13310, \"could not convert string to long long\", *endPtr == 0 );\n#endif // _MSC_VER >= 16\n#endif // !defined(_WIN32)\n        return ret;\n    }\n\n}\n\nvoid main () {\n    //printf(\"_MSC_VER: %d\\n\", _MSC_VER);\n\n    char szNumber[] = \"999999999\";\n    printf(\"number '%s': %d\\n\\n\", szNumber, mongo::parseLL(szNumber));\n    \n    char szNumberWhitespace[] = \"   999999999   999\";\n    printf(\"number '%s': %d\\n\\n\", szNumberWhitespace, mongo::parseLL(szNumberWhitespace));\n    \n    char szNumberBad[] = \"99r9dd999999\";\n    printf(\"number '%s': %d\\n\\n\", szNumberBad, mongo::parseLL(szNumberBad));\n}\n</pre>\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/99757/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/99771", "body": "Dwight,\n\nShouldn't we also check the error cases?\n\nI'll confess I'm not running the unit tests on my machine. I'll start doing that.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/99771/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/100400", "body": "The UTF-8 BOM, signifying nothing, and annoying the hell out of developers and users.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/100400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/100595", "body": "Was the near/far thing a 64 bit thing? I though the near/far dated back to win16 programming?\n\nRegardless, it compiles.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/100595/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/124765", "body": "Wouldn't \"-o -\" be more inline with unix convention than \"-o stdout\"? Or is the problem boost parsing? \n\nThen again, part of me thinks default mongodump behavior should be to stdout, and there shoulld be a new switch for current default behavior.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/124765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/132633", "body": "Double build break, double my bad. I'll have to start building on ubuntu to check these things.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/132633/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "s4y": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/875296", "body": "I just changed the contents of this pull request slightly. Somehow managed to fudge up a one-line fix!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/875296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1505577", "body": "Looks like this was fixed in e27fa36b4c47b277b6e140f641a1187b712d99ca. Cool!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1505577/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "radarek": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1021120", "body": "Guys, what is the progress of that? MongoDB needs count + distinct :).\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1021120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "defunctzombie": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1106255", "body": "Is there a reason this isn't being accepted? It is low risk while adding a desired build functionality.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1106255/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mattbillenstein": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1216540", "body": "Also added a commit to allow mongorestore to use \"-\" as stdin when given both --db and --collection\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1216540/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "JensRantil": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1248211", "body": "The above commented small fixes were now added to this pull request. Feel free to include whenever you want to.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1248211/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lqs": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1279530", "body": "@erh\n\ni think the sparse assertion is useless because _nFields always > 0. and the sparse index can be created even if there's two or more fields.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1279530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mrohnstock": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1386332", "body": "Since 2010 this don't get included to mongodb c++ driver. Is there any other way to get the double field from BSONObj?\n\nUsed: bsonobj.getField(\"whatever\").Double(), but will end with assereration error.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1386332/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1388754", "body": "forget it... bsonobj.getField(\"whatever\").numberDouble() did the trick, got another mistake in code - just ignore my input.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1388754/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lqez": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1414175", "body": "Wow, I _really_ need these cool patches.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1414175/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "plaes": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1586684", "body": "How about this?\n\n```\nelif os.sys.platform in ('linux2', 'linux3'):\n```\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1586684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mongodb": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/14485", "body": "this was just a test.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/14485/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "metagoto": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/53383", "body": "lol ;)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/53383/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "phase2": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/55958", "body": "Looks like a typo here:\n\nhttp://github.com/mongodb/mongo/commit/2b7eb102159a36129222afa1883ea3b15145e08b#L0R40\n\nSee &7 instead of &&\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/55958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "thbar": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/58482", "body": "Bravo :)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/58482/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "dwight": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/90094", "body": "that's an accident.  will remove.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/90094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/99795", "body": "sure.\n\nUnitTest is something that runs at every server startup.  so they must very light and fast.\n\n\"real\" tests should go in dbtests / test binary (or jstests if applicable)\n\nrunning tests v good idea.  see \"smoke\" page on wiki\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/99795/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/181437", "body": "right.  will take it out.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/181437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/165991", "body": "use unique_ptr here\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/165991/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "thomasst": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/96213", "body": "Shouldn't the constant MaxBSONObjectSize be used instead? In case one wants to customize the size.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/96213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "TonyGen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/117314", "body": "Eliot, please roll this commit back. I found a bug with it. I didn't think you would include it until I made a pull request to you. Thanks, Tony\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/117314/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "dmytton": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/181433", "body": "Won't this catch use of small oplog size when used with an arbiter? In your docs you recommend using a small oplog  http://www.mongodb.org/display/DOCS/Adding+an+Arbiter\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/181433/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "hackworks": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/248914", "body": "Could InterLockedExchange be used on windows and __sync_xor_and_fetch when GCC is used?\nFor windows:\nhttp://msdn.microsoft.com/en-us/library/ms683590(v=vs.85).aspx\nFor GCC:\nhttp://gcc.gnu.org/onlinedocs/gcc/Atomic-Builtins.html\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/248914/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "gregstuder": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/301135", "body": "detects int overflow in passed 2d bounds/parameters\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/301135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/328497", "body": "Major change here is basically to pull up the expand algorithm into the superclass.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/328497/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "shriharipandit": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/333336", "body": "You also need to make a similar change within void ReplicaSetMonitor::_checkHosts():\n\nLine 297: log(1) << \"updated set (\" << _name << \") to: \" << getServerAddress()\n\nPerhaps more places as well.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/333336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "tadmarshall": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/166291", "body": "This was part of my fixing the memory leak in the shell.  The problem was\nthat memory was allocated by strdup() and never freed.  Since strdup() calls\nmalloc(), I added matching free() calls.  This bit of code is on the #else\nside of an #ifdef USE_LINENOISE and so isn't in the current code, but if\nUSE_LINENOISE was turned off then the call to \"new char[1024]\" would end up\ngetting passed to free() and it seemed better to match malloc() with free()\ninstead of new with free().  Without changing the entire way this memory is\nallocated and freed (a bigger change) I can't just use unique_ptr in one\nspot.  strdup() calls malloc() and I can't switch to unique_ptr without\nreplacing the strdup() calls.  I was trying to make minimal changes to fix\nthe memory leak.\n\n-----Original Message-----\nFrom: Dwight Merriman\n[mailto:reply+p-165991-d7ea43fd753410cd3421867a9c1b3e0d018a6daf@reply.github\n.com] \nSent: Wednesday, October 12, 2011 1:50 AM\nTo: Tad Marshall\nSubject: Re: [mongo] SERVER-4043 -- fix tab completion in mid-code (#110)\n\n> @@ -313,7 +315,7 @@ char \\* shellReadline( const char \\* prompt , int\n> handlesigint = 0 ) {\n>      return ret;\n>  #else\n>      printf(\"%s\", prompt); cout.flush();\n> -    char \\* buf = new char[1024];\n\nuse unique_ptr here\n\n## \n\nReply to this email directly or view it on GitHub:\nhttps://github.com/mongodb/mongo/pull/110/files#r165991\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/166291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "hoffrocket": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/196130", "body": "should be \"return LOG_INFO;\"\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/196130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/196132", "body": "pragram ->  program\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/196132/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "amschwerin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660497", "body": "For exception safety, use a boost::scoped_ptr to hold the result of readDocument().\n\nboost::scoped_ptr<BSONObj> o(readDocument(file, buf, BUF_SIZE));\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660497/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660503", "body": "This function should not be inlined.  Implement it in the cpp file.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660503/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660530", "body": "Ditto on scoped_ptr, here.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676654", "body": "(1) Inlining it won't help performance.\n(2) Inlining it will increase the binary size.\n(3) Inlining it means that any time it changes, all modules that include tool.h must be recompiled, which slows down incremental compilation.  This is important to developers.\n\nSo, it does two bad things and no good things.  Don't inline it.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676654/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/694609", "body": "In the event that the file is truncated, the old code would alert for failure in the event that the input file was truncated, and did not contain an even multiple of 4 bytes.  This change will silently stop processing, which is a behavior change.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/694609/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/694614", "body": "\"isFifoFile\", instead of \"fifo\".\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/694614/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/774347", "body": "Thanks for pinging.  Will look again.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/774347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/794711", "body": "Haven't forgotten.  Really swamped over here.\n\nOn Fri, May 4, 2012 at 8:36 AM, Azat Khuzhin\nreply@reply.github.com\nwrote:\n\n> > \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0size_t amt = fread(buf, 1, 4, file);\n> > - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0// end of fifo/file\n> > - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0if ( feof(file) ) {\n> > - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0break;\n> \n> @andy10gen ?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/pull/205/files#r773788\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/794711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935900", "body": "I think this needs to default to None, or on systems where \"g++\" is not the default compiler, builds will fail when --cxx is not specified.  I.e., Windows/MSVC systems.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935900/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935902", "body": "Again, default to None.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935912", "body": "Though we haven't been very consistent in the past, SConstruct files are python code, and should follow PEP-8 style.\n\nconf.env.Replace(CXX=GetOption(\"cxx\"))\n\nNote where whitespace has been removed.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935918", "body": "I think I'd rather omit these print statements.  If we want to report which compilers are being used, we should do that separately from option setting.  The compiler command line and link flags show up in the output, anyways.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935918/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "azat": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/664362", "body": "Why it should?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/664362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/699717", "body": "@andy10gen, it will fail at https://github.com/mongodb/mongo/pull/205/files#L1R549 ( `m.done() == fileLength` ). Is it enough?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/699717/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/773788", "body": "@andy10gen ?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/773788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "onyxmaster": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676141", "body": "No particular reason, I justified its placement on the basis that GridFile constructor is private so existing code shouldn't be broken by this change (the default value is not provided for the same reason), and that slaveOk felt to me as something immutable and should be close to another immutable (grid) both in field definitions (line 200 below) and the argument list.\nIf you feel that GridFile constructor might become protected or public some day, I agree with you that slaveOk should be placed at the end and, probably have the default false value added.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676142", "body": "If you prefer, I can make changes on my end and update the pull request, just tell me.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676142/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "milkie": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757112", "body": "I think we'll need to actually create the file on first use, rather than requesting the user do it.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757112/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757116", "body": "Also we should put in a link to the new documentation site and a mention of the mongo-users google group.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757116/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757123", "body": "_isatty() instead?  we already use it in util/log.cpp\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757123/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "lcapaldo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757185", "body": "Just put #define isatty _isatty in platform/windows?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757190", "body": "Yeah I can do both these things.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "cwestin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764933", "body": "I think $strlen on a nonexistent field should return zero.  This fits the operation of other operators, which are as forgiving as possible unless the result is definitively wrong.  Here, I think it makes sense to treat this as an empty string.  However, I think it should be an error to call $strlen on a real field that does not contain a string value.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764933/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764939", "body": "Why did you remove these assertions?  Since they seem to work for everyone else, it's safer to first assume there's something wrong on your setup, and that we should figure out what that is.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764939/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764972", "body": "Before this, I would check for pString.get() being NULL, or pString.getType() == jstNULL (from bson/bsontypes.h).  If either of those is true, return Value::getZero().  That will handle returning zero for a non-existent or null valued field.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}}, "5": {"GeertBosch": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/3020767b4a20fca53d4b58b440085933c8eb7c3e", "message": "SERVER-32606 Oplog read time may only decrease during rollback"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "henrikingo": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/086cec19cbd0f0a4a122d4cfa6f099dbaa2ef21d", "message": "SERVER-32260 Call workload_setup.py from system_perf.yml and longevity.yml"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "benety": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/7713d5531c663603d17fff1267d013e0b6867e5b", "message": "SERVER-32284 rename ReplicationCoordinator::reserveSnapshotName() to getMinimumVisibleSnapshot()"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/25b7af8b7367de11f0d4d864bd6a51983227c494", "message": "SERVER-32284 remove unused last snapshot support from ReplClientInfo"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/13a33d961f6936dc8290b8bb80f5c5b9e599f0a9", "message": "SERVER-32284 ReplicationCoordinatorImpl::_doneWaitingForReplication_inlock() always assumes null minSnapshot"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/d071ff8278abcd05d63c0367c49284645e844bcc", "message": "SERVER-32284 ReplicationCoordinatorImpl::_awaitReplication_inlock() always assumes null minSnapshot"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/0d97768115d093ed0041fff8c0ef39ba30c07e3f", "message": "SERVER-32284 remove ReplicationCoordinator::awaitReplicationOfLastOpForClient()"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/7ed79c16f619cab2195edf9cad37a3c4765c8a23", "message": "SERVER-32284 collMod waits for UUID schema changes using ReplicationCoordinator::awaitReplication() instead of awaitReplicationOfLastOpForClient()"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/f2af0ad889f1cfca7a311d53912c5b808500ea77", "message": "SERVER-29200 remove references to OplogEntry::raw from MultiApplier"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/25f0c6ae6c4fa80244cadb8a6bfcbf9bcc8b7742", "message": "SERVER-29200 migrate SyncTail::getMissingDoc() and fetchAndInsertMissingDoc() to accept OplogEntry instead of BSONObj"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/939a30aba1703c939b0352bded4b56257c8a0bec", "message": "SERVER-29200 add OplogEntry::getOperationToApply()\n\nremove references to OplogEntry::raw from rollback, prefetchPagesForReplicatedOp() and SyncTail"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sulabhM": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/8fd172e330b5af597bfba60d0bb7add8dc1a236c", "message": "SERVER-32506 OSX Mobile SE variant: Tag tests to skip on mobile SE"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "RedBeard0531": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/daf6c4714b45aeb8ba1a09380135b3267c4cc280", "message": "SERVER-32617 Fix code that reconstructs status with just code and string"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/4dc36c7ccb6b5b8f7d865993b5d648fe6dc4b7c7", "message": "SERVER-32684 Make mongos write command objects hold Status directly"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/68b961b28f5dd40501f0ef9b6c6b515ff1ec7cfd", "message": "SERVER-32673 Make WorkingSetCommon::buildMemberStatusObject handle ErrorExtraInfo"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/b165c1e9275016dc15d071d147cec0e5b1bc1f31", "message": "SERVER-32587 Convert StaleConfigException to use ErrorExtraInfo"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/84c3f83421b262028081296e4c387d29691ea376", "message": "SERVER-32586 Convert ResolvedView to use ErrorExtraInfo"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hanumantmk": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/8ee6b3d31756d7939480f1283ec53af3bd6eb489", "message": "SERVER-32683 JS JIT off by default\n\nTurn off the spidermonkey jit by default."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "will62794": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/6f885ea4579c04bd73c4d6fecc497520105f2609", "message": "SERVER-30818 Cleanup comments in background.h"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/aa35454e98a3026a7c44cc736d2326a3fa38e7b3", "message": "SERVER-30818 Add function to await background operations on multiple databases"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kevinAlbs": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/b9decc492c0ff942d5bcd6e8c799de70fa0839af", "message": "SERVER-21630 run CheckReplDBHash on csrs and shard replset\n\nAnd run ValidateCollections hook on priority=0 secondaries."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "elouie99": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/f7d45863daa61920d3b6ee8abbf105833767a223", "message": "SERVER-31628 Always use a python virtualenv in etc/evergreen.yml"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lukech": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/23914068c331a42d1f98de0d58caecf0e391549a", "message": "Import wiredtiger: 357efdd4ce279efc71ff618c59fe1b903ef80bb2 from branch mongodb-3.8\n\nref: 9e50448231..357efdd4ce\nfor: 3.7.2\n\nWT-3565       Test and understand mixed timestamp/no-timestamp usage to same data\nWT-3597       Add a diagnostic check for updates to the same key out of timestamp order\nWT-3632       Increase how granularly cache usage settings can be configured\nWT-3695       format failed to report a stuck cache\nWT-3740       race in page dirty-byte decrement.\nWT-3767       Avoid lookaside instantiation for faster reads\nWT-3775       Improve commit timestamp is older than oldest timestamp error message\nWT-3792       LSM version 1 metadata incompatibility\nWT-3796       Report a better error message if transaction commit fails\nWT-3799       Test/format with timestamps enabled pin cache full\nWT-3809       Fix a bug in lookaside related to birthmarks\nWT-3811       Python scripts for visualizing operation tracking files\nWT-3818       __rec_txn_read() code order cleanup\nWT-3825       Fix calculation of CPU ticks per unit time\nWT-3826       random-abort test failure\nWT-3827       test_compact02 failure\nWT-3828       Link error on OS/X for __wt_process data reference\nWT-3831       uninitialized buffer value in statlog server path comparison\nWT-3832       Fixup shell script warning messages\nWT-3833       test/format cache_minimum value error\nWT-3841       Fix error message pattern in timestamp09\nWT-3842       full-build Friday & lint\nWT-3844       Checkpoints can hang on limbo pages\nWT-3845       Compiler warning in examples using GCC 5.4.0"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kmahar": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/23870b6aecac924a15af49bb7abe2f8e1cda2aa8", "message": "SERVER-30744 Move dropCollection logic from ShardingCatalogClient into ShardingCatalogManager"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kaloianm": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/7f4e454907f14a5a82195d15e6ee96cbcd6d4d5b", "message": "SERVER-32447 Add a mock CatalogCache::getCollectionRoutingInfoAt method\n\nThe added method always returns the routing information at the latest\ntimestamp."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "visualzhou": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/7d2f43adabb344f93ef8bec523efa3187bcf4ce6", "message": "SERVER-32317 Make sharding chunk manipulation operations use doTxn instead of applyOps"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vessy-mongodb": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/35c44dbd37c0167cc07420c8ea286ad6edfac7ff", "message": "SERVER-30347 Fail startup when running wiredTiger with --nojournal as part of a replica set"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "BillyDonahue": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/a8561f9a3775083eaf17e648850791a2cbd37893", "message": "SERVER-32070 remove stdx::bind (final patch)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mtrussotto": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/ef81d53b986aa701c722820a204eba73a635f748", "message": "SERVER-32726 Fix out-of-order error code in update_driver.cpp"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cramaechi": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1203", "title": "[SERVER-32259] Update wiredtiger_util.cpp", "body": "WiredTigerUtil::fetchTypeAndSourceURI() is using\r\ninvariant(colgroupResult.isOK()) instead of\r\ninvariantOK(colgroupResult.getStatus()). This means that if the\r\ninvariant ever fires, we don't know what the bad Status actually was.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "JunHe77": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1202", "title": "SERVER-32576: Merge ARM64 support to use 64-bit optimized code path", "body": "Change-Id: Icd2e0f9378952bbd811b54fe60a7f3895c960e92\r\nSigned-off-by: Jun He <jun.he@arm.com>", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kakts": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1198", "title": "Fix typos in config_server_test_fixture.cpp and dpml_error_codes.c", "body": "## Summary\r\nI found some typos in files as below.\r\n\r\n```\r\nsrc/mongo/s/config_server_test_fixture.cpp\r\nsrc/third_party/IntelRDFPMathLib20U1/LIBRARY/float128/dpml_error_codes.c\r\n```\r\n\r\nreponse  \u2192 response\r\n\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zhihuiFan": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1197", "title": "SERVER-4785 maintain slowms at database level", "body": "See issue at https://jira.mongodb.org/browse/SERVER-4785 and https://jira.mongodb.org/browse/SERVER-18946 \r\n\r\n\r\nHere is the test result.\r\n\r\n\r\nzhifan@zhifan-dev16:~/github/mongo$ ./mongo\r\n> db.getProfilingStatus()\r\n{ \"was\" : 0, \"slowms\" : 100, \"sampleRate\" : 1 }\r\n> db.setProfilingLevel(0, 1)\r\n{ \"was\" : 0, \"slowms\" : 100, \"sampleRate\" : 1, \"ok\" : 1 }\r\n> db.getProfilingStatus()\r\n{ \"was\" : 0, \"slowms\" : 1, \"sampleRate\" : 1 }\r\n> for(var i =0; i<10000; i++) {db.test.save({'i': i})}\r\nWriteResult({ \"nInserted\" : 1 })\r\n> use test2\r\nswitched to db test2\r\n> db.getProfilingStatus()\r\n{ \"was\" : 0, \"slowms\" : 100, \"sampleRate\" : 1 } . -- test 2: still 100\r\n> for(var i =0; i<10000; i++) {db.test.save({'i': i})}\r\nWriteResult({ \"nInserted\" : 1 })\r\n\r\n\r\nas a result:  we capture the slow queries from test database but not for test2 database.\r\n\r\n`\r\n2017-12-26T13:38:32.678+0800 I COMMAND  [conn1] command test.test appName: \"MongoDB Shell\" command: insert { insert: \"test\", ordered: true, $db: \"test\" } ninserted:1 keysInserted:1 numYields:0 reslen:29 locks:{ Global: { acquireCount: { r: 3, w: 1 } }, Database: { acquireCount: { w: 1, R: 1 } }, Collection: { acquireCount: { w: 1 } } } protocol:op_msg 3ms\r\n\r\n`\r\n\r\n  ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bmanojlovic": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1195", "title": "initial scons 3.0.1 and python3 build support", "body": "This PR allows building mongo with use of latest (3.0.1) scons which now uses python3 by default.\r\nThere are still a lot of rough edges but on the end it allows building binary mongod\r\n\r\npython version:\r\n```\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> python3 --version\r\nPython 3.6.3\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> \r\n```\r\nscons version:\r\n```\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> scons -v\r\nSCons by Steven Knight et al.:\r\n        script: v3.0.1.74b2c53bc42290e911b334a6b44f187da698a668, 2017/11/14 13:16:53, by bdbaddog on hpmicrodog\r\n        engine: v3.0.1.74b2c53bc42290e911b334a6b44f187da698a668, 2017/11/14 13:16:53, by bdbaddog on hpmicrodog\r\n        engine path: ['/usr/lib/scons-3.0.1/SCons']\r\nCopyright (c) 2001 - 2017 The SCons Foundation\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched>\r\n```\r\nand finally running scons on my machine\r\n```\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> scons -j 8 MONGO_VERSION=3.6.0  --disable-warnings-as-errors  --ssl\r\nscons: Reading SConscript files ...\r\nMkdir(\"build/scons\")\r\nscons version: 3.0.1\r\npython version: 3 6 3 final 0\r\nChecking whether the C compiler works... yes\r\nChecking whether the C++ compiler works... yes\r\n...\r\n...\r\n...\r\nranlib build/blah/mongo/db/query/libquery_common.a\r\nGenerating library build/blah/mongo/db/libmongod_options.a\r\nranlib build/blah/mongo/db/libmongod_options.a\r\nLinking build/blah/mongo/mongod\r\nInstall file: \"build/blah/mongo/mongod\" as \"mongod\"\r\nscons: done building targets.\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> \r\n```\r\nand of course running built binary\r\n```\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> ./mongod --dbpath /tmp/ --bind_ip 127.0.0.1\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] MongoDB starting : pid=2937 port=27017 dbpath=/tmp/ 64-bit host=pc\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] db version v3.6.0\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] git version: 9038d0a67ee578aa68ef8482b1fc98750d1007a6\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] OpenSSL version: OpenSSL 1.1.0g-fips  2 Nov 2017\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] allocator: tcmalloc\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] modules: none\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] build environment:\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten]     distarch: x86_64\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten]     target_arch: x86_64\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] options: { net: { bindIp: \"127.0.0.1\" }, storage: { dbPath: \"/tmp/\" } }\r\n2017-12-22T18:52:02.566+0000 I STORAGE  [initandlisten] Detected data files in /tmp/ created by the 'wiredTiger' storage engine, so setting the active storage engine to 'wiredTiger'.\r\n2017-12-22T18:52:02.566+0000 I STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=15542M,session_max=20000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000),statistics_log=(wait=0),verbose=(recovery_progress),\r\n2017-12-22T18:52:02.637+0000 I STORAGE  [initandlisten] WiredTiger message [1513968722:637511][2937:0x7f87663729c0], txn-recover: Main recovery loop: starting at 6/4736\r\n2017-12-22T18:52:02.679+0000 I STORAGE  [initandlisten] WiredTiger message [1513968722:679111][2937:0x7f87663729c0], txn-recover: Recovering log 6 through 7\r\n2017-12-22T18:52:02.706+0000 I STORAGE  [initandlisten] WiredTiger message [1513968722:706386][2937:0x7f87663729c0], txn-recover: Recovering log 7 through 7\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] ** WARNING: /sys/kernel/mm/transparent_hugepage/enabled is 'always'.\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] **        We suggest setting it to 'never'\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] ** WARNING: soft rlimits too low. rlimits set to 4096 processes, 64000 files. Number of processes should be at least 32000 : 0.5 times number of files.\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.736+0000 I FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory '/tmp/diagnostic.data'\r\n2017-12-22T18:52:02.737+0000 I NETWORK  [initandlisten] waiting for connections on port 27017\r\n```\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "m-masataka": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1191", "title": "The GCC version should be updated in SConstruct", "body": "In ``docs/building.md`` , It require GCC version 5.4.0 or newer, but ``SConstruct`` require 5.3.0 or newer.\r\nIs it mistake? ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "judu": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1186", "title": "Fix build.", "body": "Without these using `std::string`, mongodb does not build here.\r\n\r\nI'm using gcc 6.4.0.\r\n\r\nPlease ask if you need more information about my build :)", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zydcom": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1171", "title": "SERVER-30636\uff1afix range deleter crash", "body": "This patch can be also used for v3.2 ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ryankall": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1169", "title": "Server 25311", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/1140", "title": "Verbosity bug", "body": "now the Explain command will not accept unknown command like verbos: 'queryPlanner'", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lorien": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1162", "title": "Fix error in command example in mongorestore.1 man", "body": "The trailing slash argument is missing in mongorestore command example in debian mans.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "SunguckLee": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1151", "title": "Support prefix match for full-text search", "body": "Add range search feature on full text search (original version has only exact match)\r\n\r\nFor CJK language, mongodb does not support stemmer for full text search.\r\nAlso not easy to implement stemmer for those language (Especially Korean).\r\nSo we usually use N-gram parser for full text search not supported mongodb yet.\r\n\r\nFortunately in Korean, we use space character between words and Korean(and also Japanese) use only suffix not prefix. So we can use mongodb full text search if mongodb support prefix match in fulltext. So I propose this simple feature.\r\n\r\n>> Match range of original fulltext search\r\n    * '\ud55c\uae00' <= match_range <= '\ud55c\uae00'\r\n    * '\ud14c\uc2a4\ud2b8' <= match_range <= '\ud14c\uc2a4\ud2b8'\r\n    * '\uc774\uc131' <= match_range <= '\uc774\uc131'\r\n    * '\ud55c' <= match_range <= '\ud55c'\r\n\r\n>> Match range of patched fulltext search\r\n    * '\ud55c\uae00' <= match_range < '\ud55c\uae01'\r\n    * '\ud14c\uc2a4\ud2b8' <= match_range < '\ud14c\uc2a4\ud2b9'\r\n    * '\uc774\uc131' <= match_range < '\uc774\uc132'\r\n    * '\ud55c' <= match_range < '\ud55d'\r\n\r\nI hope user can control this search mode (exact or prefix match) by query parameter or internal parameter.\r\n\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sam-pf": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1149", "title": "change log message for CRL loading", "body": "The log message from _setupCRL was misleading.  It is not the number of revoked certificates that X509_load_crl_file returns.  It is the number of CRLs (X509_CRL structures) that it successfully loads that it returns.\r\n\r\nhttps://github.com/openssl/openssl/blob/c0452248ea1a59a41023a4765ef7d9825e80a62b/crypto/x509/by_file.c\r\n\r\nhttp://www.umich.edu/~x509/ssleay/x509_crls.html\r\n  ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nleite": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1136", "title": "SERVER-1889 internal replication nic", "body": "- support for internal replication nic", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kolisergej": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1128", "title": "[SERVER-8958] Replace strtod/strtol/atoi/atol/etc calls with parseNumberFromString<T>", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ZharkovIlia": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1122", "title": "General Improvements v2", "body": "Elimination of some redundancy. Some function arguments are passed by reference. Few bugs are fixed.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "thesebas": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1121", "title": "Fix for negative Date timezone offsets ", "body": "When uncommented this `// print a non-UTC time` block and changed `var UTC = '';` got invalid timezone offsets like: `ISODate(\"2016-11-14T00:00:00+-100\")`. This makes Date be displayed as `ISODate(\"2016-11-14T00:00:00+0100\")`", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "danharel": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1093", "title": "SERVER-24519 Added framework for micro benchmark tools", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Soullivaneuh": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1061", "title": "[WIP] [3.x] Alpine linux compatibility", "body": "Same as #1060 but for 3.x version.\n- [x] alpine-release on processinfo\n- [x] Fix `'ELFCLASS__ELF_NATIVE_CLASS' was not declared in this scope`\n- [x] Fix `gnu_get_libc_version` usage that does not exist on Musl\n- [x] Fix undefined `mallinfo` function\n- [x] error_code.ipp:110:22: error: could not convert 'strerror_r(value, ((char*)(& buf)), sizeof (buf))' from 'int' to 'std::__cxx11::string {aka std::__cxx11::basic_string<char>}\n  - https://github.com/chriskohlhoff/asio/pull/95\n- [ ] `third_party/gperftools-2.2`: `error: '__off64_t' has not been declared`\n  - https://github.com/gperftools/gperftools/issues/693\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "salessandri": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1027", "title": "SERVER-8839 TimerStats and TimerHolder should work with microseconds.", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "e-siedler": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/275", "title": "SERVER-2541 Windows performance counters implemented", "body": "Fully functional windows performance counters imlpemented as a mongod.exe Module.\n\nSee README. See jira SERVER-2541 for some additional notes.\n- No Visual Studio project file have been updated. (I can't do that with VS Express).\n- I didn't make use of this new \"buildscripts/moduleconfig.py\" infrastructure mostly because of my incompetence: new to scons, new to python, didn't like both. 8-)\n- There is a new artifact that needs to be distributed along with mongod.exe: mongod.man. I didn't look into that (packaging).\n\nThanks\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bgianfo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/501190", "body": "Not sure what the deal is, but I made a last minute change before I committed, breaking this patch. \nhttp://github.com/bgianfo/mongo/commit/dc2c046c95c2b9ae8d2ec9f0d26987951437d502#diff-0\n\nPulling this commit also, you have the complete working package. :)\n\nI would add it to the pull request, but github seems to have made that impossible? \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/501190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "halfdan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/597405", "body": "When will this get integrated? Any feedback?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/597405/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "erh": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/662702", "body": "We're going to start including a minimal set of boost in the source tree to avoid conflicts and too much branching in the code.\nThat will be in the 2.0 cycle and should be boost 1.45, so not sure we want to do this right now, especially right before 1.8.0\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/662702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724077", "body": "Couple of notes: \n- we're not going to change the type from number to string\n- names should be consistent between dbstats/collstats\n- keeping commit log clean is important\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724094", "body": "dbstats already has a named value for this option, so you should use the same one.\n\nre: the commit stream, each commit should be a logical unit, but we also want to keep the number reasonable.  There are 9 listed above (though i guess really only 7)\nFor example, if you change a command, the change to the shell should be in the same commit.\n\nWe're in lockdown for 1.8, so will be a while before we would merge this in, and not sure this is exactly where we'll want to go with it.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742853", "body": "I'm seeing about a 10% improvement.\nThe problem is that Array doesn't currently require the elements to be in order.\nIn fact some implementations have it like this\n{ \"0\" : 1 , \"1\" : 1 , \"10\" : 10 , \"2\" : 2 , ... }\n So this patch will break some clients.\nThere is a more complex patch you could do which verifies the order while iterating.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742895", "body": "No, the spec doesn't say it has to be in order.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742895/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742903", "body": "I did this:\nhttps://github.com/mongodb/mongo/commit/cd834438e55086442b264dfc6cc9425d8a34f0bd\n\nWhich is about 80% of the improvement\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1086311", "body": "Can you break these into different parts?\nSome look ok, others not so sure about (FuncMap for example)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1086311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103470", "body": "Right, but there seem to be others that are unrelated.\nWould just be better if we can make each logical change separate.\n\nOn Wed, May 4, 2011 at 10:55 PM, testn\nreply@reply.github.com\nwrote:\n\n> funcMap has to be there to help perform function lookup\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/pull/35#issuecomment-1103444\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103470/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1272158", "body": "There are a few issues that I see at first glance.\n\n1) why did you remove the sparse check\n2) your'e not checking the type of \"filter\" correctly\n3) _matcher leaks - should be a scoped_ptr\n4) i don't think the queryoptimizer change is correct\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1272158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1430432", "body": "Fixed using the helper.\nThanks for pointing out\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1430432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676120", "body": "Is there a reason you put slaveOk in the middle rather than the end so we can preserve backwards compatibility?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "adrien-mogenet": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724088", "body": "Ok Erh !\n- I had a doubt about keeping the types ; I will keep numbers when displaying raw values as currently\n- What do you mean about \"consistent names between dbstats/collstats\" ? I didn't change anything... ( I think )\n- Which rule did I not follow about commit log messages ? According to the doc (http://www.mongodb.org/display/DOCS/Git+Commit+Rules) : I have to put [SERVER-XXX] on every commit ?\n\nThanks,\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724088/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "testn": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742681", "body": "With simple M/R such as collection count/max/min, the execution time can be cut in half\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742681/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742879", "body": "But this method is the conversion from BSONObj to jsval. Shouldn't BSONObj with Array type be in order according to the specification?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742879/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742912", "body": "That would work. \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103444", "body": "funcMap has to be there to help perform function lookup\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103444/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103889", "body": "okay. will rebranch it again and put the link\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103889/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "zippy1981": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/787400", "body": "WOO-HOO!!!!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/787400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "s4y": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/875296", "body": "I just changed the contents of this pull request slightly. Somehow managed to fudge up a one-line fix!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/875296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1505577", "body": "Looks like this was fixed in e27fa36b4c47b277b6e140f641a1187b712d99ca. Cool!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1505577/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "radarek": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1021120", "body": "Guys, what is the progress of that? MongoDB needs count + distinct :).\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1021120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "defunctzombie": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1106255", "body": "Is there a reason this isn't being accepted? It is low risk while adding a desired build functionality.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1106255/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mattbillenstein": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1216540", "body": "Also added a commit to allow mongorestore to use \"-\" as stdin when given both --db and --collection\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1216540/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "JensRantil": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1248211", "body": "The above commented small fixes were now added to this pull request. Feel free to include whenever you want to.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1248211/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lqs": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1279530", "body": "@erh\n\ni think the sparse assertion is useless because _nFields always > 0. and the sparse index can be created even if there's two or more fields.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1279530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mrohnstock": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1386332", "body": "Since 2010 this don't get included to mongodb c++ driver. Is there any other way to get the double field from BSONObj?\n\nUsed: bsonobj.getField(\"whatever\").Double(), but will end with assereration error.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1386332/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1388754", "body": "forget it... bsonobj.getField(\"whatever\").numberDouble() did the trick, got another mistake in code - just ignore my input.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1388754/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lqez": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1414175", "body": "Wow, I _really_ need these cool patches.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1414175/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "plaes": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1586684", "body": "How about this?\n\n```\nelif os.sys.platform in ('linux2', 'linux3'):\n```\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1586684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "dwight": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/165991", "body": "use unique_ptr here\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/165991/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "tadmarshall": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/166291", "body": "This was part of my fixing the memory leak in the shell.  The problem was\nthat memory was allocated by strdup() and never freed.  Since strdup() calls\nmalloc(), I added matching free() calls.  This bit of code is on the #else\nside of an #ifdef USE_LINENOISE and so isn't in the current code, but if\nUSE_LINENOISE was turned off then the call to \"new char[1024]\" would end up\ngetting passed to free() and it seemed better to match malloc() with free()\ninstead of new with free().  Without changing the entire way this memory is\nallocated and freed (a bigger change) I can't just use unique_ptr in one\nspot.  strdup() calls malloc() and I can't switch to unique_ptr without\nreplacing the strdup() calls.  I was trying to make minimal changes to fix\nthe memory leak.\n\n-----Original Message-----\nFrom: Dwight Merriman\n[mailto:reply+p-165991-d7ea43fd753410cd3421867a9c1b3e0d018a6daf@reply.github\n.com] \nSent: Wednesday, October 12, 2011 1:50 AM\nTo: Tad Marshall\nSubject: Re: [mongo] SERVER-4043 -- fix tab completion in mid-code (#110)\n\n> @@ -313,7 +315,7 @@ char \\* shellReadline( const char \\* prompt , int\n> handlesigint = 0 ) {\n>      return ret;\n>  #else\n>      printf(\"%s\", prompt); cout.flush();\n> -    char \\* buf = new char[1024];\n\nuse unique_ptr here\n\n## \n\nReply to this email directly or view it on GitHub:\nhttps://github.com/mongodb/mongo/pull/110/files#r165991\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/166291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "hoffrocket": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/196130", "body": "should be \"return LOG_INFO;\"\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/196130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/196132", "body": "pragram ->  program\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/196132/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "amschwerin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660497", "body": "For exception safety, use a boost::scoped_ptr to hold the result of readDocument().\n\nboost::scoped_ptr<BSONObj> o(readDocument(file, buf, BUF_SIZE));\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660497/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660503", "body": "This function should not be inlined.  Implement it in the cpp file.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660503/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660530", "body": "Ditto on scoped_ptr, here.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676654", "body": "(1) Inlining it won't help performance.\n(2) Inlining it will increase the binary size.\n(3) Inlining it means that any time it changes, all modules that include tool.h must be recompiled, which slows down incremental compilation.  This is important to developers.\n\nSo, it does two bad things and no good things.  Don't inline it.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676654/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/694609", "body": "In the event that the file is truncated, the old code would alert for failure in the event that the input file was truncated, and did not contain an even multiple of 4 bytes.  This change will silently stop processing, which is a behavior change.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/694609/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/694614", "body": "\"isFifoFile\", instead of \"fifo\".\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/694614/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/774347", "body": "Thanks for pinging.  Will look again.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/774347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/794711", "body": "Haven't forgotten.  Really swamped over here.\n\nOn Fri, May 4, 2012 at 8:36 AM, Azat Khuzhin\nreply@reply.github.com\nwrote:\n\n> > \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0size_t amt = fread(buf, 1, 4, file);\n> > - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0// end of fifo/file\n> > - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0if ( feof(file) ) {\n> > - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0break;\n> \n> @andy10gen ?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/pull/205/files#r773788\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/794711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935900", "body": "I think this needs to default to None, or on systems where \"g++\" is not the default compiler, builds will fail when --cxx is not specified.  I.e., Windows/MSVC systems.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935900/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935902", "body": "Again, default to None.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935912", "body": "Though we haven't been very consistent in the past, SConstruct files are python code, and should follow PEP-8 style.\n\nconf.env.Replace(CXX=GetOption(\"cxx\"))\n\nNote where whitespace has been removed.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935918", "body": "I think I'd rather omit these print statements.  If we want to report which compilers are being used, we should do that separately from option setting.  The compiler command line and link flags show up in the output, anyways.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935918/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "azat": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/664362", "body": "Why it should?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/664362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/699717", "body": "@andy10gen, it will fail at https://github.com/mongodb/mongo/pull/205/files#L1R549 ( `m.done() == fileLength` ). Is it enough?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/699717/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/773788", "body": "@andy10gen ?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/773788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "onyxmaster": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676141", "body": "No particular reason, I justified its placement on the basis that GridFile constructor is private so existing code shouldn't be broken by this change (the default value is not provided for the same reason), and that slaveOk felt to me as something immutable and should be close to another immutable (grid) both in field definitions (line 200 below) and the argument list.\nIf you feel that GridFile constructor might become protected or public some day, I agree with you that slaveOk should be placed at the end and, probably have the default false value added.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676142", "body": "If you prefer, I can make changes on my end and update the pull request, just tell me.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676142/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "milkie": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757112", "body": "I think we'll need to actually create the file on first use, rather than requesting the user do it.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757112/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757116", "body": "Also we should put in a link to the new documentation site and a mention of the mongo-users google group.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757116/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757123", "body": "_isatty() instead?  we already use it in util/log.cpp\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757123/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "lcapaldo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757185", "body": "Just put #define isatty _isatty in platform/windows?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757190", "body": "Yeah I can do both these things.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "cwestin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764933", "body": "I think $strlen on a nonexistent field should return zero.  This fits the operation of other operators, which are as forgiving as possible unless the result is definitively wrong.  Here, I think it makes sense to treat this as an empty string.  However, I think it should be an error to call $strlen on a real field that does not contain a string value.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764933/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764939", "body": "Why did you remove these assertions?  Since they seem to work for everyone else, it's safer to first assume there's something wrong on your setup, and that we should figure out what that is.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764939/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764972", "body": "Before this, I would check for pString.get() being NULL, or pString.getType() == jstNULL (from bson/bsontypes.h).  If either of those is true, return Value::getZero().  That will handle returning zero for a non-existent or null valued field.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}}, "6": {"GeertBosch": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/3020767b4a20fca53d4b58b440085933c8eb7c3e", "message": "SERVER-32606 Oplog read time may only decrease during rollback"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "henrikingo": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/086cec19cbd0f0a4a122d4cfa6f099dbaa2ef21d", "message": "SERVER-32260 Call workload_setup.py from system_perf.yml and longevity.yml"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "benety": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/7713d5531c663603d17fff1267d013e0b6867e5b", "message": "SERVER-32284 rename ReplicationCoordinator::reserveSnapshotName() to getMinimumVisibleSnapshot()"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/25b7af8b7367de11f0d4d864bd6a51983227c494", "message": "SERVER-32284 remove unused last snapshot support from ReplClientInfo"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/13a33d961f6936dc8290b8bb80f5c5b9e599f0a9", "message": "SERVER-32284 ReplicationCoordinatorImpl::_doneWaitingForReplication_inlock() always assumes null minSnapshot"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/d071ff8278abcd05d63c0367c49284645e844bcc", "message": "SERVER-32284 ReplicationCoordinatorImpl::_awaitReplication_inlock() always assumes null minSnapshot"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/0d97768115d093ed0041fff8c0ef39ba30c07e3f", "message": "SERVER-32284 remove ReplicationCoordinator::awaitReplicationOfLastOpForClient()"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/7ed79c16f619cab2195edf9cad37a3c4765c8a23", "message": "SERVER-32284 collMod waits for UUID schema changes using ReplicationCoordinator::awaitReplication() instead of awaitReplicationOfLastOpForClient()"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/f2af0ad889f1cfca7a311d53912c5b808500ea77", "message": "SERVER-29200 remove references to OplogEntry::raw from MultiApplier"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/25f0c6ae6c4fa80244cadb8a6bfcbf9bcc8b7742", "message": "SERVER-29200 migrate SyncTail::getMissingDoc() and fetchAndInsertMissingDoc() to accept OplogEntry instead of BSONObj"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/939a30aba1703c939b0352bded4b56257c8a0bec", "message": "SERVER-29200 add OplogEntry::getOperationToApply()\n\nremove references to OplogEntry::raw from rollback, prefetchPagesForReplicatedOp() and SyncTail"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sulabhM": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/8fd172e330b5af597bfba60d0bb7add8dc1a236c", "message": "SERVER-32506 OSX Mobile SE variant: Tag tests to skip on mobile SE"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "RedBeard0531": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/daf6c4714b45aeb8ba1a09380135b3267c4cc280", "message": "SERVER-32617 Fix code that reconstructs status with just code and string"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/4dc36c7ccb6b5b8f7d865993b5d648fe6dc4b7c7", "message": "SERVER-32684 Make mongos write command objects hold Status directly"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/68b961b28f5dd40501f0ef9b6c6b515ff1ec7cfd", "message": "SERVER-32673 Make WorkingSetCommon::buildMemberStatusObject handle ErrorExtraInfo"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/b165c1e9275016dc15d071d147cec0e5b1bc1f31", "message": "SERVER-32587 Convert StaleConfigException to use ErrorExtraInfo"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/84c3f83421b262028081296e4c387d29691ea376", "message": "SERVER-32586 Convert ResolvedView to use ErrorExtraInfo"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hanumantmk": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/8ee6b3d31756d7939480f1283ec53af3bd6eb489", "message": "SERVER-32683 JS JIT off by default\n\nTurn off the spidermonkey jit by default."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "will62794": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/6f885ea4579c04bd73c4d6fecc497520105f2609", "message": "SERVER-30818 Cleanup comments in background.h"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/aa35454e98a3026a7c44cc736d2326a3fa38e7b3", "message": "SERVER-30818 Add function to await background operations on multiple databases"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kevinAlbs": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/b9decc492c0ff942d5bcd6e8c799de70fa0839af", "message": "SERVER-21630 run CheckReplDBHash on csrs and shard replset\n\nAnd run ValidateCollections hook on priority=0 secondaries."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "elouie99": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/f7d45863daa61920d3b6ee8abbf105833767a223", "message": "SERVER-31628 Always use a python virtualenv in etc/evergreen.yml"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lukech": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/23914068c331a42d1f98de0d58caecf0e391549a", "message": "Import wiredtiger: 357efdd4ce279efc71ff618c59fe1b903ef80bb2 from branch mongodb-3.8\n\nref: 9e50448231..357efdd4ce\nfor: 3.7.2\n\nWT-3565       Test and understand mixed timestamp/no-timestamp usage to same data\nWT-3597       Add a diagnostic check for updates to the same key out of timestamp order\nWT-3632       Increase how granularly cache usage settings can be configured\nWT-3695       format failed to report a stuck cache\nWT-3740       race in page dirty-byte decrement.\nWT-3767       Avoid lookaside instantiation for faster reads\nWT-3775       Improve commit timestamp is older than oldest timestamp error message\nWT-3792       LSM version 1 metadata incompatibility\nWT-3796       Report a better error message if transaction commit fails\nWT-3799       Test/format with timestamps enabled pin cache full\nWT-3809       Fix a bug in lookaside related to birthmarks\nWT-3811       Python scripts for visualizing operation tracking files\nWT-3818       __rec_txn_read() code order cleanup\nWT-3825       Fix calculation of CPU ticks per unit time\nWT-3826       random-abort test failure\nWT-3827       test_compact02 failure\nWT-3828       Link error on OS/X for __wt_process data reference\nWT-3831       uninitialized buffer value in statlog server path comparison\nWT-3832       Fixup shell script warning messages\nWT-3833       test/format cache_minimum value error\nWT-3841       Fix error message pattern in timestamp09\nWT-3842       full-build Friday & lint\nWT-3844       Checkpoints can hang on limbo pages\nWT-3845       Compiler warning in examples using GCC 5.4.0"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kmahar": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/23870b6aecac924a15af49bb7abe2f8e1cda2aa8", "message": "SERVER-30744 Move dropCollection logic from ShardingCatalogClient into ShardingCatalogManager"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kaloianm": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/7f4e454907f14a5a82195d15e6ee96cbcd6d4d5b", "message": "SERVER-32447 Add a mock CatalogCache::getCollectionRoutingInfoAt method\n\nThe added method always returns the routing information at the latest\ntimestamp."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "visualzhou": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/7d2f43adabb344f93ef8bec523efa3187bcf4ce6", "message": "SERVER-32317 Make sharding chunk manipulation operations use doTxn instead of applyOps"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vessy-mongodb": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/35c44dbd37c0167cc07420c8ea286ad6edfac7ff", "message": "SERVER-30347 Fail startup when running wiredTiger with --nojournal as part of a replica set"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "BillyDonahue": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/a8561f9a3775083eaf17e648850791a2cbd37893", "message": "SERVER-32070 remove stdx::bind (final patch)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mtrussotto": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/ef81d53b986aa701c722820a204eba73a635f748", "message": "SERVER-32726 Fix out-of-order error code in update_driver.cpp"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cramaechi": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1203", "title": "[SERVER-32259] Update wiredtiger_util.cpp", "body": "WiredTigerUtil::fetchTypeAndSourceURI() is using\r\ninvariant(colgroupResult.isOK()) instead of\r\ninvariantOK(colgroupResult.getStatus()). This means that if the\r\ninvariant ever fires, we don't know what the bad Status actually was.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "JunHe77": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1202", "title": "SERVER-32576: Merge ARM64 support to use 64-bit optimized code path", "body": "Change-Id: Icd2e0f9378952bbd811b54fe60a7f3895c960e92\r\nSigned-off-by: Jun He <jun.he@arm.com>", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kakts": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1198", "title": "Fix typos in config_server_test_fixture.cpp and dpml_error_codes.c", "body": "## Summary\r\nI found some typos in files as below.\r\n\r\n```\r\nsrc/mongo/s/config_server_test_fixture.cpp\r\nsrc/third_party/IntelRDFPMathLib20U1/LIBRARY/float128/dpml_error_codes.c\r\n```\r\n\r\nreponse  \u2192 response\r\n\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zhihuiFan": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1197", "title": "SERVER-4785 maintain slowms at database level", "body": "See issue at https://jira.mongodb.org/browse/SERVER-4785 and https://jira.mongodb.org/browse/SERVER-18946 \r\n\r\n\r\nHere is the test result.\r\n\r\n\r\nzhifan@zhifan-dev16:~/github/mongo$ ./mongo\r\n> db.getProfilingStatus()\r\n{ \"was\" : 0, \"slowms\" : 100, \"sampleRate\" : 1 }\r\n> db.setProfilingLevel(0, 1)\r\n{ \"was\" : 0, \"slowms\" : 100, \"sampleRate\" : 1, \"ok\" : 1 }\r\n> db.getProfilingStatus()\r\n{ \"was\" : 0, \"slowms\" : 1, \"sampleRate\" : 1 }\r\n> for(var i =0; i<10000; i++) {db.test.save({'i': i})}\r\nWriteResult({ \"nInserted\" : 1 })\r\n> use test2\r\nswitched to db test2\r\n> db.getProfilingStatus()\r\n{ \"was\" : 0, \"slowms\" : 100, \"sampleRate\" : 1 } . -- test 2: still 100\r\n> for(var i =0; i<10000; i++) {db.test.save({'i': i})}\r\nWriteResult({ \"nInserted\" : 1 })\r\n\r\n\r\nas a result:  we capture the slow queries from test database but not for test2 database.\r\n\r\n`\r\n2017-12-26T13:38:32.678+0800 I COMMAND  [conn1] command test.test appName: \"MongoDB Shell\" command: insert { insert: \"test\", ordered: true, $db: \"test\" } ninserted:1 keysInserted:1 numYields:0 reslen:29 locks:{ Global: { acquireCount: { r: 3, w: 1 } }, Database: { acquireCount: { w: 1, R: 1 } }, Collection: { acquireCount: { w: 1 } } } protocol:op_msg 3ms\r\n\r\n`\r\n\r\n  ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bmanojlovic": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1195", "title": "initial scons 3.0.1 and python3 build support", "body": "This PR allows building mongo with use of latest (3.0.1) scons which now uses python3 by default.\r\nThere are still a lot of rough edges but on the end it allows building binary mongod\r\n\r\npython version:\r\n```\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> python3 --version\r\nPython 3.6.3\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> \r\n```\r\nscons version:\r\n```\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> scons -v\r\nSCons by Steven Knight et al.:\r\n        script: v3.0.1.74b2c53bc42290e911b334a6b44f187da698a668, 2017/11/14 13:16:53, by bdbaddog on hpmicrodog\r\n        engine: v3.0.1.74b2c53bc42290e911b334a6b44f187da698a668, 2017/11/14 13:16:53, by bdbaddog on hpmicrodog\r\n        engine path: ['/usr/lib/scons-3.0.1/SCons']\r\nCopyright (c) 2001 - 2017 The SCons Foundation\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched>\r\n```\r\nand finally running scons on my machine\r\n```\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> scons -j 8 MONGO_VERSION=3.6.0  --disable-warnings-as-errors  --ssl\r\nscons: Reading SConscript files ...\r\nMkdir(\"build/scons\")\r\nscons version: 3.0.1\r\npython version: 3 6 3 final 0\r\nChecking whether the C compiler works... yes\r\nChecking whether the C++ compiler works... yes\r\n...\r\n...\r\n...\r\nranlib build/blah/mongo/db/query/libquery_common.a\r\nGenerating library build/blah/mongo/db/libmongod_options.a\r\nranlib build/blah/mongo/db/libmongod_options.a\r\nLinking build/blah/mongo/mongod\r\nInstall file: \"build/blah/mongo/mongod\" as \"mongod\"\r\nscons: done building targets.\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> \r\n```\r\nand of course running built binary\r\n```\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> ./mongod --dbpath /tmp/ --bind_ip 127.0.0.1\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] MongoDB starting : pid=2937 port=27017 dbpath=/tmp/ 64-bit host=pc\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] db version v3.6.0\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] git version: 9038d0a67ee578aa68ef8482b1fc98750d1007a6\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] OpenSSL version: OpenSSL 1.1.0g-fips  2 Nov 2017\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] allocator: tcmalloc\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] modules: none\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] build environment:\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten]     distarch: x86_64\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten]     target_arch: x86_64\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] options: { net: { bindIp: \"127.0.0.1\" }, storage: { dbPath: \"/tmp/\" } }\r\n2017-12-22T18:52:02.566+0000 I STORAGE  [initandlisten] Detected data files in /tmp/ created by the 'wiredTiger' storage engine, so setting the active storage engine to 'wiredTiger'.\r\n2017-12-22T18:52:02.566+0000 I STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=15542M,session_max=20000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000),statistics_log=(wait=0),verbose=(recovery_progress),\r\n2017-12-22T18:52:02.637+0000 I STORAGE  [initandlisten] WiredTiger message [1513968722:637511][2937:0x7f87663729c0], txn-recover: Main recovery loop: starting at 6/4736\r\n2017-12-22T18:52:02.679+0000 I STORAGE  [initandlisten] WiredTiger message [1513968722:679111][2937:0x7f87663729c0], txn-recover: Recovering log 6 through 7\r\n2017-12-22T18:52:02.706+0000 I STORAGE  [initandlisten] WiredTiger message [1513968722:706386][2937:0x7f87663729c0], txn-recover: Recovering log 7 through 7\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] ** WARNING: /sys/kernel/mm/transparent_hugepage/enabled is 'always'.\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] **        We suggest setting it to 'never'\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] ** WARNING: soft rlimits too low. rlimits set to 4096 processes, 64000 files. Number of processes should be at least 32000 : 0.5 times number of files.\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.736+0000 I FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory '/tmp/diagnostic.data'\r\n2017-12-22T18:52:02.737+0000 I NETWORK  [initandlisten] waiting for connections on port 27017\r\n```\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "m-masataka": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1191", "title": "The GCC version should be updated in SConstruct", "body": "In ``docs/building.md`` , It require GCC version 5.4.0 or newer, but ``SConstruct`` require 5.3.0 or newer.\r\nIs it mistake? ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "judu": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1186", "title": "Fix build.", "body": "Without these using `std::string`, mongodb does not build here.\r\n\r\nI'm using gcc 6.4.0.\r\n\r\nPlease ask if you need more information about my build :)", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zydcom": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1171", "title": "SERVER-30636\uff1afix range deleter crash", "body": "This patch can be also used for v3.2 ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ryankall": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1169", "title": "Server 25311", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/1140", "title": "Verbosity bug", "body": "now the Explain command will not accept unknown command like verbos: 'queryPlanner'", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lorien": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1162", "title": "Fix error in command example in mongorestore.1 man", "body": "The trailing slash argument is missing in mongorestore command example in debian mans.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "SunguckLee": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1151", "title": "Support prefix match for full-text search", "body": "Add range search feature on full text search (original version has only exact match)\r\n\r\nFor CJK language, mongodb does not support stemmer for full text search.\r\nAlso not easy to implement stemmer for those language (Especially Korean).\r\nSo we usually use N-gram parser for full text search not supported mongodb yet.\r\n\r\nFortunately in Korean, we use space character between words and Korean(and also Japanese) use only suffix not prefix. So we can use mongodb full text search if mongodb support prefix match in fulltext. So I propose this simple feature.\r\n\r\n>> Match range of original fulltext search\r\n    * '\ud55c\uae00' <= match_range <= '\ud55c\uae00'\r\n    * '\ud14c\uc2a4\ud2b8' <= match_range <= '\ud14c\uc2a4\ud2b8'\r\n    * '\uc774\uc131' <= match_range <= '\uc774\uc131'\r\n    * '\ud55c' <= match_range <= '\ud55c'\r\n\r\n>> Match range of patched fulltext search\r\n    * '\ud55c\uae00' <= match_range < '\ud55c\uae01'\r\n    * '\ud14c\uc2a4\ud2b8' <= match_range < '\ud14c\uc2a4\ud2b9'\r\n    * '\uc774\uc131' <= match_range < '\uc774\uc132'\r\n    * '\ud55c' <= match_range < '\ud55d'\r\n\r\nI hope user can control this search mode (exact or prefix match) by query parameter or internal parameter.\r\n\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sam-pf": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1149", "title": "change log message for CRL loading", "body": "The log message from _setupCRL was misleading.  It is not the number of revoked certificates that X509_load_crl_file returns.  It is the number of CRLs (X509_CRL structures) that it successfully loads that it returns.\r\n\r\nhttps://github.com/openssl/openssl/blob/c0452248ea1a59a41023a4765ef7d9825e80a62b/crypto/x509/by_file.c\r\n\r\nhttp://www.umich.edu/~x509/ssleay/x509_crls.html\r\n  ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nleite": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1136", "title": "SERVER-1889 internal replication nic", "body": "- support for internal replication nic", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kolisergej": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1128", "title": "[SERVER-8958] Replace strtod/strtol/atoi/atol/etc calls with parseNumberFromString<T>", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ZharkovIlia": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1122", "title": "General Improvements v2", "body": "Elimination of some redundancy. Some function arguments are passed by reference. Few bugs are fixed.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "thesebas": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1121", "title": "Fix for negative Date timezone offsets ", "body": "When uncommented this `// print a non-UTC time` block and changed `var UTC = '';` got invalid timezone offsets like: `ISODate(\"2016-11-14T00:00:00+-100\")`. This makes Date be displayed as `ISODate(\"2016-11-14T00:00:00+0100\")`", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "danharel": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1093", "title": "SERVER-24519 Added framework for micro benchmark tools", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Soullivaneuh": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1061", "title": "[WIP] [3.x] Alpine linux compatibility", "body": "Same as #1060 but for 3.x version.\n- [x] alpine-release on processinfo\n- [x] Fix `'ELFCLASS__ELF_NATIVE_CLASS' was not declared in this scope`\n- [x] Fix `gnu_get_libc_version` usage that does not exist on Musl\n- [x] Fix undefined `mallinfo` function\n- [x] error_code.ipp:110:22: error: could not convert 'strerror_r(value, ((char*)(& buf)), sizeof (buf))' from 'int' to 'std::__cxx11::string {aka std::__cxx11::basic_string<char>}\n  - https://github.com/chriskohlhoff/asio/pull/95\n- [ ] `third_party/gperftools-2.2`: `error: '__off64_t' has not been declared`\n  - https://github.com/gperftools/gperftools/issues/693\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "salessandri": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1027", "title": "SERVER-8839 TimerStats and TimerHolder should work with microseconds.", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "e-siedler": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/275", "title": "SERVER-2541 Windows performance counters implemented", "body": "Fully functional windows performance counters imlpemented as a mongod.exe Module.\n\nSee README. See jira SERVER-2541 for some additional notes.\n- No Visual Studio project file have been updated. (I can't do that with VS Express).\n- I didn't make use of this new \"buildscripts/moduleconfig.py\" infrastructure mostly because of my incompetence: new to scons, new to python, didn't like both. 8-)\n- There is a new artifact that needs to be distributed along with mongod.exe: mongod.man. I didn't look into that (packaging).\n\nThanks\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bgianfo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/501190", "body": "Not sure what the deal is, but I made a last minute change before I committed, breaking this patch. \nhttp://github.com/bgianfo/mongo/commit/dc2c046c95c2b9ae8d2ec9f0d26987951437d502#diff-0\n\nPulling this commit also, you have the complete working package. :)\n\nI would add it to the pull request, but github seems to have made that impossible? \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/501190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "halfdan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/597405", "body": "When will this get integrated? Any feedback?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/597405/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "erh": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/662702", "body": "We're going to start including a minimal set of boost in the source tree to avoid conflicts and too much branching in the code.\nThat will be in the 2.0 cycle and should be boost 1.45, so not sure we want to do this right now, especially right before 1.8.0\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/662702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724077", "body": "Couple of notes: \n- we're not going to change the type from number to string\n- names should be consistent between dbstats/collstats\n- keeping commit log clean is important\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724094", "body": "dbstats already has a named value for this option, so you should use the same one.\n\nre: the commit stream, each commit should be a logical unit, but we also want to keep the number reasonable.  There are 9 listed above (though i guess really only 7)\nFor example, if you change a command, the change to the shell should be in the same commit.\n\nWe're in lockdown for 1.8, so will be a while before we would merge this in, and not sure this is exactly where we'll want to go with it.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742853", "body": "I'm seeing about a 10% improvement.\nThe problem is that Array doesn't currently require the elements to be in order.\nIn fact some implementations have it like this\n{ \"0\" : 1 , \"1\" : 1 , \"10\" : 10 , \"2\" : 2 , ... }\n So this patch will break some clients.\nThere is a more complex patch you could do which verifies the order while iterating.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742895", "body": "No, the spec doesn't say it has to be in order.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742895/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742903", "body": "I did this:\nhttps://github.com/mongodb/mongo/commit/cd834438e55086442b264dfc6cc9425d8a34f0bd\n\nWhich is about 80% of the improvement\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1086311", "body": "Can you break these into different parts?\nSome look ok, others not so sure about (FuncMap for example)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1086311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103470", "body": "Right, but there seem to be others that are unrelated.\nWould just be better if we can make each logical change separate.\n\nOn Wed, May 4, 2011 at 10:55 PM, testn\nreply@reply.github.com\nwrote:\n\n> funcMap has to be there to help perform function lookup\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/pull/35#issuecomment-1103444\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103470/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1272158", "body": "There are a few issues that I see at first glance.\n\n1) why did you remove the sparse check\n2) your'e not checking the type of \"filter\" correctly\n3) _matcher leaks - should be a scoped_ptr\n4) i don't think the queryoptimizer change is correct\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1272158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1430432", "body": "Fixed using the helper.\nThanks for pointing out\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1430432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/100728", "body": "vs2008 vs vs2010 issue\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/100728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/116980", "body": "don't comment out the lines in the method, just comment out doTest() etc...\nmakes it easer to test, etc...\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/116980/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/333394", "body": "The one you mentioned should be that way i believe.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/333394/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676120", "body": "Is there a reason you put slaveOk in the middle rather than the end so we can preserve backwards compatibility?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "adrien-mogenet": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724088", "body": "Ok Erh !\n- I had a doubt about keeping the types ; I will keep numbers when displaying raw values as currently\n- What do you mean about \"consistent names between dbstats/collstats\" ? I didn't change anything... ( I think )\n- Which rule did I not follow about commit log messages ? According to the doc (http://www.mongodb.org/display/DOCS/Git+Commit+Rules) : I have to put [SERVER-XXX] on every commit ?\n\nThanks,\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724088/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/250853", "body": "There is no way to make it cleaner using boost::filesystem ?\nhttp://www.boost.org/doc/libs/1_45_0/libs/filesystem/v2/doc/index.htm\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/250853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/335318", "body": "Why not checking that scale is a multiple of 1024 ?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/335318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "testn": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742681", "body": "With simple M/R such as collection count/max/min, the execution time can be cut in half\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742681/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742879", "body": "But this method is the conversion from BSONObj to jsval. Shouldn't BSONObj with Array type be in order according to the specification?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742879/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742912", "body": "That would work. \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103444", "body": "funcMap has to be there to help perform function lookup\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103444/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103889", "body": "okay. will rebranch it again and put the link\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103889/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "zippy1981": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/787400", "body": "WOO-HOO!!!!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/787400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/89046", "body": "Good to see I'm not the only one improving error messages! \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/89046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/90091", "body": "Is it necessarily a good idea to have class diagrams in the visual studio projects? These projects will always be an afterthought (and rightly so) to the scons project.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/90091/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/96083", "body": "Confirmed that actually worked.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/96083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/98475", "body": "stoll() doesn't exist in Visual Studio 2008. I'm installing the windows 7 SDK to see if that will rectify it, but perhaps even being dirty and calling atol() would be better than causing build problems.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/98475/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/98552", "body": "The older, more conservative function is _strtoi64()\nFix in http://github.com/zippy1981/mongo/commit/f7b7c07e2a72011b8dbd72d10dcbaa22d8e5fb54\nStackoverflow discussion is in http://stackoverflow.com/questions/3106026/is-there-a-stoll-stroll-string-to-long-long-alternative-in-visual-studio-20/3106060#3106060\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/98552/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/99757", "body": "Test code I used for this.:\n\n<pre>\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string>\n\nnamespace mongo {\n\n    inline void uasserted(int msgid , char* msg) { printf(\"Msg: %s\", msg); exit(4); }\n    /* \"user assert\".  if asserts, user did something wrong, not our code */\n    #define MONGO_uassert(msgid, msg, expr) (void)( (!!(expr)) || (mongo::uasserted(msgid, msg), 0) )\n    #define uassert MONGO_uassert\n\n    inline long long parseLL( const char *n );\n\n\n    // expect that n contains a base ten number and nothing else after it\n    // NOTE win version hasn't been tested directly\n    inline long long parseLL( const char *n ) {\n        long long ret;\n        uassert( 13307, \"cannot convert empty string to long long\", *n != 0 );\n#if !defined(_WIN32)\n        char *endPtr = 0;\n        errno = 0;\n        ret = strtoll( n, &endPtr, 10 );\n        uassert( 13305, \"could not convert string to long long\", *endPtr == 0 && errno == 0 );\n#else\n#if _MSC_VER>=1600\n        size_t endLen = 0;\n        try {\n            ret = std::stoll( n, &endLen, 10 );\n        } catch ( ... ) {\n            endLen = 0;\n        }\n        uassert( 13306, \"could not convert string to long long\", endLen != 0 && n[ endLen ] == 0 );\n#else // stoll() wasn't introduced into VS 2010.\n        char* endPtr = (char *)&n[strlen(n) - 1];\n        try {\n            ret = _strtoi64( n, &endPtr, 10 );\n        } catch ( ... ) {\n            endPtr = 0;\n        }\n        uassert( 13310, \"could not convert string to long long\", *endPtr == 0 );\n#endif // _MSC_VER >= 16\n#endif // !defined(_WIN32)\n        return ret;\n    }\n\n}\n\nvoid main () {\n    //printf(\"_MSC_VER: %d\\n\", _MSC_VER);\n\n    char szNumber[] = \"999999999\";\n    printf(\"number '%s': %d\\n\\n\", szNumber, mongo::parseLL(szNumber));\n    \n    char szNumberWhitespace[] = \"   999999999   999\";\n    printf(\"number '%s': %d\\n\\n\", szNumberWhitespace, mongo::parseLL(szNumberWhitespace));\n    \n    char szNumberBad[] = \"99r9dd999999\";\n    printf(\"number '%s': %d\\n\\n\", szNumberBad, mongo::parseLL(szNumberBad));\n}\n</pre>\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/99757/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/99771", "body": "Dwight,\n\nShouldn't we also check the error cases?\n\nI'll confess I'm not running the unit tests on my machine. I'll start doing that.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/99771/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/100400", "body": "The UTF-8 BOM, signifying nothing, and annoying the hell out of developers and users.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/100400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/100595", "body": "Was the near/far thing a 64 bit thing? I though the near/far dated back to win16 programming?\n\nRegardless, it compiles.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/100595/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/124765", "body": "Wouldn't \"-o -\" be more inline with unix convention than \"-o stdout\"? Or is the problem boost parsing? \n\nThen again, part of me thinks default mongodump behavior should be to stdout, and there shoulld be a new switch for current default behavior.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/124765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/132633", "body": "Double build break, double my bad. I'll have to start building on ubuntu to check these things.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/132633/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "s4y": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/875296", "body": "I just changed the contents of this pull request slightly. Somehow managed to fudge up a one-line fix!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/875296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1505577", "body": "Looks like this was fixed in e27fa36b4c47b277b6e140f641a1187b712d99ca. Cool!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1505577/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "radarek": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1021120", "body": "Guys, what is the progress of that? MongoDB needs count + distinct :).\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1021120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "defunctzombie": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1106255", "body": "Is there a reason this isn't being accepted? It is low risk while adding a desired build functionality.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1106255/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mattbillenstein": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1216540", "body": "Also added a commit to allow mongorestore to use \"-\" as stdin when given both --db and --collection\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1216540/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "JensRantil": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1248211", "body": "The above commented small fixes were now added to this pull request. Feel free to include whenever you want to.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1248211/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lqs": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1279530", "body": "@erh\n\ni think the sparse assertion is useless because _nFields always > 0. and the sparse index can be created even if there's two or more fields.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1279530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mrohnstock": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1386332", "body": "Since 2010 this don't get included to mongodb c++ driver. Is there any other way to get the double field from BSONObj?\n\nUsed: bsonobj.getField(\"whatever\").Double(), but will end with assereration error.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1386332/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1388754", "body": "forget it... bsonobj.getField(\"whatever\").numberDouble() did the trick, got another mistake in code - just ignore my input.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1388754/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lqez": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1414175", "body": "Wow, I _really_ need these cool patches.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1414175/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "plaes": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1586684", "body": "How about this?\n\n```\nelif os.sys.platform in ('linux2', 'linux3'):\n```\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1586684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mongodb": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/14485", "body": "this was just a test.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/14485/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "metagoto": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/53383", "body": "lol ;)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/53383/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "phase2": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/55958", "body": "Looks like a typo here:\n\nhttp://github.com/mongodb/mongo/commit/2b7eb102159a36129222afa1883ea3b15145e08b#L0R40\n\nSee &7 instead of &&\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/55958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "thbar": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/58482", "body": "Bravo :)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/58482/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "dwight": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/90094", "body": "that's an accident.  will remove.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/90094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/99795", "body": "sure.\n\nUnitTest is something that runs at every server startup.  so they must very light and fast.\n\n\"real\" tests should go in dbtests / test binary (or jstests if applicable)\n\nrunning tests v good idea.  see \"smoke\" page on wiki\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/99795/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/181437", "body": "right.  will take it out.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/181437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/165991", "body": "use unique_ptr here\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/165991/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "thomasst": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/96213", "body": "Shouldn't the constant MaxBSONObjectSize be used instead? In case one wants to customize the size.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/96213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "TonyGen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/117314", "body": "Eliot, please roll this commit back. I found a bug with it. I didn't think you would include it until I made a pull request to you. Thanks, Tony\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/117314/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "dmytton": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/181433", "body": "Won't this catch use of small oplog size when used with an arbiter? In your docs you recommend using a small oplog  http://www.mongodb.org/display/DOCS/Adding+an+Arbiter\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/181433/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "hackworks": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/248914", "body": "Could InterLockedExchange be used on windows and __sync_xor_and_fetch when GCC is used?\nFor windows:\nhttp://msdn.microsoft.com/en-us/library/ms683590(v=vs.85).aspx\nFor GCC:\nhttp://gcc.gnu.org/onlinedocs/gcc/Atomic-Builtins.html\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/248914/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "gregstuder": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/301135", "body": "detects int overflow in passed 2d bounds/parameters\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/301135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/328497", "body": "Major change here is basically to pull up the expand algorithm into the superclass.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/328497/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "shriharipandit": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/333336", "body": "You also need to make a similar change within void ReplicaSetMonitor::_checkHosts():\n\nLine 297: log(1) << \"updated set (\" << _name << \") to: \" << getServerAddress()\n\nPerhaps more places as well.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/333336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "tadmarshall": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/166291", "body": "This was part of my fixing the memory leak in the shell.  The problem was\nthat memory was allocated by strdup() and never freed.  Since strdup() calls\nmalloc(), I added matching free() calls.  This bit of code is on the #else\nside of an #ifdef USE_LINENOISE and so isn't in the current code, but if\nUSE_LINENOISE was turned off then the call to \"new char[1024]\" would end up\ngetting passed to free() and it seemed better to match malloc() with free()\ninstead of new with free().  Without changing the entire way this memory is\nallocated and freed (a bigger change) I can't just use unique_ptr in one\nspot.  strdup() calls malloc() and I can't switch to unique_ptr without\nreplacing the strdup() calls.  I was trying to make minimal changes to fix\nthe memory leak.\n\n-----Original Message-----\nFrom: Dwight Merriman\n[mailto:reply+p-165991-d7ea43fd753410cd3421867a9c1b3e0d018a6daf@reply.github\n.com] \nSent: Wednesday, October 12, 2011 1:50 AM\nTo: Tad Marshall\nSubject: Re: [mongo] SERVER-4043 -- fix tab completion in mid-code (#110)\n\n> @@ -313,7 +315,7 @@ char \\* shellReadline( const char \\* prompt , int\n> handlesigint = 0 ) {\n>      return ret;\n>  #else\n>      printf(\"%s\", prompt); cout.flush();\n> -    char \\* buf = new char[1024];\n\nuse unique_ptr here\n\n## \n\nReply to this email directly or view it on GitHub:\nhttps://github.com/mongodb/mongo/pull/110/files#r165991\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/166291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "hoffrocket": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/196130", "body": "should be \"return LOG_INFO;\"\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/196130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/196132", "body": "pragram ->  program\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/196132/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "amschwerin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660497", "body": "For exception safety, use a boost::scoped_ptr to hold the result of readDocument().\n\nboost::scoped_ptr<BSONObj> o(readDocument(file, buf, BUF_SIZE));\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660497/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660503", "body": "This function should not be inlined.  Implement it in the cpp file.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660503/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660530", "body": "Ditto on scoped_ptr, here.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676654", "body": "(1) Inlining it won't help performance.\n(2) Inlining it will increase the binary size.\n(3) Inlining it means that any time it changes, all modules that include tool.h must be recompiled, which slows down incremental compilation.  This is important to developers.\n\nSo, it does two bad things and no good things.  Don't inline it.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676654/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/694609", "body": "In the event that the file is truncated, the old code would alert for failure in the event that the input file was truncated, and did not contain an even multiple of 4 bytes.  This change will silently stop processing, which is a behavior change.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/694609/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/694614", "body": "\"isFifoFile\", instead of \"fifo\".\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/694614/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/774347", "body": "Thanks for pinging.  Will look again.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/774347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/794711", "body": "Haven't forgotten.  Really swamped over here.\n\nOn Fri, May 4, 2012 at 8:36 AM, Azat Khuzhin\nreply@reply.github.com\nwrote:\n\n> > \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0size_t amt = fread(buf, 1, 4, file);\n> > - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0// end of fifo/file\n> > - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0if ( feof(file) ) {\n> > - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0break;\n> \n> @andy10gen ?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/pull/205/files#r773788\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/794711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935900", "body": "I think this needs to default to None, or on systems where \"g++\" is not the default compiler, builds will fail when --cxx is not specified.  I.e., Windows/MSVC systems.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935900/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935902", "body": "Again, default to None.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935912", "body": "Though we haven't been very consistent in the past, SConstruct files are python code, and should follow PEP-8 style.\n\nconf.env.Replace(CXX=GetOption(\"cxx\"))\n\nNote where whitespace has been removed.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935918", "body": "I think I'd rather omit these print statements.  If we want to report which compilers are being used, we should do that separately from option setting.  The compiler command line and link flags show up in the output, anyways.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935918/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "azat": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/664362", "body": "Why it should?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/664362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/699717", "body": "@andy10gen, it will fail at https://github.com/mongodb/mongo/pull/205/files#L1R549 ( `m.done() == fileLength` ). Is it enough?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/699717/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/773788", "body": "@andy10gen ?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/773788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "onyxmaster": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676141", "body": "No particular reason, I justified its placement on the basis that GridFile constructor is private so existing code shouldn't be broken by this change (the default value is not provided for the same reason), and that slaveOk felt to me as something immutable and should be close to another immutable (grid) both in field definitions (line 200 below) and the argument list.\nIf you feel that GridFile constructor might become protected or public some day, I agree with you that slaveOk should be placed at the end and, probably have the default false value added.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676142", "body": "If you prefer, I can make changes on my end and update the pull request, just tell me.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676142/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "milkie": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757112", "body": "I think we'll need to actually create the file on first use, rather than requesting the user do it.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757112/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757116", "body": "Also we should put in a link to the new documentation site and a mention of the mongo-users google group.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757116/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757123", "body": "_isatty() instead?  we already use it in util/log.cpp\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757123/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "lcapaldo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757185", "body": "Just put #define isatty _isatty in platform/windows?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757190", "body": "Yeah I can do both these things.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "cwestin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764933", "body": "I think $strlen on a nonexistent field should return zero.  This fits the operation of other operators, which are as forgiving as possible unless the result is definitively wrong.  Here, I think it makes sense to treat this as an empty string.  However, I think it should be an error to call $strlen on a real field that does not contain a string value.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764933/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764939", "body": "Why did you remove these assertions?  Since they seem to work for everyone else, it's safer to first assume there's something wrong on your setup, and that we should figure out what that is.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764939/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764972", "body": "Before this, I would check for pString.get() being NULL, or pString.getType() == jstNULL (from bson/bsontypes.h).  If either of those is true, return Value::getZero().  That will handle returning zero for a non-existent or null valued field.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}}, "7": {"GeertBosch": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/3020767b4a20fca53d4b58b440085933c8eb7c3e", "message": "SERVER-32606 Oplog read time may only decrease during rollback"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "henrikingo": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/086cec19cbd0f0a4a122d4cfa6f099dbaa2ef21d", "message": "SERVER-32260 Call workload_setup.py from system_perf.yml and longevity.yml"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "benety": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/7713d5531c663603d17fff1267d013e0b6867e5b", "message": "SERVER-32284 rename ReplicationCoordinator::reserveSnapshotName() to getMinimumVisibleSnapshot()"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/25b7af8b7367de11f0d4d864bd6a51983227c494", "message": "SERVER-32284 remove unused last snapshot support from ReplClientInfo"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/13a33d961f6936dc8290b8bb80f5c5b9e599f0a9", "message": "SERVER-32284 ReplicationCoordinatorImpl::_doneWaitingForReplication_inlock() always assumes null minSnapshot"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/d071ff8278abcd05d63c0367c49284645e844bcc", "message": "SERVER-32284 ReplicationCoordinatorImpl::_awaitReplication_inlock() always assumes null minSnapshot"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/0d97768115d093ed0041fff8c0ef39ba30c07e3f", "message": "SERVER-32284 remove ReplicationCoordinator::awaitReplicationOfLastOpForClient()"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/7ed79c16f619cab2195edf9cad37a3c4765c8a23", "message": "SERVER-32284 collMod waits for UUID schema changes using ReplicationCoordinator::awaitReplication() instead of awaitReplicationOfLastOpForClient()"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/f2af0ad889f1cfca7a311d53912c5b808500ea77", "message": "SERVER-29200 remove references to OplogEntry::raw from MultiApplier"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/25f0c6ae6c4fa80244cadb8a6bfcbf9bcc8b7742", "message": "SERVER-29200 migrate SyncTail::getMissingDoc() and fetchAndInsertMissingDoc() to accept OplogEntry instead of BSONObj"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/939a30aba1703c939b0352bded4b56257c8a0bec", "message": "SERVER-29200 add OplogEntry::getOperationToApply()\n\nremove references to OplogEntry::raw from rollback, prefetchPagesForReplicatedOp() and SyncTail"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sulabhM": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/8fd172e330b5af597bfba60d0bb7add8dc1a236c", "message": "SERVER-32506 OSX Mobile SE variant: Tag tests to skip on mobile SE"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "RedBeard0531": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/daf6c4714b45aeb8ba1a09380135b3267c4cc280", "message": "SERVER-32617 Fix code that reconstructs status with just code and string"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/4dc36c7ccb6b5b8f7d865993b5d648fe6dc4b7c7", "message": "SERVER-32684 Make mongos write command objects hold Status directly"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/68b961b28f5dd40501f0ef9b6c6b515ff1ec7cfd", "message": "SERVER-32673 Make WorkingSetCommon::buildMemberStatusObject handle ErrorExtraInfo"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/b165c1e9275016dc15d071d147cec0e5b1bc1f31", "message": "SERVER-32587 Convert StaleConfigException to use ErrorExtraInfo"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/84c3f83421b262028081296e4c387d29691ea376", "message": "SERVER-32586 Convert ResolvedView to use ErrorExtraInfo"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hanumantmk": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/8ee6b3d31756d7939480f1283ec53af3bd6eb489", "message": "SERVER-32683 JS JIT off by default\n\nTurn off the spidermonkey jit by default."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "will62794": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/6f885ea4579c04bd73c4d6fecc497520105f2609", "message": "SERVER-30818 Cleanup comments in background.h"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/aa35454e98a3026a7c44cc736d2326a3fa38e7b3", "message": "SERVER-30818 Add function to await background operations on multiple databases"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kevinAlbs": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/b9decc492c0ff942d5bcd6e8c799de70fa0839af", "message": "SERVER-21630 run CheckReplDBHash on csrs and shard replset\n\nAnd run ValidateCollections hook on priority=0 secondaries."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "elouie99": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/f7d45863daa61920d3b6ee8abbf105833767a223", "message": "SERVER-31628 Always use a python virtualenv in etc/evergreen.yml"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lukech": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/23914068c331a42d1f98de0d58caecf0e391549a", "message": "Import wiredtiger: 357efdd4ce279efc71ff618c59fe1b903ef80bb2 from branch mongodb-3.8\n\nref: 9e50448231..357efdd4ce\nfor: 3.7.2\n\nWT-3565       Test and understand mixed timestamp/no-timestamp usage to same data\nWT-3597       Add a diagnostic check for updates to the same key out of timestamp order\nWT-3632       Increase how granularly cache usage settings can be configured\nWT-3695       format failed to report a stuck cache\nWT-3740       race in page dirty-byte decrement.\nWT-3767       Avoid lookaside instantiation for faster reads\nWT-3775       Improve commit timestamp is older than oldest timestamp error message\nWT-3792       LSM version 1 metadata incompatibility\nWT-3796       Report a better error message if transaction commit fails\nWT-3799       Test/format with timestamps enabled pin cache full\nWT-3809       Fix a bug in lookaside related to birthmarks\nWT-3811       Python scripts for visualizing operation tracking files\nWT-3818       __rec_txn_read() code order cleanup\nWT-3825       Fix calculation of CPU ticks per unit time\nWT-3826       random-abort test failure\nWT-3827       test_compact02 failure\nWT-3828       Link error on OS/X for __wt_process data reference\nWT-3831       uninitialized buffer value in statlog server path comparison\nWT-3832       Fixup shell script warning messages\nWT-3833       test/format cache_minimum value error\nWT-3841       Fix error message pattern in timestamp09\nWT-3842       full-build Friday & lint\nWT-3844       Checkpoints can hang on limbo pages\nWT-3845       Compiler warning in examples using GCC 5.4.0"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kmahar": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/23870b6aecac924a15af49bb7abe2f8e1cda2aa8", "message": "SERVER-30744 Move dropCollection logic from ShardingCatalogClient into ShardingCatalogManager"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kaloianm": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/7f4e454907f14a5a82195d15e6ee96cbcd6d4d5b", "message": "SERVER-32447 Add a mock CatalogCache::getCollectionRoutingInfoAt method\n\nThe added method always returns the routing information at the latest\ntimestamp."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "visualzhou": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/7d2f43adabb344f93ef8bec523efa3187bcf4ce6", "message": "SERVER-32317 Make sharding chunk manipulation operations use doTxn instead of applyOps"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vessy-mongodb": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/35c44dbd37c0167cc07420c8ea286ad6edfac7ff", "message": "SERVER-30347 Fail startup when running wiredTiger with --nojournal as part of a replica set"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "BillyDonahue": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/a8561f9a3775083eaf17e648850791a2cbd37893", "message": "SERVER-32070 remove stdx::bind (final patch)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mtrussotto": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/ef81d53b986aa701c722820a204eba73a635f748", "message": "SERVER-32726 Fix out-of-order error code in update_driver.cpp"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cramaechi": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1203", "title": "[SERVER-32259] Update wiredtiger_util.cpp", "body": "WiredTigerUtil::fetchTypeAndSourceURI() is using\r\ninvariant(colgroupResult.isOK()) instead of\r\ninvariantOK(colgroupResult.getStatus()). This means that if the\r\ninvariant ever fires, we don't know what the bad Status actually was.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "JunHe77": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1202", "title": "SERVER-32576: Merge ARM64 support to use 64-bit optimized code path", "body": "Change-Id: Icd2e0f9378952bbd811b54fe60a7f3895c960e92\r\nSigned-off-by: Jun He <jun.he@arm.com>", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kakts": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1198", "title": "Fix typos in config_server_test_fixture.cpp and dpml_error_codes.c", "body": "## Summary\r\nI found some typos in files as below.\r\n\r\n```\r\nsrc/mongo/s/config_server_test_fixture.cpp\r\nsrc/third_party/IntelRDFPMathLib20U1/LIBRARY/float128/dpml_error_codes.c\r\n```\r\n\r\nreponse  \u2192 response\r\n\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zhihuiFan": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1197", "title": "SERVER-4785 maintain slowms at database level", "body": "See issue at https://jira.mongodb.org/browse/SERVER-4785 and https://jira.mongodb.org/browse/SERVER-18946 \r\n\r\n\r\nHere is the test result.\r\n\r\n\r\nzhifan@zhifan-dev16:~/github/mongo$ ./mongo\r\n> db.getProfilingStatus()\r\n{ \"was\" : 0, \"slowms\" : 100, \"sampleRate\" : 1 }\r\n> db.setProfilingLevel(0, 1)\r\n{ \"was\" : 0, \"slowms\" : 100, \"sampleRate\" : 1, \"ok\" : 1 }\r\n> db.getProfilingStatus()\r\n{ \"was\" : 0, \"slowms\" : 1, \"sampleRate\" : 1 }\r\n> for(var i =0; i<10000; i++) {db.test.save({'i': i})}\r\nWriteResult({ \"nInserted\" : 1 })\r\n> use test2\r\nswitched to db test2\r\n> db.getProfilingStatus()\r\n{ \"was\" : 0, \"slowms\" : 100, \"sampleRate\" : 1 } . -- test 2: still 100\r\n> for(var i =0; i<10000; i++) {db.test.save({'i': i})}\r\nWriteResult({ \"nInserted\" : 1 })\r\n\r\n\r\nas a result:  we capture the slow queries from test database but not for test2 database.\r\n\r\n`\r\n2017-12-26T13:38:32.678+0800 I COMMAND  [conn1] command test.test appName: \"MongoDB Shell\" command: insert { insert: \"test\", ordered: true, $db: \"test\" } ninserted:1 keysInserted:1 numYields:0 reslen:29 locks:{ Global: { acquireCount: { r: 3, w: 1 } }, Database: { acquireCount: { w: 1, R: 1 } }, Collection: { acquireCount: { w: 1 } } } protocol:op_msg 3ms\r\n\r\n`\r\n\r\n  ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bmanojlovic": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1195", "title": "initial scons 3.0.1 and python3 build support", "body": "This PR allows building mongo with use of latest (3.0.1) scons which now uses python3 by default.\r\nThere are still a lot of rough edges but on the end it allows building binary mongod\r\n\r\npython version:\r\n```\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> python3 --version\r\nPython 3.6.3\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> \r\n```\r\nscons version:\r\n```\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> scons -v\r\nSCons by Steven Knight et al.:\r\n        script: v3.0.1.74b2c53bc42290e911b334a6b44f187da698a668, 2017/11/14 13:16:53, by bdbaddog on hpmicrodog\r\n        engine: v3.0.1.74b2c53bc42290e911b334a6b44f187da698a668, 2017/11/14 13:16:53, by bdbaddog on hpmicrodog\r\n        engine path: ['/usr/lib/scons-3.0.1/SCons']\r\nCopyright (c) 2001 - 2017 The SCons Foundation\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched>\r\n```\r\nand finally running scons on my machine\r\n```\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> scons -j 8 MONGO_VERSION=3.6.0  --disable-warnings-as-errors  --ssl\r\nscons: Reading SConscript files ...\r\nMkdir(\"build/scons\")\r\nscons version: 3.0.1\r\npython version: 3 6 3 final 0\r\nChecking whether the C compiler works... yes\r\nChecking whether the C++ compiler works... yes\r\n...\r\n...\r\n...\r\nranlib build/blah/mongo/db/query/libquery_common.a\r\nGenerating library build/blah/mongo/db/libmongod_options.a\r\nranlib build/blah/mongo/db/libmongod_options.a\r\nLinking build/blah/mongo/mongod\r\nInstall file: \"build/blah/mongo/mongod\" as \"mongod\"\r\nscons: done building targets.\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> \r\n```\r\nand of course running built binary\r\n```\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> ./mongod --dbpath /tmp/ --bind_ip 127.0.0.1\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] MongoDB starting : pid=2937 port=27017 dbpath=/tmp/ 64-bit host=pc\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] db version v3.6.0\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] git version: 9038d0a67ee578aa68ef8482b1fc98750d1007a6\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] OpenSSL version: OpenSSL 1.1.0g-fips  2 Nov 2017\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] allocator: tcmalloc\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] modules: none\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] build environment:\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten]     distarch: x86_64\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten]     target_arch: x86_64\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] options: { net: { bindIp: \"127.0.0.1\" }, storage: { dbPath: \"/tmp/\" } }\r\n2017-12-22T18:52:02.566+0000 I STORAGE  [initandlisten] Detected data files in /tmp/ created by the 'wiredTiger' storage engine, so setting the active storage engine to 'wiredTiger'.\r\n2017-12-22T18:52:02.566+0000 I STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=15542M,session_max=20000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000),statistics_log=(wait=0),verbose=(recovery_progress),\r\n2017-12-22T18:52:02.637+0000 I STORAGE  [initandlisten] WiredTiger message [1513968722:637511][2937:0x7f87663729c0], txn-recover: Main recovery loop: starting at 6/4736\r\n2017-12-22T18:52:02.679+0000 I STORAGE  [initandlisten] WiredTiger message [1513968722:679111][2937:0x7f87663729c0], txn-recover: Recovering log 6 through 7\r\n2017-12-22T18:52:02.706+0000 I STORAGE  [initandlisten] WiredTiger message [1513968722:706386][2937:0x7f87663729c0], txn-recover: Recovering log 7 through 7\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] ** WARNING: /sys/kernel/mm/transparent_hugepage/enabled is 'always'.\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] **        We suggest setting it to 'never'\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] ** WARNING: soft rlimits too low. rlimits set to 4096 processes, 64000 files. Number of processes should be at least 32000 : 0.5 times number of files.\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.736+0000 I FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory '/tmp/diagnostic.data'\r\n2017-12-22T18:52:02.737+0000 I NETWORK  [initandlisten] waiting for connections on port 27017\r\n```\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "m-masataka": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1191", "title": "The GCC version should be updated in SConstruct", "body": "In ``docs/building.md`` , It require GCC version 5.4.0 or newer, but ``SConstruct`` require 5.3.0 or newer.\r\nIs it mistake? ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "judu": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1186", "title": "Fix build.", "body": "Without these using `std::string`, mongodb does not build here.\r\n\r\nI'm using gcc 6.4.0.\r\n\r\nPlease ask if you need more information about my build :)", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zydcom": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1171", "title": "SERVER-30636\uff1afix range deleter crash", "body": "This patch can be also used for v3.2 ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ryankall": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1169", "title": "Server 25311", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/1140", "title": "Verbosity bug", "body": "now the Explain command will not accept unknown command like verbos: 'queryPlanner'", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lorien": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1162", "title": "Fix error in command example in mongorestore.1 man", "body": "The trailing slash argument is missing in mongorestore command example in debian mans.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "SunguckLee": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1151", "title": "Support prefix match for full-text search", "body": "Add range search feature on full text search (original version has only exact match)\r\n\r\nFor CJK language, mongodb does not support stemmer for full text search.\r\nAlso not easy to implement stemmer for those language (Especially Korean).\r\nSo we usually use N-gram parser for full text search not supported mongodb yet.\r\n\r\nFortunately in Korean, we use space character between words and Korean(and also Japanese) use only suffix not prefix. So we can use mongodb full text search if mongodb support prefix match in fulltext. So I propose this simple feature.\r\n\r\n>> Match range of original fulltext search\r\n    * '\ud55c\uae00' <= match_range <= '\ud55c\uae00'\r\n    * '\ud14c\uc2a4\ud2b8' <= match_range <= '\ud14c\uc2a4\ud2b8'\r\n    * '\uc774\uc131' <= match_range <= '\uc774\uc131'\r\n    * '\ud55c' <= match_range <= '\ud55c'\r\n\r\n>> Match range of patched fulltext search\r\n    * '\ud55c\uae00' <= match_range < '\ud55c\uae01'\r\n    * '\ud14c\uc2a4\ud2b8' <= match_range < '\ud14c\uc2a4\ud2b9'\r\n    * '\uc774\uc131' <= match_range < '\uc774\uc132'\r\n    * '\ud55c' <= match_range < '\ud55d'\r\n\r\nI hope user can control this search mode (exact or prefix match) by query parameter or internal parameter.\r\n\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sam-pf": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1149", "title": "change log message for CRL loading", "body": "The log message from _setupCRL was misleading.  It is not the number of revoked certificates that X509_load_crl_file returns.  It is the number of CRLs (X509_CRL structures) that it successfully loads that it returns.\r\n\r\nhttps://github.com/openssl/openssl/blob/c0452248ea1a59a41023a4765ef7d9825e80a62b/crypto/x509/by_file.c\r\n\r\nhttp://www.umich.edu/~x509/ssleay/x509_crls.html\r\n  ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nleite": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1136", "title": "SERVER-1889 internal replication nic", "body": "- support for internal replication nic", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kolisergej": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1128", "title": "[SERVER-8958] Replace strtod/strtol/atoi/atol/etc calls with parseNumberFromString<T>", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ZharkovIlia": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1122", "title": "General Improvements v2", "body": "Elimination of some redundancy. Some function arguments are passed by reference. Few bugs are fixed.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "thesebas": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1121", "title": "Fix for negative Date timezone offsets ", "body": "When uncommented this `// print a non-UTC time` block and changed `var UTC = '';` got invalid timezone offsets like: `ISODate(\"2016-11-14T00:00:00+-100\")`. This makes Date be displayed as `ISODate(\"2016-11-14T00:00:00+0100\")`", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "danharel": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1093", "title": "SERVER-24519 Added framework for micro benchmark tools", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Soullivaneuh": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1061", "title": "[WIP] [3.x] Alpine linux compatibility", "body": "Same as #1060 but for 3.x version.\n- [x] alpine-release on processinfo\n- [x] Fix `'ELFCLASS__ELF_NATIVE_CLASS' was not declared in this scope`\n- [x] Fix `gnu_get_libc_version` usage that does not exist on Musl\n- [x] Fix undefined `mallinfo` function\n- [x] error_code.ipp:110:22: error: could not convert 'strerror_r(value, ((char*)(& buf)), sizeof (buf))' from 'int' to 'std::__cxx11::string {aka std::__cxx11::basic_string<char>}\n  - https://github.com/chriskohlhoff/asio/pull/95\n- [ ] `third_party/gperftools-2.2`: `error: '__off64_t' has not been declared`\n  - https://github.com/gperftools/gperftools/issues/693\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "salessandri": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1027", "title": "SERVER-8839 TimerStats and TimerHolder should work with microseconds.", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "e-siedler": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/275", "title": "SERVER-2541 Windows performance counters implemented", "body": "Fully functional windows performance counters imlpemented as a mongod.exe Module.\n\nSee README. See jira SERVER-2541 for some additional notes.\n- No Visual Studio project file have been updated. (I can't do that with VS Express).\n- I didn't make use of this new \"buildscripts/moduleconfig.py\" infrastructure mostly because of my incompetence: new to scons, new to python, didn't like both. 8-)\n- There is a new artifact that needs to be distributed along with mongod.exe: mongod.man. I didn't look into that (packaging).\n\nThanks\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bgianfo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/501190", "body": "Not sure what the deal is, but I made a last minute change before I committed, breaking this patch. \nhttp://github.com/bgianfo/mongo/commit/dc2c046c95c2b9ae8d2ec9f0d26987951437d502#diff-0\n\nPulling this commit also, you have the complete working package. :)\n\nI would add it to the pull request, but github seems to have made that impossible? \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/501190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "halfdan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/597405", "body": "When will this get integrated? Any feedback?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/597405/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "erh": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/662702", "body": "We're going to start including a minimal set of boost in the source tree to avoid conflicts and too much branching in the code.\nThat will be in the 2.0 cycle and should be boost 1.45, so not sure we want to do this right now, especially right before 1.8.0\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/662702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724077", "body": "Couple of notes: \n- we're not going to change the type from number to string\n- names should be consistent between dbstats/collstats\n- keeping commit log clean is important\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724094", "body": "dbstats already has a named value for this option, so you should use the same one.\n\nre: the commit stream, each commit should be a logical unit, but we also want to keep the number reasonable.  There are 9 listed above (though i guess really only 7)\nFor example, if you change a command, the change to the shell should be in the same commit.\n\nWe're in lockdown for 1.8, so will be a while before we would merge this in, and not sure this is exactly where we'll want to go with it.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742853", "body": "I'm seeing about a 10% improvement.\nThe problem is that Array doesn't currently require the elements to be in order.\nIn fact some implementations have it like this\n{ \"0\" : 1 , \"1\" : 1 , \"10\" : 10 , \"2\" : 2 , ... }\n So this patch will break some clients.\nThere is a more complex patch you could do which verifies the order while iterating.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742895", "body": "No, the spec doesn't say it has to be in order.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742895/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742903", "body": "I did this:\nhttps://github.com/mongodb/mongo/commit/cd834438e55086442b264dfc6cc9425d8a34f0bd\n\nWhich is about 80% of the improvement\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1086311", "body": "Can you break these into different parts?\nSome look ok, others not so sure about (FuncMap for example)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1086311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103470", "body": "Right, but there seem to be others that are unrelated.\nWould just be better if we can make each logical change separate.\n\nOn Wed, May 4, 2011 at 10:55 PM, testn\nreply@reply.github.com\nwrote:\n\n> funcMap has to be there to help perform function lookup\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/pull/35#issuecomment-1103444\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103470/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1272158", "body": "There are a few issues that I see at first glance.\n\n1) why did you remove the sparse check\n2) your'e not checking the type of \"filter\" correctly\n3) _matcher leaks - should be a scoped_ptr\n4) i don't think the queryoptimizer change is correct\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1272158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1430432", "body": "Fixed using the helper.\nThanks for pointing out\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1430432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/100728", "body": "vs2008 vs vs2010 issue\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/100728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/116980", "body": "don't comment out the lines in the method, just comment out doTest() etc...\nmakes it easer to test, etc...\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/116980/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/333394", "body": "The one you mentioned should be that way i believe.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/333394/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676120", "body": "Is there a reason you put slaveOk in the middle rather than the end so we can preserve backwards compatibility?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "adrien-mogenet": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724088", "body": "Ok Erh !\n- I had a doubt about keeping the types ; I will keep numbers when displaying raw values as currently\n- What do you mean about \"consistent names between dbstats/collstats\" ? I didn't change anything... ( I think )\n- Which rule did I not follow about commit log messages ? According to the doc (http://www.mongodb.org/display/DOCS/Git+Commit+Rules) : I have to put [SERVER-XXX] on every commit ?\n\nThanks,\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724088/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/250853", "body": "There is no way to make it cleaner using boost::filesystem ?\nhttp://www.boost.org/doc/libs/1_45_0/libs/filesystem/v2/doc/index.htm\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/250853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/335318", "body": "Why not checking that scale is a multiple of 1024 ?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/335318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "testn": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742681", "body": "With simple M/R such as collection count/max/min, the execution time can be cut in half\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742681/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742879", "body": "But this method is the conversion from BSONObj to jsval. Shouldn't BSONObj with Array type be in order according to the specification?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742879/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742912", "body": "That would work. \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103444", "body": "funcMap has to be there to help perform function lookup\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103444/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103889", "body": "okay. will rebranch it again and put the link\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103889/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "zippy1981": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/787400", "body": "WOO-HOO!!!!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/787400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/89046", "body": "Good to see I'm not the only one improving error messages! \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/89046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/90091", "body": "Is it necessarily a good idea to have class diagrams in the visual studio projects? These projects will always be an afterthought (and rightly so) to the scons project.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/90091/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/96083", "body": "Confirmed that actually worked.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/96083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/98475", "body": "stoll() doesn't exist in Visual Studio 2008. I'm installing the windows 7 SDK to see if that will rectify it, but perhaps even being dirty and calling atol() would be better than causing build problems.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/98475/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/98552", "body": "The older, more conservative function is _strtoi64()\nFix in http://github.com/zippy1981/mongo/commit/f7b7c07e2a72011b8dbd72d10dcbaa22d8e5fb54\nStackoverflow discussion is in http://stackoverflow.com/questions/3106026/is-there-a-stoll-stroll-string-to-long-long-alternative-in-visual-studio-20/3106060#3106060\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/98552/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/99757", "body": "Test code I used for this.:\n\n<pre>\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string>\n\nnamespace mongo {\n\n    inline void uasserted(int msgid , char* msg) { printf(\"Msg: %s\", msg); exit(4); }\n    /* \"user assert\".  if asserts, user did something wrong, not our code */\n    #define MONGO_uassert(msgid, msg, expr) (void)( (!!(expr)) || (mongo::uasserted(msgid, msg), 0) )\n    #define uassert MONGO_uassert\n\n    inline long long parseLL( const char *n );\n\n\n    // expect that n contains a base ten number and nothing else after it\n    // NOTE win version hasn't been tested directly\n    inline long long parseLL( const char *n ) {\n        long long ret;\n        uassert( 13307, \"cannot convert empty string to long long\", *n != 0 );\n#if !defined(_WIN32)\n        char *endPtr = 0;\n        errno = 0;\n        ret = strtoll( n, &endPtr, 10 );\n        uassert( 13305, \"could not convert string to long long\", *endPtr == 0 && errno == 0 );\n#else\n#if _MSC_VER>=1600\n        size_t endLen = 0;\n        try {\n            ret = std::stoll( n, &endLen, 10 );\n        } catch ( ... ) {\n            endLen = 0;\n        }\n        uassert( 13306, \"could not convert string to long long\", endLen != 0 && n[ endLen ] == 0 );\n#else // stoll() wasn't introduced into VS 2010.\n        char* endPtr = (char *)&n[strlen(n) - 1];\n        try {\n            ret = _strtoi64( n, &endPtr, 10 );\n        } catch ( ... ) {\n            endPtr = 0;\n        }\n        uassert( 13310, \"could not convert string to long long\", *endPtr == 0 );\n#endif // _MSC_VER >= 16\n#endif // !defined(_WIN32)\n        return ret;\n    }\n\n}\n\nvoid main () {\n    //printf(\"_MSC_VER: %d\\n\", _MSC_VER);\n\n    char szNumber[] = \"999999999\";\n    printf(\"number '%s': %d\\n\\n\", szNumber, mongo::parseLL(szNumber));\n    \n    char szNumberWhitespace[] = \"   999999999   999\";\n    printf(\"number '%s': %d\\n\\n\", szNumberWhitespace, mongo::parseLL(szNumberWhitespace));\n    \n    char szNumberBad[] = \"99r9dd999999\";\n    printf(\"number '%s': %d\\n\\n\", szNumberBad, mongo::parseLL(szNumberBad));\n}\n</pre>\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/99757/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/99771", "body": "Dwight,\n\nShouldn't we also check the error cases?\n\nI'll confess I'm not running the unit tests on my machine. I'll start doing that.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/99771/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/100400", "body": "The UTF-8 BOM, signifying nothing, and annoying the hell out of developers and users.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/100400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/100595", "body": "Was the near/far thing a 64 bit thing? I though the near/far dated back to win16 programming?\n\nRegardless, it compiles.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/100595/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/124765", "body": "Wouldn't \"-o -\" be more inline with unix convention than \"-o stdout\"? Or is the problem boost parsing? \n\nThen again, part of me thinks default mongodump behavior should be to stdout, and there shoulld be a new switch for current default behavior.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/124765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/132633", "body": "Double build break, double my bad. I'll have to start building on ubuntu to check these things.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/132633/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "s4y": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/875296", "body": "I just changed the contents of this pull request slightly. Somehow managed to fudge up a one-line fix!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/875296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1505577", "body": "Looks like this was fixed in e27fa36b4c47b277b6e140f641a1187b712d99ca. Cool!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1505577/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "radarek": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1021120", "body": "Guys, what is the progress of that? MongoDB needs count + distinct :).\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1021120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "defunctzombie": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1106255", "body": "Is there a reason this isn't being accepted? It is low risk while adding a desired build functionality.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1106255/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mattbillenstein": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1216540", "body": "Also added a commit to allow mongorestore to use \"-\" as stdin when given both --db and --collection\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1216540/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "JensRantil": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1248211", "body": "The above commented small fixes were now added to this pull request. Feel free to include whenever you want to.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1248211/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lqs": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1279530", "body": "@erh\n\ni think the sparse assertion is useless because _nFields always > 0. and the sparse index can be created even if there's two or more fields.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1279530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mrohnstock": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1386332", "body": "Since 2010 this don't get included to mongodb c++ driver. Is there any other way to get the double field from BSONObj?\n\nUsed: bsonobj.getField(\"whatever\").Double(), but will end with assereration error.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1386332/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1388754", "body": "forget it... bsonobj.getField(\"whatever\").numberDouble() did the trick, got another mistake in code - just ignore my input.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1388754/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lqez": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1414175", "body": "Wow, I _really_ need these cool patches.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1414175/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "plaes": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1586684", "body": "How about this?\n\n```\nelif os.sys.platform in ('linux2', 'linux3'):\n```\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1586684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mongodb": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/14485", "body": "this was just a test.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/14485/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "metagoto": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/53383", "body": "lol ;)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/53383/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "phase2": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/55958", "body": "Looks like a typo here:\n\nhttp://github.com/mongodb/mongo/commit/2b7eb102159a36129222afa1883ea3b15145e08b#L0R40\n\nSee &7 instead of &&\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/55958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "thbar": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/58482", "body": "Bravo :)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/58482/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "dwight": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/90094", "body": "that's an accident.  will remove.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/90094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/99795", "body": "sure.\n\nUnitTest is something that runs at every server startup.  so they must very light and fast.\n\n\"real\" tests should go in dbtests / test binary (or jstests if applicable)\n\nrunning tests v good idea.  see \"smoke\" page on wiki\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/99795/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/181437", "body": "right.  will take it out.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/181437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/165991", "body": "use unique_ptr here\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/165991/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "thomasst": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/96213", "body": "Shouldn't the constant MaxBSONObjectSize be used instead? In case one wants to customize the size.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/96213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "TonyGen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/117314", "body": "Eliot, please roll this commit back. I found a bug with it. I didn't think you would include it until I made a pull request to you. Thanks, Tony\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/117314/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "dmytton": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/181433", "body": "Won't this catch use of small oplog size when used with an arbiter? In your docs you recommend using a small oplog  http://www.mongodb.org/display/DOCS/Adding+an+Arbiter\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/181433/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "hackworks": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/248914", "body": "Could InterLockedExchange be used on windows and __sync_xor_and_fetch when GCC is used?\nFor windows:\nhttp://msdn.microsoft.com/en-us/library/ms683590(v=vs.85).aspx\nFor GCC:\nhttp://gcc.gnu.org/onlinedocs/gcc/Atomic-Builtins.html\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/248914/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "gregstuder": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/301135", "body": "detects int overflow in passed 2d bounds/parameters\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/301135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/328497", "body": "Major change here is basically to pull up the expand algorithm into the superclass.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/328497/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "shriharipandit": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/333336", "body": "You also need to make a similar change within void ReplicaSetMonitor::_checkHosts():\n\nLine 297: log(1) << \"updated set (\" << _name << \") to: \" << getServerAddress()\n\nPerhaps more places as well.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/333336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "tadmarshall": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/166291", "body": "This was part of my fixing the memory leak in the shell.  The problem was\nthat memory was allocated by strdup() and never freed.  Since strdup() calls\nmalloc(), I added matching free() calls.  This bit of code is on the #else\nside of an #ifdef USE_LINENOISE and so isn't in the current code, but if\nUSE_LINENOISE was turned off then the call to \"new char[1024]\" would end up\ngetting passed to free() and it seemed better to match malloc() with free()\ninstead of new with free().  Without changing the entire way this memory is\nallocated and freed (a bigger change) I can't just use unique_ptr in one\nspot.  strdup() calls malloc() and I can't switch to unique_ptr without\nreplacing the strdup() calls.  I was trying to make minimal changes to fix\nthe memory leak.\n\n-----Original Message-----\nFrom: Dwight Merriman\n[mailto:reply+p-165991-d7ea43fd753410cd3421867a9c1b3e0d018a6daf@reply.github\n.com] \nSent: Wednesday, October 12, 2011 1:50 AM\nTo: Tad Marshall\nSubject: Re: [mongo] SERVER-4043 -- fix tab completion in mid-code (#110)\n\n> @@ -313,7 +315,7 @@ char \\* shellReadline( const char \\* prompt , int\n> handlesigint = 0 ) {\n>      return ret;\n>  #else\n>      printf(\"%s\", prompt); cout.flush();\n> -    char \\* buf = new char[1024];\n\nuse unique_ptr here\n\n## \n\nReply to this email directly or view it on GitHub:\nhttps://github.com/mongodb/mongo/pull/110/files#r165991\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/166291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "hoffrocket": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/196130", "body": "should be \"return LOG_INFO;\"\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/196130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/196132", "body": "pragram ->  program\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/196132/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "amschwerin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660497", "body": "For exception safety, use a boost::scoped_ptr to hold the result of readDocument().\n\nboost::scoped_ptr<BSONObj> o(readDocument(file, buf, BUF_SIZE));\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660497/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660503", "body": "This function should not be inlined.  Implement it in the cpp file.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660503/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660530", "body": "Ditto on scoped_ptr, here.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676654", "body": "(1) Inlining it won't help performance.\n(2) Inlining it will increase the binary size.\n(3) Inlining it means that any time it changes, all modules that include tool.h must be recompiled, which slows down incremental compilation.  This is important to developers.\n\nSo, it does two bad things and no good things.  Don't inline it.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676654/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/694609", "body": "In the event that the file is truncated, the old code would alert for failure in the event that the input file was truncated, and did not contain an even multiple of 4 bytes.  This change will silently stop processing, which is a behavior change.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/694609/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/694614", "body": "\"isFifoFile\", instead of \"fifo\".\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/694614/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/774347", "body": "Thanks for pinging.  Will look again.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/774347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/794711", "body": "Haven't forgotten.  Really swamped over here.\n\nOn Fri, May 4, 2012 at 8:36 AM, Azat Khuzhin\nreply@reply.github.com\nwrote:\n\n> > \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0size_t amt = fread(buf, 1, 4, file);\n> > - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0// end of fifo/file\n> > - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0if ( feof(file) ) {\n> > - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0break;\n> \n> @andy10gen ?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/pull/205/files#r773788\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/794711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935900", "body": "I think this needs to default to None, or on systems where \"g++\" is not the default compiler, builds will fail when --cxx is not specified.  I.e., Windows/MSVC systems.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935900/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935902", "body": "Again, default to None.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935912", "body": "Though we haven't been very consistent in the past, SConstruct files are python code, and should follow PEP-8 style.\n\nconf.env.Replace(CXX=GetOption(\"cxx\"))\n\nNote where whitespace has been removed.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935918", "body": "I think I'd rather omit these print statements.  If we want to report which compilers are being used, we should do that separately from option setting.  The compiler command line and link flags show up in the output, anyways.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935918/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "azat": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/664362", "body": "Why it should?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/664362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/699717", "body": "@andy10gen, it will fail at https://github.com/mongodb/mongo/pull/205/files#L1R549 ( `m.done() == fileLength` ). Is it enough?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/699717/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/773788", "body": "@andy10gen ?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/773788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "onyxmaster": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676141", "body": "No particular reason, I justified its placement on the basis that GridFile constructor is private so existing code shouldn't be broken by this change (the default value is not provided for the same reason), and that slaveOk felt to me as something immutable and should be close to another immutable (grid) both in field definitions (line 200 below) and the argument list.\nIf you feel that GridFile constructor might become protected or public some day, I agree with you that slaveOk should be placed at the end and, probably have the default false value added.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676142", "body": "If you prefer, I can make changes on my end and update the pull request, just tell me.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676142/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "milkie": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757112", "body": "I think we'll need to actually create the file on first use, rather than requesting the user do it.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757112/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757116", "body": "Also we should put in a link to the new documentation site and a mention of the mongo-users google group.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757116/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757123", "body": "_isatty() instead?  we already use it in util/log.cpp\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757123/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "lcapaldo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757185", "body": "Just put #define isatty _isatty in platform/windows?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757190", "body": "Yeah I can do both these things.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "cwestin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764933", "body": "I think $strlen on a nonexistent field should return zero.  This fits the operation of other operators, which are as forgiving as possible unless the result is definitively wrong.  Here, I think it makes sense to treat this as an empty string.  However, I think it should be an error to call $strlen on a real field that does not contain a string value.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764933/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764939", "body": "Why did you remove these assertions?  Since they seem to work for everyone else, it's safer to first assume there's something wrong on your setup, and that we should figure out what that is.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764939/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764972", "body": "Before this, I would check for pString.get() being NULL, or pString.getType() == jstNULL (from bson/bsontypes.h).  If either of those is true, return Value::getZero().  That will handle returning zero for a non-existent or null valued field.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}}, "8": {"GeertBosch": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/3020767b4a20fca53d4b58b440085933c8eb7c3e", "message": "SERVER-32606 Oplog read time may only decrease during rollback"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "henrikingo": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/086cec19cbd0f0a4a122d4cfa6f099dbaa2ef21d", "message": "SERVER-32260 Call workload_setup.py from system_perf.yml and longevity.yml"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "benety": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/7713d5531c663603d17fff1267d013e0b6867e5b", "message": "SERVER-32284 rename ReplicationCoordinator::reserveSnapshotName() to getMinimumVisibleSnapshot()"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/25b7af8b7367de11f0d4d864bd6a51983227c494", "message": "SERVER-32284 remove unused last snapshot support from ReplClientInfo"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/13a33d961f6936dc8290b8bb80f5c5b9e599f0a9", "message": "SERVER-32284 ReplicationCoordinatorImpl::_doneWaitingForReplication_inlock() always assumes null minSnapshot"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/d071ff8278abcd05d63c0367c49284645e844bcc", "message": "SERVER-32284 ReplicationCoordinatorImpl::_awaitReplication_inlock() always assumes null minSnapshot"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/0d97768115d093ed0041fff8c0ef39ba30c07e3f", "message": "SERVER-32284 remove ReplicationCoordinator::awaitReplicationOfLastOpForClient()"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/7ed79c16f619cab2195edf9cad37a3c4765c8a23", "message": "SERVER-32284 collMod waits for UUID schema changes using ReplicationCoordinator::awaitReplication() instead of awaitReplicationOfLastOpForClient()"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/f2af0ad889f1cfca7a311d53912c5b808500ea77", "message": "SERVER-29200 remove references to OplogEntry::raw from MultiApplier"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/25f0c6ae6c4fa80244cadb8a6bfcbf9bcc8b7742", "message": "SERVER-29200 migrate SyncTail::getMissingDoc() and fetchAndInsertMissingDoc() to accept OplogEntry instead of BSONObj"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/939a30aba1703c939b0352bded4b56257c8a0bec", "message": "SERVER-29200 add OplogEntry::getOperationToApply()\n\nremove references to OplogEntry::raw from rollback, prefetchPagesForReplicatedOp() and SyncTail"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sulabhM": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/8fd172e330b5af597bfba60d0bb7add8dc1a236c", "message": "SERVER-32506 OSX Mobile SE variant: Tag tests to skip on mobile SE"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "RedBeard0531": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/daf6c4714b45aeb8ba1a09380135b3267c4cc280", "message": "SERVER-32617 Fix code that reconstructs status with just code and string"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/4dc36c7ccb6b5b8f7d865993b5d648fe6dc4b7c7", "message": "SERVER-32684 Make mongos write command objects hold Status directly"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/68b961b28f5dd40501f0ef9b6c6b515ff1ec7cfd", "message": "SERVER-32673 Make WorkingSetCommon::buildMemberStatusObject handle ErrorExtraInfo"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/b165c1e9275016dc15d071d147cec0e5b1bc1f31", "message": "SERVER-32587 Convert StaleConfigException to use ErrorExtraInfo"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/84c3f83421b262028081296e4c387d29691ea376", "message": "SERVER-32586 Convert ResolvedView to use ErrorExtraInfo"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hanumantmk": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/8ee6b3d31756d7939480f1283ec53af3bd6eb489", "message": "SERVER-32683 JS JIT off by default\n\nTurn off the spidermonkey jit by default."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "will62794": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/6f885ea4579c04bd73c4d6fecc497520105f2609", "message": "SERVER-30818 Cleanup comments in background.h"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/aa35454e98a3026a7c44cc736d2326a3fa38e7b3", "message": "SERVER-30818 Add function to await background operations on multiple databases"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kevinAlbs": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/b9decc492c0ff942d5bcd6e8c799de70fa0839af", "message": "SERVER-21630 run CheckReplDBHash on csrs and shard replset\n\nAnd run ValidateCollections hook on priority=0 secondaries."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "elouie99": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/f7d45863daa61920d3b6ee8abbf105833767a223", "message": "SERVER-31628 Always use a python virtualenv in etc/evergreen.yml"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lukech": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/23914068c331a42d1f98de0d58caecf0e391549a", "message": "Import wiredtiger: 357efdd4ce279efc71ff618c59fe1b903ef80bb2 from branch mongodb-3.8\n\nref: 9e50448231..357efdd4ce\nfor: 3.7.2\n\nWT-3565       Test and understand mixed timestamp/no-timestamp usage to same data\nWT-3597       Add a diagnostic check for updates to the same key out of timestamp order\nWT-3632       Increase how granularly cache usage settings can be configured\nWT-3695       format failed to report a stuck cache\nWT-3740       race in page dirty-byte decrement.\nWT-3767       Avoid lookaside instantiation for faster reads\nWT-3775       Improve commit timestamp is older than oldest timestamp error message\nWT-3792       LSM version 1 metadata incompatibility\nWT-3796       Report a better error message if transaction commit fails\nWT-3799       Test/format with timestamps enabled pin cache full\nWT-3809       Fix a bug in lookaside related to birthmarks\nWT-3811       Python scripts for visualizing operation tracking files\nWT-3818       __rec_txn_read() code order cleanup\nWT-3825       Fix calculation of CPU ticks per unit time\nWT-3826       random-abort test failure\nWT-3827       test_compact02 failure\nWT-3828       Link error on OS/X for __wt_process data reference\nWT-3831       uninitialized buffer value in statlog server path comparison\nWT-3832       Fixup shell script warning messages\nWT-3833       test/format cache_minimum value error\nWT-3841       Fix error message pattern in timestamp09\nWT-3842       full-build Friday & lint\nWT-3844       Checkpoints can hang on limbo pages\nWT-3845       Compiler warning in examples using GCC 5.4.0"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kmahar": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/23870b6aecac924a15af49bb7abe2f8e1cda2aa8", "message": "SERVER-30744 Move dropCollection logic from ShardingCatalogClient into ShardingCatalogManager"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kaloianm": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/7f4e454907f14a5a82195d15e6ee96cbcd6d4d5b", "message": "SERVER-32447 Add a mock CatalogCache::getCollectionRoutingInfoAt method\n\nThe added method always returns the routing information at the latest\ntimestamp."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "visualzhou": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/7d2f43adabb344f93ef8bec523efa3187bcf4ce6", "message": "SERVER-32317 Make sharding chunk manipulation operations use doTxn instead of applyOps"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vessy-mongodb": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/35c44dbd37c0167cc07420c8ea286ad6edfac7ff", "message": "SERVER-30347 Fail startup when running wiredTiger with --nojournal as part of a replica set"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "BillyDonahue": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/a8561f9a3775083eaf17e648850791a2cbd37893", "message": "SERVER-32070 remove stdx::bind (final patch)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mtrussotto": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/ef81d53b986aa701c722820a204eba73a635f748", "message": "SERVER-32726 Fix out-of-order error code in update_driver.cpp"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cramaechi": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1203", "title": "[SERVER-32259] Update wiredtiger_util.cpp", "body": "WiredTigerUtil::fetchTypeAndSourceURI() is using\r\ninvariant(colgroupResult.isOK()) instead of\r\ninvariantOK(colgroupResult.getStatus()). This means that if the\r\ninvariant ever fires, we don't know what the bad Status actually was.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "JunHe77": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1202", "title": "SERVER-32576: Merge ARM64 support to use 64-bit optimized code path", "body": "Change-Id: Icd2e0f9378952bbd811b54fe60a7f3895c960e92\r\nSigned-off-by: Jun He <jun.he@arm.com>", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kakts": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1198", "title": "Fix typos in config_server_test_fixture.cpp and dpml_error_codes.c", "body": "## Summary\r\nI found some typos in files as below.\r\n\r\n```\r\nsrc/mongo/s/config_server_test_fixture.cpp\r\nsrc/third_party/IntelRDFPMathLib20U1/LIBRARY/float128/dpml_error_codes.c\r\n```\r\n\r\nreponse  \u2192 response\r\n\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zhihuiFan": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1197", "title": "SERVER-4785 maintain slowms at database level", "body": "See issue at https://jira.mongodb.org/browse/SERVER-4785 and https://jira.mongodb.org/browse/SERVER-18946 \r\n\r\n\r\nHere is the test result.\r\n\r\n\r\nzhifan@zhifan-dev16:~/github/mongo$ ./mongo\r\n> db.getProfilingStatus()\r\n{ \"was\" : 0, \"slowms\" : 100, \"sampleRate\" : 1 }\r\n> db.setProfilingLevel(0, 1)\r\n{ \"was\" : 0, \"slowms\" : 100, \"sampleRate\" : 1, \"ok\" : 1 }\r\n> db.getProfilingStatus()\r\n{ \"was\" : 0, \"slowms\" : 1, \"sampleRate\" : 1 }\r\n> for(var i =0; i<10000; i++) {db.test.save({'i': i})}\r\nWriteResult({ \"nInserted\" : 1 })\r\n> use test2\r\nswitched to db test2\r\n> db.getProfilingStatus()\r\n{ \"was\" : 0, \"slowms\" : 100, \"sampleRate\" : 1 } . -- test 2: still 100\r\n> for(var i =0; i<10000; i++) {db.test.save({'i': i})}\r\nWriteResult({ \"nInserted\" : 1 })\r\n\r\n\r\nas a result:  we capture the slow queries from test database but not for test2 database.\r\n\r\n`\r\n2017-12-26T13:38:32.678+0800 I COMMAND  [conn1] command test.test appName: \"MongoDB Shell\" command: insert { insert: \"test\", ordered: true, $db: \"test\" } ninserted:1 keysInserted:1 numYields:0 reslen:29 locks:{ Global: { acquireCount: { r: 3, w: 1 } }, Database: { acquireCount: { w: 1, R: 1 } }, Collection: { acquireCount: { w: 1 } } } protocol:op_msg 3ms\r\n\r\n`\r\n\r\n  ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bmanojlovic": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1195", "title": "initial scons 3.0.1 and python3 build support", "body": "This PR allows building mongo with use of latest (3.0.1) scons which now uses python3 by default.\r\nThere are still a lot of rough edges but on the end it allows building binary mongod\r\n\r\npython version:\r\n```\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> python3 --version\r\nPython 3.6.3\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> \r\n```\r\nscons version:\r\n```\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> scons -v\r\nSCons by Steven Knight et al.:\r\n        script: v3.0.1.74b2c53bc42290e911b334a6b44f187da698a668, 2017/11/14 13:16:53, by bdbaddog on hpmicrodog\r\n        engine: v3.0.1.74b2c53bc42290e911b334a6b44f187da698a668, 2017/11/14 13:16:53, by bdbaddog on hpmicrodog\r\n        engine path: ['/usr/lib/scons-3.0.1/SCons']\r\nCopyright (c) 2001 - 2017 The SCons Foundation\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched>\r\n```\r\nand finally running scons on my machine\r\n```\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> scons -j 8 MONGO_VERSION=3.6.0  --disable-warnings-as-errors  --ssl\r\nscons: Reading SConscript files ...\r\nMkdir(\"build/scons\")\r\nscons version: 3.0.1\r\npython version: 3 6 3 final 0\r\nChecking whether the C compiler works... yes\r\nChecking whether the C++ compiler works... yes\r\n...\r\n...\r\n...\r\nranlib build/blah/mongo/db/query/libquery_common.a\r\nGenerating library build/blah/mongo/db/libmongod_options.a\r\nranlib build/blah/mongo/db/libmongod_options.a\r\nLinking build/blah/mongo/mongod\r\nInstall file: \"build/blah/mongo/mongod\" as \"mongod\"\r\nscons: done building targets.\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> \r\n```\r\nand of course running built binary\r\n```\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> ./mongod --dbpath /tmp/ --bind_ip 127.0.0.1\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] MongoDB starting : pid=2937 port=27017 dbpath=/tmp/ 64-bit host=pc\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] db version v3.6.0\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] git version: 9038d0a67ee578aa68ef8482b1fc98750d1007a6\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] OpenSSL version: OpenSSL 1.1.0g-fips  2 Nov 2017\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] allocator: tcmalloc\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] modules: none\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] build environment:\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten]     distarch: x86_64\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten]     target_arch: x86_64\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] options: { net: { bindIp: \"127.0.0.1\" }, storage: { dbPath: \"/tmp/\" } }\r\n2017-12-22T18:52:02.566+0000 I STORAGE  [initandlisten] Detected data files in /tmp/ created by the 'wiredTiger' storage engine, so setting the active storage engine to 'wiredTiger'.\r\n2017-12-22T18:52:02.566+0000 I STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=15542M,session_max=20000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000),statistics_log=(wait=0),verbose=(recovery_progress),\r\n2017-12-22T18:52:02.637+0000 I STORAGE  [initandlisten] WiredTiger message [1513968722:637511][2937:0x7f87663729c0], txn-recover: Main recovery loop: starting at 6/4736\r\n2017-12-22T18:52:02.679+0000 I STORAGE  [initandlisten] WiredTiger message [1513968722:679111][2937:0x7f87663729c0], txn-recover: Recovering log 6 through 7\r\n2017-12-22T18:52:02.706+0000 I STORAGE  [initandlisten] WiredTiger message [1513968722:706386][2937:0x7f87663729c0], txn-recover: Recovering log 7 through 7\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] ** WARNING: /sys/kernel/mm/transparent_hugepage/enabled is 'always'.\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] **        We suggest setting it to 'never'\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] ** WARNING: soft rlimits too low. rlimits set to 4096 processes, 64000 files. Number of processes should be at least 32000 : 0.5 times number of files.\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.736+0000 I FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory '/tmp/diagnostic.data'\r\n2017-12-22T18:52:02.737+0000 I NETWORK  [initandlisten] waiting for connections on port 27017\r\n```\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "m-masataka": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1191", "title": "The GCC version should be updated in SConstruct", "body": "In ``docs/building.md`` , It require GCC version 5.4.0 or newer, but ``SConstruct`` require 5.3.0 or newer.\r\nIs it mistake? ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "judu": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1186", "title": "Fix build.", "body": "Without these using `std::string`, mongodb does not build here.\r\n\r\nI'm using gcc 6.4.0.\r\n\r\nPlease ask if you need more information about my build :)", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zydcom": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1171", "title": "SERVER-30636\uff1afix range deleter crash", "body": "This patch can be also used for v3.2 ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ryankall": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1169", "title": "Server 25311", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/1140", "title": "Verbosity bug", "body": "now the Explain command will not accept unknown command like verbos: 'queryPlanner'", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lorien": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1162", "title": "Fix error in command example in mongorestore.1 man", "body": "The trailing slash argument is missing in mongorestore command example in debian mans.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "SunguckLee": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1151", "title": "Support prefix match for full-text search", "body": "Add range search feature on full text search (original version has only exact match)\r\n\r\nFor CJK language, mongodb does not support stemmer for full text search.\r\nAlso not easy to implement stemmer for those language (Especially Korean).\r\nSo we usually use N-gram parser for full text search not supported mongodb yet.\r\n\r\nFortunately in Korean, we use space character between words and Korean(and also Japanese) use only suffix not prefix. So we can use mongodb full text search if mongodb support prefix match in fulltext. So I propose this simple feature.\r\n\r\n>> Match range of original fulltext search\r\n    * '\ud55c\uae00' <= match_range <= '\ud55c\uae00'\r\n    * '\ud14c\uc2a4\ud2b8' <= match_range <= '\ud14c\uc2a4\ud2b8'\r\n    * '\uc774\uc131' <= match_range <= '\uc774\uc131'\r\n    * '\ud55c' <= match_range <= '\ud55c'\r\n\r\n>> Match range of patched fulltext search\r\n    * '\ud55c\uae00' <= match_range < '\ud55c\uae01'\r\n    * '\ud14c\uc2a4\ud2b8' <= match_range < '\ud14c\uc2a4\ud2b9'\r\n    * '\uc774\uc131' <= match_range < '\uc774\uc132'\r\n    * '\ud55c' <= match_range < '\ud55d'\r\n\r\nI hope user can control this search mode (exact or prefix match) by query parameter or internal parameter.\r\n\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sam-pf": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1149", "title": "change log message for CRL loading", "body": "The log message from _setupCRL was misleading.  It is not the number of revoked certificates that X509_load_crl_file returns.  It is the number of CRLs (X509_CRL structures) that it successfully loads that it returns.\r\n\r\nhttps://github.com/openssl/openssl/blob/c0452248ea1a59a41023a4765ef7d9825e80a62b/crypto/x509/by_file.c\r\n\r\nhttp://www.umich.edu/~x509/ssleay/x509_crls.html\r\n  ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nleite": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1136", "title": "SERVER-1889 internal replication nic", "body": "- support for internal replication nic", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kolisergej": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1128", "title": "[SERVER-8958] Replace strtod/strtol/atoi/atol/etc calls with parseNumberFromString<T>", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ZharkovIlia": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1122", "title": "General Improvements v2", "body": "Elimination of some redundancy. Some function arguments are passed by reference. Few bugs are fixed.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "thesebas": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1121", "title": "Fix for negative Date timezone offsets ", "body": "When uncommented this `// print a non-UTC time` block and changed `var UTC = '';` got invalid timezone offsets like: `ISODate(\"2016-11-14T00:00:00+-100\")`. This makes Date be displayed as `ISODate(\"2016-11-14T00:00:00+0100\")`", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "danharel": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1093", "title": "SERVER-24519 Added framework for micro benchmark tools", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Soullivaneuh": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1061", "title": "[WIP] [3.x] Alpine linux compatibility", "body": "Same as #1060 but for 3.x version.\n- [x] alpine-release on processinfo\n- [x] Fix `'ELFCLASS__ELF_NATIVE_CLASS' was not declared in this scope`\n- [x] Fix `gnu_get_libc_version` usage that does not exist on Musl\n- [x] Fix undefined `mallinfo` function\n- [x] error_code.ipp:110:22: error: could not convert 'strerror_r(value, ((char*)(& buf)), sizeof (buf))' from 'int' to 'std::__cxx11::string {aka std::__cxx11::basic_string<char>}\n  - https://github.com/chriskohlhoff/asio/pull/95\n- [ ] `third_party/gperftools-2.2`: `error: '__off64_t' has not been declared`\n  - https://github.com/gperftools/gperftools/issues/693\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "salessandri": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1027", "title": "SERVER-8839 TimerStats and TimerHolder should work with microseconds.", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "e-siedler": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/275", "title": "SERVER-2541 Windows performance counters implemented", "body": "Fully functional windows performance counters imlpemented as a mongod.exe Module.\n\nSee README. See jira SERVER-2541 for some additional notes.\n- No Visual Studio project file have been updated. (I can't do that with VS Express).\n- I didn't make use of this new \"buildscripts/moduleconfig.py\" infrastructure mostly because of my incompetence: new to scons, new to python, didn't like both. 8-)\n- There is a new artifact that needs to be distributed along with mongod.exe: mongod.man. I didn't look into that (packaging).\n\nThanks\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bgianfo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/501190", "body": "Not sure what the deal is, but I made a last minute change before I committed, breaking this patch. \nhttp://github.com/bgianfo/mongo/commit/dc2c046c95c2b9ae8d2ec9f0d26987951437d502#diff-0\n\nPulling this commit also, you have the complete working package. :)\n\nI would add it to the pull request, but github seems to have made that impossible? \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/501190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "halfdan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/597405", "body": "When will this get integrated? Any feedback?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/597405/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "erh": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/662702", "body": "We're going to start including a minimal set of boost in the source tree to avoid conflicts and too much branching in the code.\nThat will be in the 2.0 cycle and should be boost 1.45, so not sure we want to do this right now, especially right before 1.8.0\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/662702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724077", "body": "Couple of notes: \n- we're not going to change the type from number to string\n- names should be consistent between dbstats/collstats\n- keeping commit log clean is important\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724094", "body": "dbstats already has a named value for this option, so you should use the same one.\n\nre: the commit stream, each commit should be a logical unit, but we also want to keep the number reasonable.  There are 9 listed above (though i guess really only 7)\nFor example, if you change a command, the change to the shell should be in the same commit.\n\nWe're in lockdown for 1.8, so will be a while before we would merge this in, and not sure this is exactly where we'll want to go with it.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742853", "body": "I'm seeing about a 10% improvement.\nThe problem is that Array doesn't currently require the elements to be in order.\nIn fact some implementations have it like this\n{ \"0\" : 1 , \"1\" : 1 , \"10\" : 10 , \"2\" : 2 , ... }\n So this patch will break some clients.\nThere is a more complex patch you could do which verifies the order while iterating.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742895", "body": "No, the spec doesn't say it has to be in order.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742895/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742903", "body": "I did this:\nhttps://github.com/mongodb/mongo/commit/cd834438e55086442b264dfc6cc9425d8a34f0bd\n\nWhich is about 80% of the improvement\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1086311", "body": "Can you break these into different parts?\nSome look ok, others not so sure about (FuncMap for example)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1086311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103470", "body": "Right, but there seem to be others that are unrelated.\nWould just be better if we can make each logical change separate.\n\nOn Wed, May 4, 2011 at 10:55 PM, testn\nreply@reply.github.com\nwrote:\n\n> funcMap has to be there to help perform function lookup\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/pull/35#issuecomment-1103444\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103470/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1272158", "body": "There are a few issues that I see at first glance.\n\n1) why did you remove the sparse check\n2) your'e not checking the type of \"filter\" correctly\n3) _matcher leaks - should be a scoped_ptr\n4) i don't think the queryoptimizer change is correct\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1272158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1430432", "body": "Fixed using the helper.\nThanks for pointing out\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1430432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/100728", "body": "vs2008 vs vs2010 issue\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/100728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/116980", "body": "don't comment out the lines in the method, just comment out doTest() etc...\nmakes it easer to test, etc...\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/116980/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/333394", "body": "The one you mentioned should be that way i believe.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/333394/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676120", "body": "Is there a reason you put slaveOk in the middle rather than the end so we can preserve backwards compatibility?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "adrien-mogenet": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724088", "body": "Ok Erh !\n- I had a doubt about keeping the types ; I will keep numbers when displaying raw values as currently\n- What do you mean about \"consistent names between dbstats/collstats\" ? I didn't change anything... ( I think )\n- Which rule did I not follow about commit log messages ? According to the doc (http://www.mongodb.org/display/DOCS/Git+Commit+Rules) : I have to put [SERVER-XXX] on every commit ?\n\nThanks,\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724088/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/250853", "body": "There is no way to make it cleaner using boost::filesystem ?\nhttp://www.boost.org/doc/libs/1_45_0/libs/filesystem/v2/doc/index.htm\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/250853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/335318", "body": "Why not checking that scale is a multiple of 1024 ?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/335318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "testn": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742681", "body": "With simple M/R such as collection count/max/min, the execution time can be cut in half\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742681/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742879", "body": "But this method is the conversion from BSONObj to jsval. Shouldn't BSONObj with Array type be in order according to the specification?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742879/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742912", "body": "That would work. \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103444", "body": "funcMap has to be there to help perform function lookup\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103444/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103889", "body": "okay. will rebranch it again and put the link\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103889/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "zippy1981": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/787400", "body": "WOO-HOO!!!!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/787400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/89046", "body": "Good to see I'm not the only one improving error messages! \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/89046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/90091", "body": "Is it necessarily a good idea to have class diagrams in the visual studio projects? These projects will always be an afterthought (and rightly so) to the scons project.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/90091/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/96083", "body": "Confirmed that actually worked.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/96083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/98475", "body": "stoll() doesn't exist in Visual Studio 2008. I'm installing the windows 7 SDK to see if that will rectify it, but perhaps even being dirty and calling atol() would be better than causing build problems.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/98475/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/98552", "body": "The older, more conservative function is _strtoi64()\nFix in http://github.com/zippy1981/mongo/commit/f7b7c07e2a72011b8dbd72d10dcbaa22d8e5fb54\nStackoverflow discussion is in http://stackoverflow.com/questions/3106026/is-there-a-stoll-stroll-string-to-long-long-alternative-in-visual-studio-20/3106060#3106060\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/98552/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/99757", "body": "Test code I used for this.:\n\n<pre>\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string>\n\nnamespace mongo {\n\n    inline void uasserted(int msgid , char* msg) { printf(\"Msg: %s\", msg); exit(4); }\n    /* \"user assert\".  if asserts, user did something wrong, not our code */\n    #define MONGO_uassert(msgid, msg, expr) (void)( (!!(expr)) || (mongo::uasserted(msgid, msg), 0) )\n    #define uassert MONGO_uassert\n\n    inline long long parseLL( const char *n );\n\n\n    // expect that n contains a base ten number and nothing else after it\n    // NOTE win version hasn't been tested directly\n    inline long long parseLL( const char *n ) {\n        long long ret;\n        uassert( 13307, \"cannot convert empty string to long long\", *n != 0 );\n#if !defined(_WIN32)\n        char *endPtr = 0;\n        errno = 0;\n        ret = strtoll( n, &endPtr, 10 );\n        uassert( 13305, \"could not convert string to long long\", *endPtr == 0 && errno == 0 );\n#else\n#if _MSC_VER>=1600\n        size_t endLen = 0;\n        try {\n            ret = std::stoll( n, &endLen, 10 );\n        } catch ( ... ) {\n            endLen = 0;\n        }\n        uassert( 13306, \"could not convert string to long long\", endLen != 0 && n[ endLen ] == 0 );\n#else // stoll() wasn't introduced into VS 2010.\n        char* endPtr = (char *)&n[strlen(n) - 1];\n        try {\n            ret = _strtoi64( n, &endPtr, 10 );\n        } catch ( ... ) {\n            endPtr = 0;\n        }\n        uassert( 13310, \"could not convert string to long long\", *endPtr == 0 );\n#endif // _MSC_VER >= 16\n#endif // !defined(_WIN32)\n        return ret;\n    }\n\n}\n\nvoid main () {\n    //printf(\"_MSC_VER: %d\\n\", _MSC_VER);\n\n    char szNumber[] = \"999999999\";\n    printf(\"number '%s': %d\\n\\n\", szNumber, mongo::parseLL(szNumber));\n    \n    char szNumberWhitespace[] = \"   999999999   999\";\n    printf(\"number '%s': %d\\n\\n\", szNumberWhitespace, mongo::parseLL(szNumberWhitespace));\n    \n    char szNumberBad[] = \"99r9dd999999\";\n    printf(\"number '%s': %d\\n\\n\", szNumberBad, mongo::parseLL(szNumberBad));\n}\n</pre>\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/99757/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/99771", "body": "Dwight,\n\nShouldn't we also check the error cases?\n\nI'll confess I'm not running the unit tests on my machine. I'll start doing that.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/99771/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/100400", "body": "The UTF-8 BOM, signifying nothing, and annoying the hell out of developers and users.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/100400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/100595", "body": "Was the near/far thing a 64 bit thing? I though the near/far dated back to win16 programming?\n\nRegardless, it compiles.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/100595/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/124765", "body": "Wouldn't \"-o -\" be more inline with unix convention than \"-o stdout\"? Or is the problem boost parsing? \n\nThen again, part of me thinks default mongodump behavior should be to stdout, and there shoulld be a new switch for current default behavior.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/124765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/132633", "body": "Double build break, double my bad. I'll have to start building on ubuntu to check these things.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/132633/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "s4y": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/875296", "body": "I just changed the contents of this pull request slightly. Somehow managed to fudge up a one-line fix!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/875296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1505577", "body": "Looks like this was fixed in e27fa36b4c47b277b6e140f641a1187b712d99ca. Cool!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1505577/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "radarek": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1021120", "body": "Guys, what is the progress of that? MongoDB needs count + distinct :).\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1021120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "defunctzombie": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1106255", "body": "Is there a reason this isn't being accepted? It is low risk while adding a desired build functionality.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1106255/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mattbillenstein": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1216540", "body": "Also added a commit to allow mongorestore to use \"-\" as stdin when given both --db and --collection\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1216540/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "JensRantil": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1248211", "body": "The above commented small fixes were now added to this pull request. Feel free to include whenever you want to.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1248211/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lqs": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1279530", "body": "@erh\n\ni think the sparse assertion is useless because _nFields always > 0. and the sparse index can be created even if there's two or more fields.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1279530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mrohnstock": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1386332", "body": "Since 2010 this don't get included to mongodb c++ driver. Is there any other way to get the double field from BSONObj?\n\nUsed: bsonobj.getField(\"whatever\").Double(), but will end with assereration error.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1386332/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1388754", "body": "forget it... bsonobj.getField(\"whatever\").numberDouble() did the trick, got another mistake in code - just ignore my input.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1388754/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lqez": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1414175", "body": "Wow, I _really_ need these cool patches.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1414175/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "plaes": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1586684", "body": "How about this?\n\n```\nelif os.sys.platform in ('linux2', 'linux3'):\n```\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1586684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mongodb": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/14485", "body": "this was just a test.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/14485/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "metagoto": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/53383", "body": "lol ;)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/53383/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "phase2": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/55958", "body": "Looks like a typo here:\n\nhttp://github.com/mongodb/mongo/commit/2b7eb102159a36129222afa1883ea3b15145e08b#L0R40\n\nSee &7 instead of &&\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/55958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "thbar": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/58482", "body": "Bravo :)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/58482/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "dwight": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/90094", "body": "that's an accident.  will remove.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/90094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/99795", "body": "sure.\n\nUnitTest is something that runs at every server startup.  so they must very light and fast.\n\n\"real\" tests should go in dbtests / test binary (or jstests if applicable)\n\nrunning tests v good idea.  see \"smoke\" page on wiki\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/99795/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/181437", "body": "right.  will take it out.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/181437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/165991", "body": "use unique_ptr here\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/165991/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "thomasst": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/96213", "body": "Shouldn't the constant MaxBSONObjectSize be used instead? In case one wants to customize the size.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/96213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "TonyGen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/117314", "body": "Eliot, please roll this commit back. I found a bug with it. I didn't think you would include it until I made a pull request to you. Thanks, Tony\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/117314/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "dmytton": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/181433", "body": "Won't this catch use of small oplog size when used with an arbiter? In your docs you recommend using a small oplog  http://www.mongodb.org/display/DOCS/Adding+an+Arbiter\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/181433/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "hackworks": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/248914", "body": "Could InterLockedExchange be used on windows and __sync_xor_and_fetch when GCC is used?\nFor windows:\nhttp://msdn.microsoft.com/en-us/library/ms683590(v=vs.85).aspx\nFor GCC:\nhttp://gcc.gnu.org/onlinedocs/gcc/Atomic-Builtins.html\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/248914/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "gregstuder": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/301135", "body": "detects int overflow in passed 2d bounds/parameters\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/301135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/328497", "body": "Major change here is basically to pull up the expand algorithm into the superclass.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/328497/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "shriharipandit": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/333336", "body": "You also need to make a similar change within void ReplicaSetMonitor::_checkHosts():\n\nLine 297: log(1) << \"updated set (\" << _name << \") to: \" << getServerAddress()\n\nPerhaps more places as well.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/333336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "tadmarshall": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/166291", "body": "This was part of my fixing the memory leak in the shell.  The problem was\nthat memory was allocated by strdup() and never freed.  Since strdup() calls\nmalloc(), I added matching free() calls.  This bit of code is on the #else\nside of an #ifdef USE_LINENOISE and so isn't in the current code, but if\nUSE_LINENOISE was turned off then the call to \"new char[1024]\" would end up\ngetting passed to free() and it seemed better to match malloc() with free()\ninstead of new with free().  Without changing the entire way this memory is\nallocated and freed (a bigger change) I can't just use unique_ptr in one\nspot.  strdup() calls malloc() and I can't switch to unique_ptr without\nreplacing the strdup() calls.  I was trying to make minimal changes to fix\nthe memory leak.\n\n-----Original Message-----\nFrom: Dwight Merriman\n[mailto:reply+p-165991-d7ea43fd753410cd3421867a9c1b3e0d018a6daf@reply.github\n.com] \nSent: Wednesday, October 12, 2011 1:50 AM\nTo: Tad Marshall\nSubject: Re: [mongo] SERVER-4043 -- fix tab completion in mid-code (#110)\n\n> @@ -313,7 +315,7 @@ char \\* shellReadline( const char \\* prompt , int\n> handlesigint = 0 ) {\n>      return ret;\n>  #else\n>      printf(\"%s\", prompt); cout.flush();\n> -    char \\* buf = new char[1024];\n\nuse unique_ptr here\n\n## \n\nReply to this email directly or view it on GitHub:\nhttps://github.com/mongodb/mongo/pull/110/files#r165991\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/166291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "hoffrocket": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/196130", "body": "should be \"return LOG_INFO;\"\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/196130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/196132", "body": "pragram ->  program\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/196132/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "amschwerin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660497", "body": "For exception safety, use a boost::scoped_ptr to hold the result of readDocument().\n\nboost::scoped_ptr<BSONObj> o(readDocument(file, buf, BUF_SIZE));\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660497/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660503", "body": "This function should not be inlined.  Implement it in the cpp file.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660503/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660530", "body": "Ditto on scoped_ptr, here.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676654", "body": "(1) Inlining it won't help performance.\n(2) Inlining it will increase the binary size.\n(3) Inlining it means that any time it changes, all modules that include tool.h must be recompiled, which slows down incremental compilation.  This is important to developers.\n\nSo, it does two bad things and no good things.  Don't inline it.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676654/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/694609", "body": "In the event that the file is truncated, the old code would alert for failure in the event that the input file was truncated, and did not contain an even multiple of 4 bytes.  This change will silently stop processing, which is a behavior change.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/694609/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/694614", "body": "\"isFifoFile\", instead of \"fifo\".\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/694614/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/774347", "body": "Thanks for pinging.  Will look again.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/774347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/794711", "body": "Haven't forgotten.  Really swamped over here.\n\nOn Fri, May 4, 2012 at 8:36 AM, Azat Khuzhin\nreply@reply.github.com\nwrote:\n\n> > \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0size_t amt = fread(buf, 1, 4, file);\n> > - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0// end of fifo/file\n> > - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0if ( feof(file) ) {\n> > - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0break;\n> \n> @andy10gen ?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/pull/205/files#r773788\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/794711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935900", "body": "I think this needs to default to None, or on systems where \"g++\" is not the default compiler, builds will fail when --cxx is not specified.  I.e., Windows/MSVC systems.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935900/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935902", "body": "Again, default to None.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935912", "body": "Though we haven't been very consistent in the past, SConstruct files are python code, and should follow PEP-8 style.\n\nconf.env.Replace(CXX=GetOption(\"cxx\"))\n\nNote where whitespace has been removed.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935918", "body": "I think I'd rather omit these print statements.  If we want to report which compilers are being used, we should do that separately from option setting.  The compiler command line and link flags show up in the output, anyways.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935918/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "azat": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/664362", "body": "Why it should?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/664362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/699717", "body": "@andy10gen, it will fail at https://github.com/mongodb/mongo/pull/205/files#L1R549 ( `m.done() == fileLength` ). Is it enough?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/699717/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/773788", "body": "@andy10gen ?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/773788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "onyxmaster": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676141", "body": "No particular reason, I justified its placement on the basis that GridFile constructor is private so existing code shouldn't be broken by this change (the default value is not provided for the same reason), and that slaveOk felt to me as something immutable and should be close to another immutable (grid) both in field definitions (line 200 below) and the argument list.\nIf you feel that GridFile constructor might become protected or public some day, I agree with you that slaveOk should be placed at the end and, probably have the default false value added.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676142", "body": "If you prefer, I can make changes on my end and update the pull request, just tell me.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676142/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "milkie": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757112", "body": "I think we'll need to actually create the file on first use, rather than requesting the user do it.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757112/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757116", "body": "Also we should put in a link to the new documentation site and a mention of the mongo-users google group.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757116/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757123", "body": "_isatty() instead?  we already use it in util/log.cpp\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757123/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "lcapaldo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757185", "body": "Just put #define isatty _isatty in platform/windows?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757190", "body": "Yeah I can do both these things.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "cwestin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764933", "body": "I think $strlen on a nonexistent field should return zero.  This fits the operation of other operators, which are as forgiving as possible unless the result is definitively wrong.  Here, I think it makes sense to treat this as an empty string.  However, I think it should be an error to call $strlen on a real field that does not contain a string value.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764933/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764939", "body": "Why did you remove these assertions?  Since they seem to work for everyone else, it's safer to first assume there's something wrong on your setup, and that we should figure out what that is.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764939/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764972", "body": "Before this, I would check for pString.get() being NULL, or pString.getType() == jstNULL (from bson/bsontypes.h).  If either of those is true, return Value::getZero().  That will handle returning zero for a non-existent or null valued field.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}}}}